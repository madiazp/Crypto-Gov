.code
  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000			library BN256G2 {\n    uint256...
  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000			library BN256G2 {\n    uint256...
  PUSH B			  
  DUP3 			TBX = 0
  DUP3 			nstant TW
  DUP3 			ternal 
  CODECOPY 			int256 internal constant TWIST...
  DUP1 			interna
  MLOAD 			nt256 internal
  PUSH 0			 
  BYTE 			;\n    uint256 internal 
  PUSH 73			a138
  EQ 			c24a138e5;\n    uint256 intern...
  PUSH 0			T
  DUP2 			tant TWISTBY = 0x971
  EQ 			tant TWISTBY = 0x971
  PUSH [tag] 2			tant TWISTBY = 0x971
  JUMPI 			tant TWISTBY = 0x971
  PUSH [tag] 1			3267e6dc24a138e5;\n    uint256...
  JUMP 			3267e6dc24a138e5;\n    uint256...
tag 2			tant TWISTBY = 0x971
  JUMPDEST 			tant TWISTBY = 0x971
  INVALID 			TBY = 0x9
tag 1			3267e6dc24a138e5;\n    uint256...
  JUMPDEST 			3267e6dc24a138e5;\n    uint256...
  POP 			3267e6dc24a138e5;\n    uint256...
  ADDRESS 			2cafadeed
  PUSH 0			4
  MSTORE 			3af0fed4cd2cafadeed8
  PUSH 73			e4a2
  DUP2 			4e52d18
  MSTORE8 			4a74fa084e52d1852e4a2b
  DUP3 			nt inte
  DUP2 			2;\n    
  RETURN 			85c315d2;\n    uint inter
.data
  0:
    .code
      PUSHDEPLOYADDRESS 			library BN256G2 {\n    uint256...
      ADDRESS 			library BN256G2 {\n    uint256...
      EQ 			library BN256G2 {\n    uint256...
      PUSH 80			library BN256G2 {\n    uint256...
      PUSH 40			library BN256G2 {\n    uint256...
      MSTORE 			library BN256G2 {\n    uint256...
      PUSH 4			library BN256G2 {\n    uint256...
      CALLDATASIZE 			library BN256G2 {\n    uint256...
      LT 			library BN256G2 {\n    uint256...
      PUSH [tag] 1			library BN256G2 {\n    uint256...
      JUMPI 			library BN256G2 {\n    uint256...
      PUSH 0			library BN256G2 {\n    uint256...
      CALLDATALOAD 			library BN256G2 {\n    uint256...
      PUSH 100000000000000000000000000000000000000000000000000000000			library BN256G2 {\n    uint256...
      SWAP1 			library BN256G2 {\n    uint256...
      DIV 			library BN256G2 {\n    uint256...
      DUP1 			library BN256G2 {\n    uint256...
      PUSH 55A3E90F			library BN256G2 {\n    uint256...
      EQ 			library BN256G2 {\n    uint256...
      PUSH [tag] 2			library BN256G2 {\n    uint256...
      JUMPI 			library BN256G2 {\n    uint256...
      DUP1 			library BN256G2 {\n    uint256...
      PUSH 61A931EC			library BN256G2 {\n    uint256...
      EQ 			library BN256G2 {\n    uint256...
      PUSH [tag] 3			library BN256G2 {\n    uint256...
      JUMPI 			library BN256G2 {\n    uint256...
      DUP1 			library BN256G2 {\n    uint256...
      PUSH B73AB75D			library BN256G2 {\n    uint256...
      EQ 			library BN256G2 {\n    uint256...
      PUSH [tag] 4			library BN256G2 {\n    uint256...
      JUMPI 			library BN256G2 {\n    uint256...
    tag 1			library BN256G2 {\n    uint256...
      JUMPDEST 			library BN256G2 {\n    uint256...
      PUSH 0			library BN256G2 {\n    uint256...
      DUP1 			library BN256G2 {\n    uint256...
      REVERT 			library BN256G2 {\n    uint256...
    tag 2			function GetFieldModulus() pub...
      JUMPDEST 			function GetFieldModulus() pub...
      PUSH [tag] 5			function GetFieldModulus() pub...
      PUSH [tag] 6			function GetFieldModulus() pub...
      JUMP [in]			function GetFieldModulus() pub...
    tag 5			function GetFieldModulus() pub...
      JUMPDEST 			function GetFieldModulus() pub...
      PUSH 40			function GetFieldModulus() pub...
      MLOAD 			function GetFieldModulus() pub...
      DUP1 			function GetFieldModulus() pub...
      DUP3 			function GetFieldModulus() pub...
      DUP2 			function GetFieldModulus() pub...
      MSTORE 			function GetFieldModulus() pub...
      PUSH 20			function GetFieldModulus() pub...
      ADD 			function GetFieldModulus() pub...
      SWAP2 			function GetFieldModulus() pub...
      POP 			function GetFieldModulus() pub...
      POP 			function GetFieldModulus() pub...
      PUSH 40			function GetFieldModulus() pub...
      MLOAD 			function GetFieldModulus() pub...
      DUP1 			function GetFieldModulus() pub...
      SWAP2 			function GetFieldModulus() pub...
      SUB 			function GetFieldModulus() pub...
      SWAP1 			function GetFieldModulus() pub...
      RETURN 			function GetFieldModulus() pub...
    tag 3			function ECTwistAdd(\n        ...
      JUMPDEST 			function ECTwistAdd(\n        ...
      PUSH [tag] 7			function ECTwistAdd(\n        ...
      PUSH 4			function ECTwistAdd(\n        ...
      DUP1 			function ECTwistAdd(\n        ...
      CALLDATASIZE 			function ECTwistAdd(\n        ...
      SUB 			function ECTwistAdd(\n        ...
      PUSH 100			G2 
      DUP2 			BN2
      LT 			ry BN256G2 {
      ISZERO 			br
      PUSH [tag] 8			br
      JUMPI 			br
      PUSH 0			i
      DUP1 			5
      REVERT 			  uint256 in
    tag 8			br
      JUMPDEST 			br
      DUP2 			function ECTwistAdd(\n        ...
      ADD 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      DUP1 			function ECTwistAdd(\n        ...
      DUP1 			function ECTwistAdd(\n        ...
      CALLDATALOAD 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      PUSH 20			function ECTwistAdd(\n        ...
      ADD 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      SWAP3 			function ECTwistAdd(\n        ...
      SWAP2 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      DUP1 			function ECTwistAdd(\n        ...
      CALLDATALOAD 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      PUSH 20			function ECTwistAdd(\n        ...
      ADD 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      SWAP3 			function ECTwistAdd(\n        ...
      SWAP2 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      DUP1 			function ECTwistAdd(\n        ...
      CALLDATALOAD 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      PUSH 20			function ECTwistAdd(\n        ...
      ADD 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      SWAP3 			function ECTwistAdd(\n        ...
      SWAP2 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      DUP1 			function ECTwistAdd(\n        ...
      CALLDATALOAD 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      PUSH 20			function ECTwistAdd(\n        ...
      ADD 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      SWAP3 			function ECTwistAdd(\n        ...
      SWAP2 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      DUP1 			function ECTwistAdd(\n        ...
      CALLDATALOAD 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      PUSH 20			function ECTwistAdd(\n        ...
      ADD 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      SWAP3 			function ECTwistAdd(\n        ...
      SWAP2 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      DUP1 			function ECTwistAdd(\n        ...
      CALLDATALOAD 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      PUSH 20			function ECTwistAdd(\n        ...
      ADD 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      SWAP3 			function ECTwistAdd(\n        ...
      SWAP2 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      DUP1 			function ECTwistAdd(\n        ...
      CALLDATALOAD 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      PUSH 20			function ECTwistAdd(\n        ...
      ADD 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      SWAP3 			function ECTwistAdd(\n        ...
      SWAP2 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      DUP1 			function ECTwistAdd(\n        ...
      CALLDATALOAD 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      PUSH 20			function ECTwistAdd(\n        ...
      ADD 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      SWAP3 			function ECTwistAdd(\n        ...
      SWAP2 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      POP 			function ECTwistAdd(\n        ...
      POP 			function ECTwistAdd(\n        ...
      POP 			function ECTwistAdd(\n        ...
      PUSH [tag] 9			function ECTwistAdd(\n        ...
      JUMP [in]			function ECTwistAdd(\n        ...
    tag 7			function ECTwistAdd(\n        ...
      JUMPDEST 			function ECTwistAdd(\n        ...
      PUSH 40			function ECTwistAdd(\n        ...
      MLOAD 			function ECTwistAdd(\n        ...
      DUP1 			function ECTwistAdd(\n        ...
      DUP6 			function ECTwistAdd(\n        ...
      DUP2 			function ECTwistAdd(\n        ...
      MSTORE 			function ECTwistAdd(\n        ...
      PUSH 20			function ECTwistAdd(\n        ...
      ADD 			function ECTwistAdd(\n        ...
      DUP5 			function ECTwistAdd(\n        ...
      DUP2 			function ECTwistAdd(\n        ...
      MSTORE 			function ECTwistAdd(\n        ...
      PUSH 20			function ECTwistAdd(\n        ...
      ADD 			function ECTwistAdd(\n        ...
      DUP4 			function ECTwistAdd(\n        ...
      DUP2 			function ECTwistAdd(\n        ...
      MSTORE 			function ECTwistAdd(\n        ...
      PUSH 20			function ECTwistAdd(\n        ...
      ADD 			function ECTwistAdd(\n        ...
      DUP3 			function ECTwistAdd(\n        ...
      DUP2 			function ECTwistAdd(\n        ...
      MSTORE 			function ECTwistAdd(\n        ...
      PUSH 20			function ECTwistAdd(\n        ...
      ADD 			function ECTwistAdd(\n        ...
      SWAP5 			function ECTwistAdd(\n        ...
      POP 			function ECTwistAdd(\n        ...
      POP 			function ECTwistAdd(\n        ...
      POP 			function ECTwistAdd(\n        ...
      POP 			function ECTwistAdd(\n        ...
      POP 			function ECTwistAdd(\n        ...
      PUSH 40			function ECTwistAdd(\n        ...
      MLOAD 			function ECTwistAdd(\n        ...
      DUP1 			function ECTwistAdd(\n        ...
      SWAP2 			function ECTwistAdd(\n        ...
      SUB 			function ECTwistAdd(\n        ...
      SWAP1 			function ECTwistAdd(\n        ...
      RETURN 			function ECTwistAdd(\n        ...
    tag 4			function ECTwistMul(\n        ...
      JUMPDEST 			function ECTwistMul(\n        ...
      PUSH [tag] 10			function ECTwistMul(\n        ...
      PUSH 4			function ECTwistMul(\n        ...
      DUP1 			function ECTwistMul(\n        ...
      CALLDATASIZE 			function ECTwistMul(\n        ...
      SUB 			function ECTwistMul(\n        ...
      PUSH A0			G2 
      DUP2 			BN2
      LT 			ry BN256G2 {
      ISZERO 			br
      PUSH [tag] 11			br
      JUMPI 			br
      PUSH 0			i
      DUP1 			5
      REVERT 			  uint256 in
    tag 11			br
      JUMPDEST 			br
      DUP2 			function ECTwistMul(\n        ...
      ADD 			function ECTwistMul(\n        ...
      SWAP1 			function ECTwistMul(\n        ...
      DUP1 			function ECTwistMul(\n        ...
      DUP1 			function ECTwistMul(\n        ...
      CALLDATALOAD 			function ECTwistMul(\n        ...
      SWAP1 			function ECTwistMul(\n        ...
      PUSH 20			function ECTwistMul(\n        ...
      ADD 			function ECTwistMul(\n        ...
      SWAP1 			function ECTwistMul(\n        ...
      SWAP3 			function ECTwistMul(\n        ...
      SWAP2 			function ECTwistMul(\n        ...
      SWAP1 			function ECTwistMul(\n        ...
      DUP1 			function ECTwistMul(\n        ...
      CALLDATALOAD 			function ECTwistMul(\n        ...
      SWAP1 			function ECTwistMul(\n        ...
      PUSH 20			function ECTwistMul(\n        ...
      ADD 			function ECTwistMul(\n        ...
      SWAP1 			function ECTwistMul(\n        ...
      SWAP3 			function ECTwistMul(\n        ...
      SWAP2 			function ECTwistMul(\n        ...
      SWAP1 			function ECTwistMul(\n        ...
      DUP1 			function ECTwistMul(\n        ...
      CALLDATALOAD 			function ECTwistMul(\n        ...
      SWAP1 			function ECTwistMul(\n        ...
      PUSH 20			function ECTwistMul(\n        ...
      ADD 			function ECTwistMul(\n        ...
      SWAP1 			function ECTwistMul(\n        ...
      SWAP3 			function ECTwistMul(\n        ...
      SWAP2 			function ECTwistMul(\n        ...
      SWAP1 			function ECTwistMul(\n        ...
      DUP1 			function ECTwistMul(\n        ...
      CALLDATALOAD 			function ECTwistMul(\n        ...
      SWAP1 			function ECTwistMul(\n        ...
      PUSH 20			function ECTwistMul(\n        ...
      ADD 			function ECTwistMul(\n        ...
      SWAP1 			function ECTwistMul(\n        ...
      SWAP3 			function ECTwistMul(\n        ...
      SWAP2 			function ECTwistMul(\n        ...
      SWAP1 			function ECTwistMul(\n        ...
      DUP1 			function ECTwistMul(\n        ...
      CALLDATALOAD 			function ECTwistMul(\n        ...
      SWAP1 			function ECTwistMul(\n        ...
      PUSH 20			function ECTwistMul(\n        ...
      ADD 			function ECTwistMul(\n        ...
      SWAP1 			function ECTwistMul(\n        ...
      SWAP3 			function ECTwistMul(\n        ...
      SWAP2 			function ECTwistMul(\n        ...
      SWAP1 			function ECTwistMul(\n        ...
      POP 			function ECTwistMul(\n        ...
      POP 			function ECTwistMul(\n        ...
      POP 			function ECTwistMul(\n        ...
      PUSH [tag] 12			function ECTwistMul(\n        ...
      JUMP [in]			function ECTwistMul(\n        ...
    tag 10			function ECTwistMul(\n        ...
      JUMPDEST 			function ECTwistMul(\n        ...
      PUSH 40			function ECTwistMul(\n        ...
      MLOAD 			function ECTwistMul(\n        ...
      DUP1 			function ECTwistMul(\n        ...
      DUP6 			function ECTwistMul(\n        ...
      DUP2 			function ECTwistMul(\n        ...
      MSTORE 			function ECTwistMul(\n        ...
      PUSH 20			function ECTwistMul(\n        ...
      ADD 			function ECTwistMul(\n        ...
      DUP5 			function ECTwistMul(\n        ...
      DUP2 			function ECTwistMul(\n        ...
      MSTORE 			function ECTwistMul(\n        ...
      PUSH 20			function ECTwistMul(\n        ...
      ADD 			function ECTwistMul(\n        ...
      DUP4 			function ECTwistMul(\n        ...
      DUP2 			function ECTwistMul(\n        ...
      MSTORE 			function ECTwistMul(\n        ...
      PUSH 20			function ECTwistMul(\n        ...
      ADD 			function ECTwistMul(\n        ...
      DUP3 			function ECTwistMul(\n        ...
      DUP2 			function ECTwistMul(\n        ...
      MSTORE 			function ECTwistMul(\n        ...
      PUSH 20			function ECTwistMul(\n        ...
      ADD 			function ECTwistMul(\n        ...
      SWAP5 			function ECTwistMul(\n        ...
      POP 			function ECTwistMul(\n        ...
      POP 			function ECTwistMul(\n        ...
      POP 			function ECTwistMul(\n        ...
      POP 			function ECTwistMul(\n        ...
      POP 			function ECTwistMul(\n        ...
      PUSH 40			function ECTwistMul(\n        ...
      MLOAD 			function ECTwistMul(\n        ...
      DUP1 			function ECTwistMul(\n        ...
      SWAP2 			function ECTwistMul(\n        ...
      SUB 			function ECTwistMul(\n        ...
      SWAP1 			function ECTwistMul(\n        ...
      RETURN 			function ECTwistMul(\n        ...
    tag 6			function GetFieldModulus() pub...
      JUMPDEST 			function GetFieldModulus() pub...
      PUSH 0			uint256
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      SWAP1 			return FIELD_MODULUS
      POP 			return FIELD_MODULUS
      SWAP1 			function GetFieldModulus() pub...
      JUMP [out]			function GetFieldModulus() pub...
    tag 9			function ECTwistAdd(\n        ...
      JUMPDEST 			function ECTwistAdd(\n        ...
      PUSH 0			uint256
      DUP1 			uint256
      PUSH 0			uint256
      DUP1 			uint256
      PUSH 0			0
      DUP13 			pt1xx
      EQ 			pt1xx == 0
      DUP1 			pt1xx == 0 && pt1xy == 0
      ISZERO 			pt1xx == 0 && pt1xy == 0
      PUSH [tag] 15			pt1xx == 0 && pt1xy == 0
      JUMPI 			pt1xx == 0 && pt1xy == 0
      POP 			pt1xx == 0 && pt1xy == 0
      PUSH 0			0
      DUP12 			pt1xy
      EQ 			pt1xy == 0
    tag 15			pt1xx == 0 && pt1xy == 0
      JUMPDEST 			pt1xx == 0 && pt1xy == 0
      DUP1 			pt1xx == 0 && pt1xy == 0 &&\n ...
      ISZERO 			pt1xx == 0 && pt1xy == 0 &&\n ...
      PUSH [tag] 16			pt1xx == 0 && pt1xy == 0 &&\n ...
      JUMPI 			pt1xx == 0 && pt1xy == 0 &&\n ...
      POP 			pt1xx == 0 && pt1xy == 0 &&\n ...
      PUSH 0			0
      DUP11 			pt1yx
      EQ 			pt1yx == 0
    tag 16			pt1xx == 0 && pt1xy == 0 &&\n ...
      JUMPDEST 			pt1xx == 0 && pt1xy == 0 &&\n ...
      DUP1 			pt1xx == 0 && pt1xy == 0 &&\n ...
      ISZERO 			pt1xx == 0 && pt1xy == 0 &&\n ...
      PUSH [tag] 17			pt1xx == 0 && pt1xy == 0 &&\n ...
      JUMPI 			pt1xx == 0 && pt1xy == 0 &&\n ...
      POP 			pt1xx == 0 && pt1xy == 0 &&\n ...
      PUSH 0			0
      DUP10 			pt1yy
      EQ 			pt1yy == 0
    tag 17			pt1xx == 0 && pt1xy == 0 &&\n ...
      JUMPDEST 			pt1xx == 0 && pt1xy == 0 &&\n ...
      ISZERO 			if (\n            pt1xx == 0 &...
      PUSH [tag] 18			if (\n            pt1xx == 0 &...
      JUMPI 			if (\n            pt1xx == 0 &...
      PUSH 0			0
      DUP9 			pt2xx
      EQ 			pt2xx == 0
      DUP1 			pt2xx == 0 && pt2xy == 0
      ISZERO 			pt2xx == 0 && pt2xy == 0
      PUSH [tag] 19			pt2xx == 0 && pt2xy == 0
      JUMPI 			pt2xx == 0 && pt2xy == 0
      POP 			pt2xx == 0 && pt2xy == 0
      PUSH 0			0
      DUP8 			pt2xy
      EQ 			pt2xy == 0
    tag 19			pt2xx == 0 && pt2xy == 0
      JUMPDEST 			pt2xx == 0 && pt2xy == 0
      DUP1 			pt2xx == 0 && pt2xy == 0 &&\n ...
      ISZERO 			pt2xx == 0 && pt2xy == 0 &&\n ...
      PUSH [tag] 20			pt2xx == 0 && pt2xy == 0 &&\n ...
      JUMPI 			pt2xx == 0 && pt2xy == 0 &&\n ...
      POP 			pt2xx == 0 && pt2xy == 0 &&\n ...
      PUSH 0			0
      DUP7 			pt2yx
      EQ 			pt2yx == 0
    tag 20			pt2xx == 0 && pt2xy == 0 &&\n ...
      JUMPDEST 			pt2xx == 0 && pt2xy == 0 &&\n ...
      DUP1 			pt2xx == 0 && pt2xy == 0 &&\n ...
      ISZERO 			pt2xx == 0 && pt2xy == 0 &&\n ...
      PUSH [tag] 21			pt2xx == 0 && pt2xy == 0 &&\n ...
      JUMPI 			pt2xx == 0 && pt2xy == 0 &&\n ...
      POP 			pt2xx == 0 && pt2xy == 0 &&\n ...
      PUSH 0			0
      DUP6 			pt2yy
      EQ 			pt2yy == 0
    tag 21			pt2xx == 0 && pt2xy == 0 &&\n ...
      JUMPDEST 			pt2xx == 0 && pt2xy == 0 &&\n ...
      ISZERO 			!(\n                pt2xx == 0...
      ISZERO 			if (!(\n                pt2xx ...
      PUSH [tag] 22			if (!(\n                pt2xx ...
      JUMPI 			if (!(\n                pt2xx ...
      PUSH [tag] 23			_isOnCurve(\n                 ...
      DUP9 			pt2xx
      DUP9 			pt2xy
      DUP9 			pt2yx
      DUP9 			pt2yy
      PUSH [tag] 24			_isOnCurve
      JUMP [in]			_isOnCurve(\n                 ...
    tag 23			_isOnCurve(\n                 ...
      JUMPDEST 			_isOnCurve(\n                 ...
      ISZERO 			assert(_isOnCurve(\n          ...
      ISZERO 			assert(_isOnCurve(\n          ...
      PUSH [tag] 25			assert(_isOnCurve(\n          ...
      JUMPI 			assert(_isOnCurve(\n          ...
      INVALID 			assert(_isOnCurve(\n          ...
    tag 25			assert(_isOnCurve(\n          ...
      JUMPDEST 			assert(_isOnCurve(\n          ...
    tag 22			if (!(\n                pt2xx ...
      JUMPDEST 			if (!(\n                pt2xx ...
      DUP8 			pt2xx
      DUP8 			pt2xy
      DUP8 			pt2yx
      DUP8 			pt2yy
      SWAP4 			return (\n                pt2x...
      POP 			return (\n                pt2x...
      SWAP4 			return (\n                pt2x...
      POP 			return (\n                pt2x...
      SWAP4 			return (\n                pt2x...
      POP 			return (\n                pt2x...
      SWAP4 			return (\n                pt2x...
      POP 			return (\n                pt2x...
      PUSH [tag] 14			return (\n                pt2x...
      JUMP 			return (\n                pt2x...
    tag 18			if (\n            pt1xx == 0 &...
      JUMPDEST 			if (\n            pt1xx == 0 &...
      PUSH 0			0
      DUP9 			pt2xx
      EQ 			pt2xx == 0
      DUP1 			pt2xx == 0 && pt2xy == 0
      ISZERO 			pt2xx == 0 && pt2xy == 0
      PUSH [tag] 27			pt2xx == 0 && pt2xy == 0
      JUMPI 			pt2xx == 0 && pt2xy == 0
      POP 			pt2xx == 0 && pt2xy == 0
      PUSH 0			0
      DUP8 			pt2xy
      EQ 			pt2xy == 0
    tag 27			pt2xx == 0 && pt2xy == 0
      JUMPDEST 			pt2xx == 0 && pt2xy == 0
      DUP1 			pt2xx == 0 && pt2xy == 0 &&\n ...
      ISZERO 			pt2xx == 0 && pt2xy == 0 &&\n ...
      PUSH [tag] 28			pt2xx == 0 && pt2xy == 0 &&\n ...
      JUMPI 			pt2xx == 0 && pt2xy == 0 &&\n ...
      POP 			pt2xx == 0 && pt2xy == 0 &&\n ...
      PUSH 0			0
      DUP7 			pt2yx
      EQ 			pt2yx == 0
    tag 28			pt2xx == 0 && pt2xy == 0 &&\n ...
      JUMPDEST 			pt2xx == 0 && pt2xy == 0 &&\n ...
      DUP1 			pt2xx == 0 && pt2xy == 0 &&\n ...
      ISZERO 			pt2xx == 0 && pt2xy == 0 &&\n ...
      PUSH [tag] 29			pt2xx == 0 && pt2xy == 0 &&\n ...
      JUMPI 			pt2xx == 0 && pt2xy == 0 &&\n ...
      POP 			pt2xx == 0 && pt2xy == 0 &&\n ...
      PUSH 0			0
      DUP6 			pt2yy
      EQ 			pt2yy == 0
    tag 29			pt2xx == 0 && pt2xy == 0 &&\n ...
      JUMPDEST 			pt2xx == 0 && pt2xy == 0 &&\n ...
      ISZERO 			if (\n            pt2xx == 0 &...
      PUSH [tag] 30			if (\n            pt2xx == 0 &...
      JUMPI 			if (\n            pt2xx == 0 &...
      PUSH [tag] 31			_isOnCurve(\n                p...
      DUP13 			pt1xx
      DUP13 			pt1xy
      DUP13 			pt1yx
      DUP13 			pt1yy
      PUSH [tag] 24			_isOnCurve
      JUMP [in]			_isOnCurve(\n                p...
    tag 31			_isOnCurve(\n                p...
      JUMPDEST 			_isOnCurve(\n                p...
      ISZERO 			assert(_isOnCurve(\n          ...
      ISZERO 			assert(_isOnCurve(\n          ...
      PUSH [tag] 32			assert(_isOnCurve(\n          ...
      JUMPI 			assert(_isOnCurve(\n          ...
      INVALID 			assert(_isOnCurve(\n          ...
    tag 32			assert(_isOnCurve(\n          ...
      JUMPDEST 			assert(_isOnCurve(\n          ...
      DUP12 			pt1xx
      DUP12 			pt1xy
      DUP12 			pt1yx
      DUP12 			pt1yy
      SWAP4 			return (\n                pt1x...
      POP 			return (\n                pt1x...
      SWAP4 			return (\n                pt1x...
      POP 			return (\n                pt1x...
      SWAP4 			return (\n                pt1x...
      POP 			return (\n                pt1x...
      SWAP4 			return (\n                pt1x...
      POP 			return (\n                pt1x...
      PUSH [tag] 14			return (\n                pt1x...
      JUMP 			return (\n                pt1x...
    tag 30			if (\n            pt2xx == 0 &...
      JUMPDEST 			if (\n            pt2xx == 0 &...
      PUSH [tag] 33			_isOnCurve(\n            pt1xx...
      DUP13 			pt1xx
      DUP13 			pt1xy
      DUP13 			pt1yx
      DUP13 			pt1yy
      PUSH [tag] 24			_isOnCurve
      JUMP [in]			_isOnCurve(\n            pt1xx...
    tag 33			_isOnCurve(\n            pt1xx...
      JUMPDEST 			_isOnCurve(\n            pt1xx...
      ISZERO 			assert(_isOnCurve(\n          ...
      ISZERO 			assert(_isOnCurve(\n          ...
      PUSH [tag] 34			assert(_isOnCurve(\n          ...
      JUMPI 			assert(_isOnCurve(\n          ...
      INVALID 			assert(_isOnCurve(\n          ...
    tag 34			assert(_isOnCurve(\n          ...
      JUMPDEST 			assert(_isOnCurve(\n          ...
      PUSH [tag] 35			_isOnCurve(\n            pt2xx...
      DUP9 			pt2xx
      DUP9 			pt2xy
      DUP9 			pt2yx
      DUP9 			pt2yy
      PUSH [tag] 24			_isOnCurve
      JUMP [in]			_isOnCurve(\n            pt2xx...
    tag 35			_isOnCurve(\n            pt2xx...
      JUMPDEST 			_isOnCurve(\n            pt2xx...
      ISZERO 			assert(_isOnCurve(\n          ...
      ISZERO 			assert(_isOnCurve(\n          ...
      PUSH [tag] 36			assert(_isOnCurve(\n          ...
      JUMPI 			assert(_isOnCurve(\n          ...
      INVALID 			assert(_isOnCurve(\n          ...
    tag 36			assert(_isOnCurve(\n          ...
      JUMPDEST 			assert(_isOnCurve(\n          ...
      PUSH [tag] 37			uint256[6] memory pt3
      PUSH [tag] 38			uint256[6] memory pt3
      JUMP [in]			uint256[6] memory pt3
    tag 37			uint256[6] memory pt3
      JUMPDEST 			uint256[6] memory pt3
      PUSH [tag] 39			_ECTwistAddJacobian(\n        ...
      DUP14 			pt1xx
      DUP14 			pt1xy
      DUP14 			pt1yx
      DUP14 			pt1yy
      PUSH 1			1
      PUSH 0			0
      DUP16 			pt2xx
      DUP16 			pt2xy
      DUP16 			pt2yx
      DUP16 			pt2yy
      PUSH 1			1
      PUSH 0			0
      PUSH [tag] 40			_ECTwistAddJacobian
      JUMP [in]			_ECTwistAddJacobian(\n        ...
    tag 39			_ECTwistAddJacobian(\n        ...
      JUMPDEST 			_ECTwistAddJacobian(\n        ...
      SWAP1 			uint256[6] memory pt3 = _ECTwi...
      POP 			uint256[6] memory pt3 = _ECTwi...
      PUSH [tag] 41			_fromJacobian(\n            pt...
      DUP2 			pt3
      PUSH 0			0
      PUSH 6			pt3[PTXX]
      DUP2 			pt3[PTXX]
      LT 			pt3[PTXX]
      ISZERO 			pt3[PTXX]
      ISZERO 			pt3[PTXX]
      PUSH [tag] 42			pt3[PTXX]
      JUMPI 			pt3[PTXX]
      INVALID 			pt3[PTXX]
    tag 42			pt3[PTXX]
      JUMPDEST 			pt3[PTXX]
      PUSH 20			pt3[PTXX]
      MUL 			pt3[PTXX]
      ADD 			pt3[PTXX]
      MLOAD 			pt3[PTXX]
      DUP3 			pt3
      PUSH 1			1
      PUSH 6			pt3[PTXY]
      DUP2 			pt3[PTXY]
      LT 			pt3[PTXY]
      ISZERO 			pt3[PTXY]
      ISZERO 			pt3[PTXY]
      PUSH [tag] 43			pt3[PTXY]
      JUMPI 			pt3[PTXY]
      INVALID 			pt3[PTXY]
    tag 43			pt3[PTXY]
      JUMPDEST 			pt3[PTXY]
      PUSH 20			pt3[PTXY]
      MUL 			pt3[PTXY]
      ADD 			pt3[PTXY]
      MLOAD 			pt3[PTXY]
      DUP4 			pt3
      PUSH 2			2
      PUSH 6			pt3[PTYX]
      DUP2 			pt3[PTYX]
      LT 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      PUSH [tag] 44			pt3[PTYX]
      JUMPI 			pt3[PTYX]
      INVALID 			pt3[PTYX]
    tag 44			pt3[PTYX]
      JUMPDEST 			pt3[PTYX]
      PUSH 20			pt3[PTYX]
      MUL 			pt3[PTYX]
      ADD 			pt3[PTYX]
      MLOAD 			pt3[PTYX]
      DUP5 			pt3
      PUSH 3			3
      PUSH 6			pt3[PTYY]
      DUP2 			pt3[PTYY]
      LT 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      PUSH [tag] 45			pt3[PTYY]
      JUMPI 			pt3[PTYY]
      INVALID 			pt3[PTYY]
    tag 45			pt3[PTYY]
      JUMPDEST 			pt3[PTYY]
      PUSH 20			pt3[PTYY]
      MUL 			pt3[PTYY]
      ADD 			pt3[PTYY]
      MLOAD 			pt3[PTYY]
      DUP6 			pt3
      PUSH 4			4
      PUSH 6			pt3[PTZX]
      DUP2 			pt3[PTZX]
      LT 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      PUSH [tag] 46			pt3[PTZX]
      JUMPI 			pt3[PTZX]
      INVALID 			pt3[PTZX]
    tag 46			pt3[PTZX]
      JUMPDEST 			pt3[PTZX]
      PUSH 20			pt3[PTZX]
      MUL 			pt3[PTZX]
      ADD 			pt3[PTZX]
      MLOAD 			pt3[PTZX]
      DUP7 			pt3
      PUSH 5			5
      PUSH 6			pt3[PTZY]
      DUP2 			pt3[PTZY]
      LT 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      PUSH [tag] 47			pt3[PTZY]
      JUMPI 			pt3[PTZY]
      INVALID 			pt3[PTZY]
    tag 47			pt3[PTZY]
      JUMPDEST 			pt3[PTZY]
      PUSH 20			pt3[PTZY]
      MUL 			pt3[PTZY]
      ADD 			pt3[PTZY]
      MLOAD 			pt3[PTZY]
      PUSH [tag] 48			_fromJacobian
      JUMP [in]			_fromJacobian(\n            pt...
    tag 41			_fromJacobian(\n            pt...
      JUMPDEST 			_fromJacobian(\n            pt...
      SWAP5 			return _fromJacobian(\n       ...
      POP 			return _fromJacobian(\n       ...
      SWAP5 			return _fromJacobian(\n       ...
      POP 			return _fromJacobian(\n       ...
      SWAP5 			return _fromJacobian(\n       ...
      POP 			return _fromJacobian(\n       ...
      SWAP5 			return _fromJacobian(\n       ...
      POP 			return _fromJacobian(\n       ...
      POP 			return _fromJacobian(\n       ...
    tag 14			function ECTwistAdd(\n        ...
      JUMPDEST 			function ECTwistAdd(\n        ...
      SWAP9 			function ECTwistAdd(\n        ...
      POP 			function ECTwistAdd(\n        ...
      SWAP9 			function ECTwistAdd(\n        ...
      POP 			function ECTwistAdd(\n        ...
      SWAP9 			function ECTwistAdd(\n        ...
      POP 			function ECTwistAdd(\n        ...
      SWAP9 			function ECTwistAdd(\n        ...
      SWAP5 			function ECTwistAdd(\n        ...
      POP 			function ECTwistAdd(\n        ...
      POP 			function ECTwistAdd(\n        ...
      POP 			function ECTwistAdd(\n        ...
      POP 			function ECTwistAdd(\n        ...
      POP 			function ECTwistAdd(\n        ...
      JUMP [out]			function ECTwistAdd(\n        ...
    tag 12			function ECTwistMul(\n        ...
      JUMPDEST 			function ECTwistMul(\n        ...
      PUSH 0			uint256
      DUP1 			uint256
      PUSH 0			uint256
      DUP1 			uint256
      PUSH 0			uint256 pt1zx
      PUSH 1			1
      SWAP1 			uint256 pt1zx = 1
      POP 			uint256 pt1zx = 1
      PUSH 0			0
      DUP10 			pt1xx
      EQ 			pt1xx == 0
      DUP1 			pt1xx == 0 && pt1xy == 0
      ISZERO 			pt1xx == 0 && pt1xy == 0
      PUSH [tag] 50			pt1xx == 0 && pt1xy == 0
      JUMPI 			pt1xx == 0 && pt1xy == 0
      POP 			pt1xx == 0 && pt1xy == 0
      PUSH 0			0
      DUP9 			pt1xy
      EQ 			pt1xy == 0
    tag 50			pt1xx == 0 && pt1xy == 0
      JUMPDEST 			pt1xx == 0 && pt1xy == 0
      DUP1 			pt1xx == 0 && pt1xy == 0 &&\n ...
      ISZERO 			pt1xx == 0 && pt1xy == 0 &&\n ...
      PUSH [tag] 51			pt1xx == 0 && pt1xy == 0 &&\n ...
      JUMPI 			pt1xx == 0 && pt1xy == 0 &&\n ...
      POP 			pt1xx == 0 && pt1xy == 0 &&\n ...
      PUSH 0			0
      DUP8 			pt1yx
      EQ 			pt1yx == 0
    tag 51			pt1xx == 0 && pt1xy == 0 &&\n ...
      JUMPDEST 			pt1xx == 0 && pt1xy == 0 &&\n ...
      DUP1 			pt1xx == 0 && pt1xy == 0 &&\n ...
      ISZERO 			pt1xx == 0 && pt1xy == 0 &&\n ...
      PUSH [tag] 52			pt1xx == 0 && pt1xy == 0 &&\n ...
      JUMPI 			pt1xx == 0 && pt1xy == 0 &&\n ...
      POP 			pt1xx == 0 && pt1xy == 0 &&\n ...
      PUSH 0			0
      DUP7 			pt1yy
      EQ 			pt1yy == 0
    tag 52			pt1xx == 0 && pt1xy == 0 &&\n ...
      JUMPDEST 			pt1xx == 0 && pt1xy == 0 &&\n ...
      ISZERO 			if (\n            pt1xx == 0 &...
      PUSH [tag] 53			if (\n            pt1xx == 0 &...
      JUMPI 			if (\n            pt1xx == 0 &...
      PUSH 1			1
      SWAP9 			pt1xx = 1
      POP 			pt1xx = 1
      PUSH 1			1
      SWAP7 			pt1yx = 1
      POP 			pt1yx = 1
      PUSH 0			0
      SWAP1 			pt1zx = 0
      POP 			pt1zx = 0
      PUSH [tag] 54			if (\n            pt1xx == 0 &...
      JUMP 			if (\n            pt1xx == 0 &...
    tag 53			if (\n            pt1xx == 0 &...
      JUMPDEST 			if (\n            pt1xx == 0 &...
      PUSH [tag] 55			_isOnCurve(\n                p...
      DUP10 			pt1xx
      DUP10 			pt1xy
      DUP10 			pt1yx
      DUP10 			pt1yy
      PUSH [tag] 24			_isOnCurve
      JUMP [in]			_isOnCurve(\n                p...
    tag 55			_isOnCurve(\n                p...
      JUMPDEST 			_isOnCurve(\n                p...
      ISZERO 			assert(_isOnCurve(\n          ...
      ISZERO 			assert(_isOnCurve(\n          ...
      PUSH [tag] 56			assert(_isOnCurve(\n          ...
      JUMPI 			assert(_isOnCurve(\n          ...
      INVALID 			assert(_isOnCurve(\n          ...
    tag 56			assert(_isOnCurve(\n          ...
      JUMPDEST 			assert(_isOnCurve(\n          ...
    tag 54			if (\n            pt1xx == 0 &...
      JUMPDEST 			if (\n            pt1xx == 0 &...
      PUSH [tag] 57			uint256[6] memory pt2
      PUSH [tag] 38			uint256[6] memory pt2
      JUMP [in]			uint256[6] memory pt2
    tag 57			uint256[6] memory pt2
      JUMPDEST 			uint256[6] memory pt2
      PUSH [tag] 58			_ECTwistMulJacobian(\n        ...
      DUP12 			s
      DUP12 			pt1xx
      DUP12 			pt1xy
      DUP12 			pt1yx
      DUP12 			pt1yy
      DUP8 			pt1zx
      PUSH 0			0
      PUSH [tag] 59			_ECTwistMulJacobian
      JUMP [in]			_ECTwistMulJacobian(\n        ...
    tag 58			_ECTwistMulJacobian(\n        ...
      JUMPDEST 			_ECTwistMulJacobian(\n        ...
      SWAP1 			uint256[6] memory pt2 = _ECTwi...
      POP 			uint256[6] memory pt2 = _ECTwi...
      PUSH [tag] 60			_fromJacobian(\n            pt...
      DUP2 			pt2
      PUSH 0			0
      PUSH 6			pt2[PTXX]
      DUP2 			pt2[PTXX]
      LT 			pt2[PTXX]
      ISZERO 			pt2[PTXX]
      ISZERO 			pt2[PTXX]
      PUSH [tag] 61			pt2[PTXX]
      JUMPI 			pt2[PTXX]
      INVALID 			pt2[PTXX]
    tag 61			pt2[PTXX]
      JUMPDEST 			pt2[PTXX]
      PUSH 20			pt2[PTXX]
      MUL 			pt2[PTXX]
      ADD 			pt2[PTXX]
      MLOAD 			pt2[PTXX]
      DUP3 			pt2
      PUSH 1			1
      PUSH 6			pt2[PTXY]
      DUP2 			pt2[PTXY]
      LT 			pt2[PTXY]
      ISZERO 			pt2[PTXY]
      ISZERO 			pt2[PTXY]
      PUSH [tag] 62			pt2[PTXY]
      JUMPI 			pt2[PTXY]
      INVALID 			pt2[PTXY]
    tag 62			pt2[PTXY]
      JUMPDEST 			pt2[PTXY]
      PUSH 20			pt2[PTXY]
      MUL 			pt2[PTXY]
      ADD 			pt2[PTXY]
      MLOAD 			pt2[PTXY]
      DUP4 			pt2
      PUSH 2			2
      PUSH 6			pt2[PTYX]
      DUP2 			pt2[PTYX]
      LT 			pt2[PTYX]
      ISZERO 			pt2[PTYX]
      ISZERO 			pt2[PTYX]
      PUSH [tag] 63			pt2[PTYX]
      JUMPI 			pt2[PTYX]
      INVALID 			pt2[PTYX]
    tag 63			pt2[PTYX]
      JUMPDEST 			pt2[PTYX]
      PUSH 20			pt2[PTYX]
      MUL 			pt2[PTYX]
      ADD 			pt2[PTYX]
      MLOAD 			pt2[PTYX]
      DUP5 			pt2
      PUSH 3			3
      PUSH 6			pt2[PTYY]
      DUP2 			pt2[PTYY]
      LT 			pt2[PTYY]
      ISZERO 			pt2[PTYY]
      ISZERO 			pt2[PTYY]
      PUSH [tag] 64			pt2[PTYY]
      JUMPI 			pt2[PTYY]
      INVALID 			pt2[PTYY]
    tag 64			pt2[PTYY]
      JUMPDEST 			pt2[PTYY]
      PUSH 20			pt2[PTYY]
      MUL 			pt2[PTYY]
      ADD 			pt2[PTYY]
      MLOAD 			pt2[PTYY]
      DUP6 			pt2
      PUSH 4			4
      PUSH 6			pt2[PTZX]
      DUP2 			pt2[PTZX]
      LT 			pt2[PTZX]
      ISZERO 			pt2[PTZX]
      ISZERO 			pt2[PTZX]
      PUSH [tag] 65			pt2[PTZX]
      JUMPI 			pt2[PTZX]
      INVALID 			pt2[PTZX]
    tag 65			pt2[PTZX]
      JUMPDEST 			pt2[PTZX]
      PUSH 20			pt2[PTZX]
      MUL 			pt2[PTZX]
      ADD 			pt2[PTZX]
      MLOAD 			pt2[PTZX]
      DUP7 			pt2
      PUSH 5			5
      PUSH 6			pt2[PTZY]
      DUP2 			pt2[PTZY]
      LT 			pt2[PTZY]
      ISZERO 			pt2[PTZY]
      ISZERO 			pt2[PTZY]
      PUSH [tag] 66			pt2[PTZY]
      JUMPI 			pt2[PTZY]
      INVALID 			pt2[PTZY]
    tag 66			pt2[PTZY]
      JUMPDEST 			pt2[PTZY]
      PUSH 20			pt2[PTZY]
      MUL 			pt2[PTZY]
      ADD 			pt2[PTZY]
      MLOAD 			pt2[PTZY]
      PUSH [tag] 48			_fromJacobian
      JUMP [in]			_fromJacobian(\n            pt...
    tag 60			_fromJacobian(\n            pt...
      JUMPDEST 			_fromJacobian(\n            pt...
      SWAP6 			return _fromJacobian(\n       ...
      POP 			return _fromJacobian(\n       ...
      SWAP6 			return _fromJacobian(\n       ...
      POP 			return _fromJacobian(\n       ...
      SWAP6 			return _fromJacobian(\n       ...
      POP 			return _fromJacobian(\n       ...
      SWAP6 			return _fromJacobian(\n       ...
      POP 			return _fromJacobian(\n       ...
      POP 			return _fromJacobian(\n       ...
      POP 			return _fromJacobian(\n       ...
      SWAP6 			function ECTwistMul(\n        ...
      POP 			function ECTwistMul(\n        ...
      SWAP6 			function ECTwistMul(\n        ...
      POP 			function ECTwistMul(\n        ...
      SWAP6 			function ECTwistMul(\n        ...
      POP 			function ECTwistMul(\n        ...
      SWAP6 			function ECTwistMul(\n        ...
      SWAP2 			function ECTwistMul(\n        ...
      POP 			function ECTwistMul(\n        ...
      POP 			function ECTwistMul(\n        ...
      JUMP [out]			function ECTwistMul(\n        ...
    tag 24			function _isOnCurve(\n        ...
      JUMPDEST 			function _isOnCurve(\n        ...
      PUSH 0			bool
      DUP1 			uint256 yyx
      PUSH 0			uint256 yyy
      DUP1 			uint256 xxxx
      PUSH 0			uint256 xxxy
      PUSH [tag] 68			_FQ2Mul(yx, yy, yx, yy)
      DUP8 			yx
      DUP8 			yy
      DUP10 			yx
      DUP10 			yy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(yx, yy, yx, yy)
    tag 68			_FQ2Mul(yx, yy, yx, yy)
      JUMPDEST 			_FQ2Mul(yx, yy, yx, yy)
      DUP1 			(yyx, yyy) = _FQ2Mul(yx, yy, y...
      SWAP5 			(yyx, yyy) = _FQ2Mul(yx, yy, y...
      POP 			(yyx, yyy) = _FQ2Mul(yx, yy, y...
      DUP2 			(yyx, yyy) = _FQ2Mul(yx, yy, y...
      SWAP6 			(yyx, yyy) = _FQ2Mul(yx, yy, y...
      POP 			(yyx, yyy) = _FQ2Mul(yx, yy, y...
      POP 			(yyx, yyy) = _FQ2Mul(yx, yy, y...
      POP 			(yyx, yyy) = _FQ2Mul(yx, yy, y...
      PUSH [tag] 70			_FQ2Mul(xx, xy, xx, xy)
      DUP10 			xx
      DUP10 			xy
      DUP12 			xx
      DUP12 			xy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(xx, xy, xx, xy)
    tag 70			_FQ2Mul(xx, xy, xx, xy)
      JUMPDEST 			_FQ2Mul(xx, xy, xx, xy)
      DUP1 			(xxxx, xxxy) = _FQ2Mul(xx, xy,...
      SWAP3 			(xxxx, xxxy) = _FQ2Mul(xx, xy,...
      POP 			(xxxx, xxxy) = _FQ2Mul(xx, xy,...
      DUP2 			(xxxx, xxxy) = _FQ2Mul(xx, xy,...
      SWAP4 			(xxxx, xxxy) = _FQ2Mul(xx, xy,...
      POP 			(xxxx, xxxy) = _FQ2Mul(xx, xy,...
      POP 			(xxxx, xxxy) = _FQ2Mul(xx, xy,...
      POP 			(xxxx, xxxy) = _FQ2Mul(xx, xy,...
      PUSH [tag] 71			_FQ2Mul(xxxx, xxxy, xx, xy)
      DUP3 			xxxx
      DUP3 			xxxy
      DUP12 			xx
      DUP12 			xy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(xxxx, xxxy, xx, xy)
    tag 71			_FQ2Mul(xxxx, xxxy, xx, xy)
      JUMPDEST 			_FQ2Mul(xxxx, xxxy, xx, xy)
      DUP1 			(xxxx, xxxy) = _FQ2Mul(xxxx, x...
      SWAP3 			(xxxx, xxxy) = _FQ2Mul(xxxx, x...
      POP 			(xxxx, xxxy) = _FQ2Mul(xxxx, x...
      DUP2 			(xxxx, xxxy) = _FQ2Mul(xxxx, x...
      SWAP4 			(xxxx, xxxy) = _FQ2Mul(xxxx, x...
      POP 			(xxxx, xxxy) = _FQ2Mul(xxxx, x...
      POP 			(xxxx, xxxy) = _FQ2Mul(xxxx, x...
      POP 			(xxxx, xxxy) = _FQ2Mul(xxxx, x...
      PUSH [tag] 72			_FQ2Sub(yyx, yyy, xxxx, xxxy)
      DUP5 			yyx
      DUP5 			yyy
      DUP5 			xxxx
      DUP5 			xxxy
      PUSH [tag] 73			_FQ2Sub
      JUMP [in]			_FQ2Sub(yyx, yyy, xxxx, xxxy)
    tag 72			_FQ2Sub(yyx, yyy, xxxx, xxxy)
      JUMPDEST 			_FQ2Sub(yyx, yyy, xxxx, xxxy)
      DUP1 			(yyx, yyy) = _FQ2Sub(yyx, yyy,...
      SWAP5 			(yyx, yyy) = _FQ2Sub(yyx, yyy,...
      POP 			(yyx, yyy) = _FQ2Sub(yyx, yyy,...
      DUP2 			(yyx, yyy) = _FQ2Sub(yyx, yyy,...
      SWAP6 			(yyx, yyy) = _FQ2Sub(yyx, yyy,...
      POP 			(yyx, yyy) = _FQ2Sub(yyx, yyy,...
      POP 			(yyx, yyy) = _FQ2Sub(yyx, yyy,...
      POP 			(yyx, yyy) = _FQ2Sub(yyx, yyy,...
      PUSH [tag] 74			_FQ2Sub(yyx, yyy, TWISTBX, TWI...
      DUP5 			yyx
      DUP5 			yyy
      PUSH 2B149D40CEB8AAAE81BE18991BE06AC3B5B4C5E559DBEFA33267E6DC24A138E5			0x2b149d40ceb8aaae81be18991be0...
      PUSH 9713B03AF0FED4CD2CAFADEED8FDF4A74FA084E52D1852E4A2BD0685C315D2			0x9713b03af0fed4cd2cafadeed8fd...
      PUSH [tag] 73			_FQ2Sub
      JUMP [in]			_FQ2Sub(yyx, yyy, TWISTBX, TWI...
    tag 74			_FQ2Sub(yyx, yyy, TWISTBX, TWI...
      JUMPDEST 			_FQ2Sub(yyx, yyy, TWISTBX, TWI...
      DUP1 			(yyx, yyy) = _FQ2Sub(yyx, yyy,...
      SWAP5 			(yyx, yyy) = _FQ2Sub(yyx, yyy,...
      POP 			(yyx, yyy) = _FQ2Sub(yyx, yyy,...
      DUP2 			(yyx, yyy) = _FQ2Sub(yyx, yyy,...
      SWAP6 			(yyx, yyy) = _FQ2Sub(yyx, yyy,...
      POP 			(yyx, yyy) = _FQ2Sub(yyx, yyy,...
      POP 			(yyx, yyy) = _FQ2Sub(yyx, yyy,...
      POP 			(yyx, yyy) = _FQ2Sub(yyx, yyy,...
      PUSH 0			0
      DUP5 			yyx
      EQ 			yyx == 0
      DUP1 			yyx == 0 && yyy == 0
      ISZERO 			yyx == 0 && yyy == 0
      PUSH [tag] 75			yyx == 0 && yyy == 0
      JUMPI 			yyx == 0 && yyy == 0
      POP 			yyx == 0 && yyy == 0
      PUSH 0			0
      DUP4 			yyy
      EQ 			yyy == 0
    tag 75			yyx == 0 && yyy == 0
      JUMPDEST 			yyx == 0 && yyy == 0
      SWAP5 			return yyx == 0 && yyy == 0
      POP 			return yyx == 0 && yyy == 0
      POP 			return yyx == 0 && yyy == 0
      POP 			return yyx == 0 && yyy == 0
      POP 			return yyx == 0 && yyy == 0
      POP 			return yyx == 0 && yyy == 0
      SWAP5 			function _isOnCurve(\n        ...
      SWAP4 			function _isOnCurve(\n        ...
      POP 			function _isOnCurve(\n        ...
      POP 			function _isOnCurve(\n        ...
      POP 			function _isOnCurve(\n        ...
      POP 			function _isOnCurve(\n        ...
      JUMP [out]			function _isOnCurve(\n        ...
    tag 40			function _ECTwistAddJacobian(\...
      JUMPDEST 			function _ECTwistAddJacobian(\...
      PUSH [tag] 76			uint256[6] memory pt3
      PUSH [tag] 38			uint256[6] memory pt3
      JUMP [in]			uint256[6] memory pt3
    tag 76			uint256[6] memory pt3
      JUMPDEST 			uint256[6] memory pt3
      PUSH 0			0
      DUP10 			pt1zx
      EQ 			pt1zx == 0
      DUP1 			pt1zx == 0 && pt1zy == 0
      ISZERO 			pt1zx == 0 && pt1zy == 0
      PUSH [tag] 78			pt1zx == 0 && pt1zy == 0
      JUMPI 			pt1zx == 0 && pt1zy == 0
      POP 			pt1zx == 0 && pt1zy == 0
      PUSH 0			0
      DUP9 			pt1zy
      EQ 			pt1zy == 0
    tag 78			pt1zx == 0 && pt1zy == 0
      JUMPDEST 			pt1zx == 0 && pt1zy == 0
      ISZERO 			if (pt1zx == 0 && pt1zy == 0) ...
      PUSH [tag] 79			if (pt1zx == 0 && pt1zy == 0) ...
      JUMPI 			if (pt1zx == 0 && pt1zy == 0) ...
      DUP7 			pt2xx
      DUP7 			pt2xy
      DUP7 			pt2yx
      DUP7 			pt2yy
      DUP7 			pt2zx
      DUP7 			pt2zy
      DUP7 			pt3
      PUSH 0			0
      PUSH 6			pt3[PTXX]
      DUP2 			pt3[PTXX]
      LT 			pt3[PTXX]
      ISZERO 			pt3[PTXX]
      ISZERO 			pt3[PTXX]
      PUSH [tag] 80			pt3[PTXX]
      JUMPI 			pt3[PTXX]
      INVALID 			pt3[PTXX]
    tag 80			pt3[PTXX]
      JUMPDEST 			pt3[PTXX]
      PUSH 20			pt3[PTXX]
      MUL 			pt3[PTXX]
      ADD 			pt3[PTXX]
      DUP8 			pt3
      PUSH 1			1
      PUSH 6			pt3[PTXY]
      DUP2 			pt3[PTXY]
      LT 			pt3[PTXY]
      ISZERO 			pt3[PTXY]
      ISZERO 			pt3[PTXY]
      PUSH [tag] 81			pt3[PTXY]
      JUMPI 			pt3[PTXY]
      INVALID 			pt3[PTXY]
    tag 81			pt3[PTXY]
      JUMPDEST 			pt3[PTXY]
      PUSH 20			pt3[PTXY]
      MUL 			pt3[PTXY]
      ADD 			pt3[PTXY]
      DUP9 			pt3
      PUSH 2			2
      PUSH 6			pt3[PTYX]
      DUP2 			pt3[PTYX]
      LT 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      PUSH [tag] 82			pt3[PTYX]
      JUMPI 			pt3[PTYX]
      INVALID 			pt3[PTYX]
    tag 82			pt3[PTYX]
      JUMPDEST 			pt3[PTYX]
      PUSH 20			pt3[PTYX]
      MUL 			pt3[PTYX]
      ADD 			pt3[PTYX]
      DUP10 			pt3
      PUSH 3			3
      PUSH 6			pt3[PTYY]
      DUP2 			pt3[PTYY]
      LT 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      PUSH [tag] 83			pt3[PTYY]
      JUMPI 			pt3[PTYY]
      INVALID 			pt3[PTYY]
    tag 83			pt3[PTYY]
      JUMPDEST 			pt3[PTYY]
      PUSH 20			pt3[PTYY]
      MUL 			pt3[PTYY]
      ADD 			pt3[PTYY]
      DUP11 			pt3
      PUSH 4			4
      PUSH 6			pt3[PTZX]
      DUP2 			pt3[PTZX]
      LT 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      PUSH [tag] 84			pt3[PTZX]
      JUMPI 			pt3[PTZX]
      INVALID 			pt3[PTZX]
    tag 84			pt3[PTZX]
      JUMPDEST 			pt3[PTZX]
      PUSH 20			pt3[PTZX]
      MUL 			pt3[PTZX]
      ADD 			pt3[PTZX]
      DUP12 			pt3
      PUSH 5			5
      PUSH 6			pt3[PTZY]
      DUP2 			pt3[PTZY]
      LT 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      PUSH [tag] 85			pt3[PTZY]
      JUMPI 			pt3[PTZY]
      INVALID 			pt3[PTZY]
    tag 85			pt3[PTZY]
      JUMPDEST 			pt3[PTZY]
      PUSH 20			pt3[PTZY]
      MUL 			pt3[PTZY]
      ADD 			pt3[PTZY]
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP1 			pt3
      SWAP1 			return pt3
      POP 			return pt3
      PUSH [tag] 77			return pt3
      JUMP 			return pt3
    tag 79			if (pt1zx == 0 && pt1zy == 0) ...
      JUMPDEST 			if (pt1zx == 0 && pt1zy == 0) ...
      PUSH 0			0
      DUP4 			pt2zx
      EQ 			pt2zx == 0
      DUP1 			pt2zx == 0 && pt2zy == 0
      ISZERO 			pt2zx == 0 && pt2zy == 0
      PUSH [tag] 87			pt2zx == 0 && pt2zy == 0
      JUMPI 			pt2zx == 0 && pt2zy == 0
      POP 			pt2zx == 0 && pt2zy == 0
      PUSH 0			0
      DUP3 			pt2zy
      EQ 			pt2zy == 0
    tag 87			pt2zx == 0 && pt2zy == 0
      JUMPDEST 			pt2zx == 0 && pt2zy == 0
      ISZERO 			if (pt2zx == 0 && pt2zy == 0) ...
      PUSH [tag] 88			if (pt2zx == 0 && pt2zy == 0) ...
      JUMPI 			if (pt2zx == 0 && pt2zy == 0) ...
      DUP13 			pt1xx
      DUP13 			pt1xy
      DUP13 			pt1yx
      DUP13 			pt1yy
      DUP13 			pt1zx
      DUP13 			pt1zy
      DUP7 			pt3
      PUSH 0			0
      PUSH 6			pt3[PTXX]
      DUP2 			pt3[PTXX]
      LT 			pt3[PTXX]
      ISZERO 			pt3[PTXX]
      ISZERO 			pt3[PTXX]
      PUSH [tag] 89			pt3[PTXX]
      JUMPI 			pt3[PTXX]
      INVALID 			pt3[PTXX]
    tag 89			pt3[PTXX]
      JUMPDEST 			pt3[PTXX]
      PUSH 20			pt3[PTXX]
      MUL 			pt3[PTXX]
      ADD 			pt3[PTXX]
      DUP8 			pt3
      PUSH 1			1
      PUSH 6			pt3[PTXY]
      DUP2 			pt3[PTXY]
      LT 			pt3[PTXY]
      ISZERO 			pt3[PTXY]
      ISZERO 			pt3[PTXY]
      PUSH [tag] 90			pt3[PTXY]
      JUMPI 			pt3[PTXY]
      INVALID 			pt3[PTXY]
    tag 90			pt3[PTXY]
      JUMPDEST 			pt3[PTXY]
      PUSH 20			pt3[PTXY]
      MUL 			pt3[PTXY]
      ADD 			pt3[PTXY]
      DUP9 			pt3
      PUSH 2			2
      PUSH 6			pt3[PTYX]
      DUP2 			pt3[PTYX]
      LT 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      PUSH [tag] 91			pt3[PTYX]
      JUMPI 			pt3[PTYX]
      INVALID 			pt3[PTYX]
    tag 91			pt3[PTYX]
      JUMPDEST 			pt3[PTYX]
      PUSH 20			pt3[PTYX]
      MUL 			pt3[PTYX]
      ADD 			pt3[PTYX]
      DUP10 			pt3
      PUSH 3			3
      PUSH 6			pt3[PTYY]
      DUP2 			pt3[PTYY]
      LT 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      PUSH [tag] 92			pt3[PTYY]
      JUMPI 			pt3[PTYY]
      INVALID 			pt3[PTYY]
    tag 92			pt3[PTYY]
      JUMPDEST 			pt3[PTYY]
      PUSH 20			pt3[PTYY]
      MUL 			pt3[PTYY]
      ADD 			pt3[PTYY]
      DUP11 			pt3
      PUSH 4			4
      PUSH 6			pt3[PTZX]
      DUP2 			pt3[PTZX]
      LT 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      PUSH [tag] 93			pt3[PTZX]
      JUMPI 			pt3[PTZX]
      INVALID 			pt3[PTZX]
    tag 93			pt3[PTZX]
      JUMPDEST 			pt3[PTZX]
      PUSH 20			pt3[PTZX]
      MUL 			pt3[PTZX]
      ADD 			pt3[PTZX]
      DUP12 			pt3
      PUSH 5			5
      PUSH 6			pt3[PTZY]
      DUP2 			pt3[PTZY]
      LT 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      PUSH [tag] 94			pt3[PTZY]
      JUMPI 			pt3[PTZY]
      INVALID 			pt3[PTZY]
    tag 94			pt3[PTZY]
      JUMPDEST 			pt3[PTZY]
      PUSH 20			pt3[PTZY]
      MUL 			pt3[PTZY]
      ADD 			pt3[PTZY]
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP1 			pt3
      SWAP1 			return pt3
      POP 			return pt3
      PUSH [tag] 77			return pt3
      JUMP 			return pt3
    tag 88			if (pt2zx == 0 && pt2zy == 0) ...
      JUMPDEST 			if (pt2zx == 0 && pt2zy == 0) ...
      PUSH [tag] 95			_FQ2Mul(pt2yx, pt2yy, pt1zx, p...
      DUP6 			pt2yx
      DUP6 			pt2yy
      DUP12 			pt1zx
      DUP12 			pt1zy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt2yx, pt2yy, pt1zx, p...
    tag 95			_FQ2Mul(pt2yx, pt2yy, pt1zx, p...
      JUMPDEST 			_FQ2Mul(pt2yx, pt2yy, pt1zx, p...
      DUP1 			(pt2yx,     pt2yy)     = _FQ2M...
      SWAP6 			(pt2yx,     pt2yy)     = _FQ2M...
      POP 			(pt2yx,     pt2yy)     = _FQ2M...
      DUP2 			(pt2yx,     pt2yy)     = _FQ2M...
      SWAP7 			(pt2yx,     pt2yy)     = _FQ2M...
      POP 			(pt2yx,     pt2yy)     = _FQ2M...
      POP 			(pt2yx,     pt2yy)     = _FQ2M...
      POP 			(pt2yx,     pt2yy)     = _FQ2M...
      PUSH [tag] 96			_FQ2Mul(pt1yx, pt1yy, pt2zx, p...
      DUP12 			pt1yx
      DUP12 			pt1yy
      DUP6 			pt2zx
      DUP6 			pt2zy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt1yx, pt1yy, pt2zx, p...
    tag 96			_FQ2Mul(pt1yx, pt1yy, pt2zx, p...
      JUMPDEST 			_FQ2Mul(pt1yx, pt1yy, pt2zx, p...
      DUP3 			pt3
      PUSH 2			2
      PUSH 6			pt3[PTYX]
      DUP2 			pt3[PTYX]
      LT 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      PUSH [tag] 97			pt3[PTYX]
      JUMPI 			pt3[PTYX]
      INVALID 			pt3[PTYX]
    tag 97			pt3[PTYX]
      JUMPDEST 			pt3[PTYX]
      PUSH 20			pt3[PTYX]
      MUL 			pt3[PTYX]
      ADD 			pt3[PTYX]
      DUP4 			pt3
      PUSH 3			3
      PUSH 6			pt3[PTYY]
      DUP2 			pt3[PTYY]
      LT 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      PUSH [tag] 98			pt3[PTYY]
      JUMPI 			pt3[PTYY]
      INVALID 			pt3[PTYY]
    tag 98			pt3[PTYY]
      JUMPDEST 			pt3[PTYY]
      PUSH 20			pt3[PTYY]
      MUL 			pt3[PTYY]
      ADD 			pt3[PTYY]
      DUP3 			(pt3[PTYX], pt3[PTYY]) = _FQ2M...
      DUP2 			(pt3[PTYX], pt3[PTYY]) = _FQ2M...
      MSTORE 			(pt3[PTYX], pt3[PTYY]) = _FQ2M...
      POP 			(pt3[PTYX], pt3[PTYY]) = _FQ2M...
      DUP3 			(pt3[PTYX], pt3[PTYY]) = _FQ2M...
      DUP2 			(pt3[PTYX], pt3[PTYY]) = _FQ2M...
      MSTORE 			(pt3[PTYX], pt3[PTYY]) = _FQ2M...
      POP 			(pt3[PTYX], pt3[PTYY]) = _FQ2M...
      POP 			(pt3[PTYX], pt3[PTYY]) = _FQ2M...
      POP 			(pt3[PTYX], pt3[PTYY]) = _FQ2M...
      PUSH [tag] 99			_FQ2Mul(pt2xx, pt2xy, pt1zx, p...
      DUP8 			pt2xx
      DUP8 			pt2xy
      DUP12 			pt1zx
      DUP12 			pt1zy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt2xx, pt2xy, pt1zx, p...
    tag 99			_FQ2Mul(pt2xx, pt2xy, pt1zx, p...
      JUMPDEST 			_FQ2Mul(pt2xx, pt2xy, pt1zx, p...
      DUP1 			(pt2xx,     pt2xy)     = _FQ2M...
      SWAP8 			(pt2xx,     pt2xy)     = _FQ2M...
      POP 			(pt2xx,     pt2xy)     = _FQ2M...
      DUP2 			(pt2xx,     pt2xy)     = _FQ2M...
      SWAP9 			(pt2xx,     pt2xy)     = _FQ2M...
      POP 			(pt2xx,     pt2xy)     = _FQ2M...
      POP 			(pt2xx,     pt2xy)     = _FQ2M...
      POP 			(pt2xx,     pt2xy)     = _FQ2M...
      PUSH [tag] 100			_FQ2Mul(pt1xx, pt1xy, pt2zx, p...
      DUP14 			pt1xx
      DUP14 			pt1xy
      DUP6 			pt2zx
      DUP6 			pt2zy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt1xx, pt1xy, pt2zx, p...
    tag 100			_FQ2Mul(pt1xx, pt1xy, pt2zx, p...
      JUMPDEST 			_FQ2Mul(pt1xx, pt1xy, pt2zx, p...
      DUP3 			pt3
      PUSH 4			4
      PUSH 6			pt3[PTZX]
      DUP2 			pt3[PTZX]
      LT 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      PUSH [tag] 101			pt3[PTZX]
      JUMPI 			pt3[PTZX]
      INVALID 			pt3[PTZX]
    tag 101			pt3[PTZX]
      JUMPDEST 			pt3[PTZX]
      PUSH 20			pt3[PTZX]
      MUL 			pt3[PTZX]
      ADD 			pt3[PTZX]
      DUP4 			pt3
      PUSH 5			5
      PUSH 6			pt3[PTZY]
      DUP2 			pt3[PTZY]
      LT 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      PUSH [tag] 102			pt3[PTZY]
      JUMPI 			pt3[PTZY]
      INVALID 			pt3[PTZY]
    tag 102			pt3[PTZY]
      JUMPDEST 			pt3[PTZY]
      PUSH 20			pt3[PTZY]
      MUL 			pt3[PTZY]
      ADD 			pt3[PTZY]
      DUP3 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      DUP2 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      MSTORE 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      POP 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      DUP3 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      DUP2 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      MSTORE 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      POP 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      POP 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      POP 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      DUP1 			pt3
      PUSH 4			4
      PUSH 6			pt3[PTZX]
      DUP2 			pt3[PTZX]
      LT 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      PUSH [tag] 103			pt3[PTZX]
      JUMPI 			pt3[PTZX]
      INVALID 			pt3[PTZX]
    tag 103			pt3[PTZX]
      JUMPDEST 			pt3[PTZX]
      PUSH 20			pt3[PTZX]
      MUL 			pt3[PTZX]
      ADD 			pt3[PTZX]
      MLOAD 			pt3[PTZX]
      DUP8 			pt2xx
      EQ 			pt2xx == pt3[PTZX]
      DUP1 			pt2xx == pt3[PTZX] && pt2xy ==...
      ISZERO 			pt2xx == pt3[PTZX] && pt2xy ==...
      PUSH [tag] 104			pt2xx == pt3[PTZX] && pt2xy ==...
      JUMPI 			pt2xx == pt3[PTZX] && pt2xy ==...
      POP 			pt2xx == pt3[PTZX] && pt2xy ==...
      DUP1 			pt3
      PUSH 5			5
      PUSH 6			pt3[PTZY]
      DUP2 			pt3[PTZY]
      LT 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      PUSH [tag] 105			pt3[PTZY]
      JUMPI 			pt3[PTZY]
      INVALID 			pt3[PTZY]
    tag 105			pt3[PTZY]
      JUMPDEST 			pt3[PTZY]
      PUSH 20			pt3[PTZY]
      MUL 			pt3[PTZY]
      ADD 			pt3[PTZY]
      MLOAD 			pt3[PTZY]
      DUP7 			pt2xy
      EQ 			pt2xy == pt3[PTZY]
    tag 104			pt2xx == pt3[PTZX] && pt2xy ==...
      JUMPDEST 			pt2xx == pt3[PTZX] && pt2xy ==...
      ISZERO 			if (pt2xx == pt3[PTZX] && pt2x...
      PUSH [tag] 106			if (pt2xx == pt3[PTZX] && pt2x...
      JUMPI 			if (pt2xx == pt3[PTZX] && pt2x...
      DUP1 			pt3
      PUSH 2			2
      PUSH 6			pt3[PTYX]
      DUP2 			pt3[PTYX]
      LT 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      PUSH [tag] 107			pt3[PTYX]
      JUMPI 			pt3[PTYX]
      INVALID 			pt3[PTYX]
    tag 107			pt3[PTYX]
      JUMPDEST 			pt3[PTYX]
      PUSH 20			pt3[PTYX]
      MUL 			pt3[PTYX]
      ADD 			pt3[PTYX]
      MLOAD 			pt3[PTYX]
      DUP6 			pt2yx
      EQ 			pt2yx == pt3[PTYX]
      DUP1 			pt2yx == pt3[PTYX] && pt2yy ==...
      ISZERO 			pt2yx == pt3[PTYX] && pt2yy ==...
      PUSH [tag] 108			pt2yx == pt3[PTYX] && pt2yy ==...
      JUMPI 			pt2yx == pt3[PTYX] && pt2yy ==...
      POP 			pt2yx == pt3[PTYX] && pt2yy ==...
      DUP1 			pt3
      PUSH 3			3
      PUSH 6			pt3[PTYY]
      DUP2 			pt3[PTYY]
      LT 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      PUSH [tag] 109			pt3[PTYY]
      JUMPI 			pt3[PTYY]
      INVALID 			pt3[PTYY]
    tag 109			pt3[PTYY]
      JUMPDEST 			pt3[PTYY]
      PUSH 20			pt3[PTYY]
      MUL 			pt3[PTYY]
      ADD 			pt3[PTYY]
      MLOAD 			pt3[PTYY]
      DUP5 			pt2yy
      EQ 			pt2yy == pt3[PTYY]
    tag 108			pt2yx == pt3[PTYX] && pt2yy ==...
      JUMPDEST 			pt2yx == pt3[PTYX] && pt2yy ==...
      ISZERO 			if (pt2yx == pt3[PTYX] && pt2y...
      PUSH [tag] 110			if (pt2yx == pt3[PTYX] && pt2y...
      JUMPI 			if (pt2yx == pt3[PTYX] && pt2y...
      PUSH [tag] 111			_ECTwistDoubleJacobian(pt1xx, ...
      DUP14 			pt1xx
      DUP14 			pt1xy
      DUP14 			pt1yx
      DUP14 			pt1yy
      DUP14 			pt1zx
      DUP14 			pt1zy
      PUSH [tag] 112			_ECTwistDoubleJacobian
      JUMP [in]			_ECTwistDoubleJacobian(pt1xx, ...
    tag 111			_ECTwistDoubleJacobian(pt1xx, ...
      JUMPDEST 			_ECTwistDoubleJacobian(pt1xx, ...
      DUP7 			pt3
      PUSH 0			0
      PUSH 6			pt3[PTXX]
      DUP2 			pt3[PTXX]
      LT 			pt3[PTXX]
      ISZERO 			pt3[PTXX]
      ISZERO 			pt3[PTXX]
      PUSH [tag] 113			pt3[PTXX]
      JUMPI 			pt3[PTXX]
      INVALID 			pt3[PTXX]
    tag 113			pt3[PTXX]
      JUMPDEST 			pt3[PTXX]
      PUSH 20			pt3[PTXX]
      MUL 			pt3[PTXX]
      ADD 			pt3[PTXX]
      DUP8 			pt3
      PUSH 1			1
      PUSH 6			pt3[PTXY]
      DUP2 			pt3[PTXY]
      LT 			pt3[PTXY]
      ISZERO 			pt3[PTXY]
      ISZERO 			pt3[PTXY]
      PUSH [tag] 114			pt3[PTXY]
      JUMPI 			pt3[PTXY]
      INVALID 			pt3[PTXY]
    tag 114			pt3[PTXY]
      JUMPDEST 			pt3[PTXY]
      PUSH 20			pt3[PTXY]
      MUL 			pt3[PTXY]
      ADD 			pt3[PTXY]
      DUP9 			pt3
      PUSH 2			2
      PUSH 6			pt3[PTYX]
      DUP2 			pt3[PTYX]
      LT 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      PUSH [tag] 115			pt3[PTYX]
      JUMPI 			pt3[PTYX]
      INVALID 			pt3[PTYX]
    tag 115			pt3[PTYX]
      JUMPDEST 			pt3[PTYX]
      PUSH 20			pt3[PTYX]
      MUL 			pt3[PTYX]
      ADD 			pt3[PTYX]
      DUP10 			pt3
      PUSH 3			3
      PUSH 6			pt3[PTYY]
      DUP2 			pt3[PTYY]
      LT 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      PUSH [tag] 116			pt3[PTYY]
      JUMPI 			pt3[PTYY]
      INVALID 			pt3[PTYY]
    tag 116			pt3[PTYY]
      JUMPDEST 			pt3[PTYY]
      PUSH 20			pt3[PTYY]
      MUL 			pt3[PTYY]
      ADD 			pt3[PTYY]
      DUP11 			pt3
      PUSH 4			4
      PUSH 6			pt3[PTZX]
      DUP2 			pt3[PTZX]
      LT 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      PUSH [tag] 117			pt3[PTZX]
      JUMPI 			pt3[PTZX]
      INVALID 			pt3[PTZX]
    tag 117			pt3[PTZX]
      JUMPDEST 			pt3[PTZX]
      PUSH 20			pt3[PTZX]
      MUL 			pt3[PTZX]
      ADD 			pt3[PTZX]
      DUP12 			pt3
      PUSH 5			5
      PUSH 6			pt3[PTZY]
      DUP2 			pt3[PTZY]
      LT 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      PUSH [tag] 118			pt3[PTZY]
      JUMPI 			pt3[PTZY]
      INVALID 			pt3[PTZY]
    tag 118			pt3[PTZY]
      JUMPDEST 			pt3[PTZY]
      PUSH 20			pt3[PTZY]
      MUL 			pt3[PTZY]
      ADD 			pt3[PTZY]
      DUP7 			(\n                        pt3...
      DUP2 			(\n                        pt3...
      MSTORE 			(\n                        pt3...
      POP 			(\n                        pt3...
      DUP7 			(\n                        pt3...
      DUP2 			(\n                        pt3...
      MSTORE 			(\n                        pt3...
      POP 			(\n                        pt3...
      DUP7 			(\n                        pt3...
      DUP2 			(\n                        pt3...
      MSTORE 			(\n                        pt3...
      POP 			(\n                        pt3...
      DUP7 			(\n                        pt3...
      DUP2 			(\n                        pt3...
      MSTORE 			(\n                        pt3...
      POP 			(\n                        pt3...
      DUP7 			(\n                        pt3...
      DUP2 			(\n                        pt3...
      MSTORE 			(\n                        pt3...
      POP 			(\n                        pt3...
      DUP7 			(\n                        pt3...
      DUP2 			(\n                        pt3...
      MSTORE 			(\n                        pt3...
      POP 			(\n                        pt3...
      POP 			(\n                        pt3...
      POP 			(\n                        pt3...
      POP 			(\n                        pt3...
      POP 			(\n                        pt3...
      POP 			(\n                        pt3...
      POP 			(\n                        pt3...
      DUP1 			pt3
      SWAP1 			return pt3
      POP 			return pt3
      PUSH [tag] 77			return pt3
      JUMP 			return pt3
    tag 110			if (pt2yx == pt3[PTYX] && pt2y...
      JUMPDEST 			if (pt2yx == pt3[PTYX] && pt2y...
      PUSH 1			1
      PUSH 0			0
      PUSH 1			1
      PUSH 0			0
      DUP1 			0
      PUSH 0			0
      DUP6 			(\n                    pt3[PTX...
      SWAP6 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP5 			(\n                    pt3[PTX...
      SWAP5 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP4 			(\n                    pt3[PTX...
      SWAP4 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP3 			(\n                    pt3[PTX...
      SWAP3 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      SWAP2 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP1 			(\n                    pt3[PTX...
      SWAP1 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP7 			pt3
      PUSH 0			0
      PUSH 6			pt3[PTXX]
      DUP2 			pt3[PTXX]
      LT 			pt3[PTXX]
      ISZERO 			pt3[PTXX]
      ISZERO 			pt3[PTXX]
      PUSH [tag] 119			pt3[PTXX]
      JUMPI 			pt3[PTXX]
      INVALID 			pt3[PTXX]
    tag 119			pt3[PTXX]
      JUMPDEST 			pt3[PTXX]
      PUSH 20			pt3[PTXX]
      MUL 			pt3[PTXX]
      ADD 			pt3[PTXX]
      DUP8 			pt3
      PUSH 1			1
      PUSH 6			pt3[PTXY]
      DUP2 			pt3[PTXY]
      LT 			pt3[PTXY]
      ISZERO 			pt3[PTXY]
      ISZERO 			pt3[PTXY]
      PUSH [tag] 120			pt3[PTXY]
      JUMPI 			pt3[PTXY]
      INVALID 			pt3[PTXY]
    tag 120			pt3[PTXY]
      JUMPDEST 			pt3[PTXY]
      PUSH 20			pt3[PTXY]
      MUL 			pt3[PTXY]
      ADD 			pt3[PTXY]
      DUP9 			pt3
      PUSH 2			2
      PUSH 6			pt3[PTYX]
      DUP2 			pt3[PTYX]
      LT 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      PUSH [tag] 121			pt3[PTYX]
      JUMPI 			pt3[PTYX]
      INVALID 			pt3[PTYX]
    tag 121			pt3[PTYX]
      JUMPDEST 			pt3[PTYX]
      PUSH 20			pt3[PTYX]
      MUL 			pt3[PTYX]
      ADD 			pt3[PTYX]
      DUP10 			pt3
      PUSH 3			3
      PUSH 6			pt3[PTYY]
      DUP2 			pt3[PTYY]
      LT 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      PUSH [tag] 122			pt3[PTYY]
      JUMPI 			pt3[PTYY]
      INVALID 			pt3[PTYY]
    tag 122			pt3[PTYY]
      JUMPDEST 			pt3[PTYY]
      PUSH 20			pt3[PTYY]
      MUL 			pt3[PTYY]
      ADD 			pt3[PTYY]
      DUP11 			pt3
      PUSH 4			4
      PUSH 6			pt3[PTZX]
      DUP2 			pt3[PTZX]
      LT 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      PUSH [tag] 123			pt3[PTZX]
      JUMPI 			pt3[PTZX]
      INVALID 			pt3[PTZX]
    tag 123			pt3[PTZX]
      JUMPDEST 			pt3[PTZX]
      PUSH 20			pt3[PTZX]
      MUL 			pt3[PTZX]
      ADD 			pt3[PTZX]
      DUP12 			pt3
      PUSH 5			5
      PUSH 6			pt3[PTZY]
      DUP2 			pt3[PTZY]
      LT 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      PUSH [tag] 124			pt3[PTZY]
      JUMPI 			pt3[PTZY]
      INVALID 			pt3[PTZY]
    tag 124			pt3[PTZY]
      JUMPDEST 			pt3[PTZY]
      PUSH 20			pt3[PTZY]
      MUL 			pt3[PTZY]
      ADD 			pt3[PTZY]
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP7 			(\n                    pt3[PTX...
      DUP2 			(\n                    pt3[PTX...
      MSTORE 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      POP 			(\n                    pt3[PTX...
      DUP1 			pt3
      SWAP1 			return pt3
      POP 			return pt3
      PUSH [tag] 77			return pt3
      JUMP 			return pt3
    tag 106			if (pt2xx == pt3[PTZX] && pt2x...
      JUMPDEST 			if (pt2xx == pt3[PTZX] && pt2x...
      PUSH [tag] 125			_FQ2Mul(pt1zx, pt1zy, pt2zx,  ...
      DUP10 			pt1zx
      DUP10 			pt1zy
      DUP6 			pt2zx
      DUP6 			pt2zy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt1zx, pt1zy, pt2zx,  ...
    tag 125			_FQ2Mul(pt1zx, pt1zy, pt2zx,  ...
      JUMPDEST 			_FQ2Mul(pt1zx, pt1zy, pt2zx,  ...
      DUP1 			(pt2zx,     pt2zy)     = _FQ2M...
      SWAP4 			(pt2zx,     pt2zy)     = _FQ2M...
      POP 			(pt2zx,     pt2zy)     = _FQ2M...
      DUP2 			(pt2zx,     pt2zy)     = _FQ2M...
      SWAP5 			(pt2zx,     pt2zy)     = _FQ2M...
      POP 			(pt2zx,     pt2zy)     = _FQ2M...
      POP 			(pt2zx,     pt2zy)     = _FQ2M...
      POP 			(pt2zx,     pt2zy)     = _FQ2M...
      PUSH [tag] 126			_FQ2Sub(pt2yx, pt2yy, pt3[PTYX...
      DUP6 			pt2yx
      DUP6 			pt2yy
      DUP4 			pt3
      PUSH 2			2
      PUSH 6			pt3[PTYX]
      DUP2 			pt3[PTYX]
      LT 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      PUSH [tag] 127			pt3[PTYX]
      JUMPI 			pt3[PTYX]
      INVALID 			pt3[PTYX]
    tag 127			pt3[PTYX]
      JUMPDEST 			pt3[PTYX]
      PUSH 20			pt3[PTYX]
      MUL 			pt3[PTYX]
      ADD 			pt3[PTYX]
      MLOAD 			pt3[PTYX]
      DUP5 			pt3
      PUSH 3			3
      PUSH 6			pt3[PTYY]
      DUP2 			pt3[PTYY]
      LT 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      PUSH [tag] 128			pt3[PTYY]
      JUMPI 			pt3[PTYY]
      INVALID 			pt3[PTYY]
    tag 128			pt3[PTYY]
      JUMPDEST 			pt3[PTYY]
      PUSH 20			pt3[PTYY]
      MUL 			pt3[PTYY]
      ADD 			pt3[PTYY]
      MLOAD 			pt3[PTYY]
      PUSH [tag] 73			_FQ2Sub
      JUMP [in]			_FQ2Sub(pt2yx, pt2yy, pt3[PTYX...
    tag 126			_FQ2Sub(pt2yx, pt2yy, pt3[PTYX...
      JUMPDEST 			_FQ2Sub(pt2yx, pt2yy, pt3[PTYX...
      DUP1 			(pt1xx,     pt1xy)     = _FQ2S...
      SWAP14 			(pt1xx,     pt1xy)     = _FQ2S...
      POP 			(pt1xx,     pt1xy)     = _FQ2S...
      DUP2 			(pt1xx,     pt1xy)     = _FQ2S...
      SWAP15 			(pt1xx,     pt1xy)     = _FQ2S...
      POP 			(pt1xx,     pt1xy)     = _FQ2S...
      POP 			(pt1xx,     pt1xy)     = _FQ2S...
      POP 			(pt1xx,     pt1xy)     = _FQ2S...
      PUSH [tag] 129			_FQ2Sub(pt2xx, pt2xy, pt3[PTZX...
      DUP8 			pt2xx
      DUP8 			pt2xy
      DUP4 			pt3
      PUSH 4			4
      PUSH 6			pt3[PTZX]
      DUP2 			pt3[PTZX]
      LT 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      PUSH [tag] 130			pt3[PTZX]
      JUMPI 			pt3[PTZX]
      INVALID 			pt3[PTZX]
    tag 130			pt3[PTZX]
      JUMPDEST 			pt3[PTZX]
      PUSH 20			pt3[PTZX]
      MUL 			pt3[PTZX]
      ADD 			pt3[PTZX]
      MLOAD 			pt3[PTZX]
      DUP5 			pt3
      PUSH 5			5
      PUSH 6			pt3[PTZY]
      DUP2 			pt3[PTZY]
      LT 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      PUSH [tag] 131			pt3[PTZY]
      JUMPI 			pt3[PTZY]
      INVALID 			pt3[PTZY]
    tag 131			pt3[PTZY]
      JUMPDEST 			pt3[PTZY]
      PUSH 20			pt3[PTZY]
      MUL 			pt3[PTZY]
      ADD 			pt3[PTZY]
      MLOAD 			pt3[PTZY]
      PUSH [tag] 73			_FQ2Sub
      JUMP [in]			_FQ2Sub(pt2xx, pt2xy, pt3[PTZX...
    tag 129			_FQ2Sub(pt2xx, pt2xy, pt3[PTZX...
      JUMPDEST 			_FQ2Sub(pt2xx, pt2xy, pt3[PTZX...
      DUP1 			(pt1yx,     pt1yy)     = _FQ2S...
      SWAP12 			(pt1yx,     pt1yy)     = _FQ2S...
      POP 			(pt1yx,     pt1yy)     = _FQ2S...
      DUP2 			(pt1yx,     pt1yy)     = _FQ2S...
      SWAP13 			(pt1yx,     pt1yy)     = _FQ2S...
      POP 			(pt1yx,     pt1yy)     = _FQ2S...
      POP 			(pt1yx,     pt1yy)     = _FQ2S...
      POP 			(pt1yx,     pt1yy)     = _FQ2S...
      PUSH [tag] 132			_FQ2Mul(pt1yx, pt1yy, pt1yx,  ...
      DUP12 			pt1yx
      DUP12 			pt1yy
      DUP14 			pt1yx
      DUP14 			pt1yy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt1yx, pt1yy, pt1yx,  ...
    tag 132			_FQ2Mul(pt1yx, pt1yy, pt1yx,  ...
      JUMPDEST 			_FQ2Mul(pt1yx, pt1yy, pt1yx,  ...
      DUP1 			(pt1zx,     pt1zy)     = _FQ2M...
      SWAP10 			(pt1zx,     pt1zy)     = _FQ2M...
      POP 			(pt1zx,     pt1zy)     = _FQ2M...
      DUP2 			(pt1zx,     pt1zy)     = _FQ2M...
      SWAP11 			(pt1zx,     pt1zy)     = _FQ2M...
      POP 			(pt1zx,     pt1zy)     = _FQ2M...
      POP 			(pt1zx,     pt1zy)     = _FQ2M...
      POP 			(pt1zx,     pt1zy)     = _FQ2M...
      PUSH [tag] 133			_FQ2Mul(pt1zx, pt1zy, pt3[PTZX...
      DUP10 			pt1zx
      DUP10 			pt1zy
      DUP4 			pt3
      PUSH 4			4
      PUSH 6			pt3[PTZX]
      DUP2 			pt3[PTZX]
      LT 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      PUSH [tag] 134			pt3[PTZX]
      JUMPI 			pt3[PTZX]
      INVALID 			pt3[PTZX]
    tag 134			pt3[PTZX]
      JUMPDEST 			pt3[PTZX]
      PUSH 20			pt3[PTZX]
      MUL 			pt3[PTZX]
      ADD 			pt3[PTZX]
      MLOAD 			pt3[PTZX]
      DUP5 			pt3
      PUSH 5			5
      PUSH 6			pt3[PTZY]
      DUP2 			pt3[PTZY]
      LT 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      PUSH [tag] 135			pt3[PTZY]
      JUMPI 			pt3[PTZY]
      INVALID 			pt3[PTZY]
    tag 135			pt3[PTZY]
      JUMPDEST 			pt3[PTZY]
      PUSH 20			pt3[PTZY]
      MUL 			pt3[PTZY]
      ADD 			pt3[PTZY]
      MLOAD 			pt3[PTZY]
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt1zx, pt1zy, pt3[PTZX...
    tag 133			_FQ2Mul(pt1zx, pt1zy, pt3[PTZX...
      JUMPDEST 			_FQ2Mul(pt1zx, pt1zy, pt3[PTZX...
      DUP1 			(pt2yx,     pt2yy)     = _FQ2M...
      SWAP6 			(pt2yx,     pt2yy)     = _FQ2M...
      POP 			(pt2yx,     pt2yy)     = _FQ2M...
      DUP2 			(pt2yx,     pt2yy)     = _FQ2M...
      SWAP7 			(pt2yx,     pt2yy)     = _FQ2M...
      POP 			(pt2yx,     pt2yy)     = _FQ2M...
      POP 			(pt2yx,     pt2yy)     = _FQ2M...
      POP 			(pt2yx,     pt2yy)     = _FQ2M...
      PUSH [tag] 136			_FQ2Mul(pt1zx, pt1zy, pt1yx,  ...
      DUP10 			pt1zx
      DUP10 			pt1zy
      DUP14 			pt1yx
      DUP14 			pt1yy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt1zx, pt1zy, pt1yx,  ...
    tag 136			_FQ2Mul(pt1zx, pt1zy, pt1yx,  ...
      JUMPDEST 			_FQ2Mul(pt1zx, pt1zy, pt1yx,  ...
      DUP1 			(pt1zx,     pt1zy)     = _FQ2M...
      SWAP10 			(pt1zx,     pt1zy)     = _FQ2M...
      POP 			(pt1zx,     pt1zy)     = _FQ2M...
      DUP2 			(pt1zx,     pt1zy)     = _FQ2M...
      SWAP11 			(pt1zx,     pt1zy)     = _FQ2M...
      POP 			(pt1zx,     pt1zy)     = _FQ2M...
      POP 			(pt1zx,     pt1zy)     = _FQ2M...
      POP 			(pt1zx,     pt1zy)     = _FQ2M...
      PUSH [tag] 137			_FQ2Mul(pt1zx, pt1zy, pt2zx,  ...
      DUP10 			pt1zx
      DUP10 			pt1zy
      DUP6 			pt2zx
      DUP6 			pt2zy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt1zx, pt1zy, pt2zx,  ...
    tag 137			_FQ2Mul(pt1zx, pt1zy, pt2zx,  ...
      JUMPDEST 			_FQ2Mul(pt1zx, pt1zy, pt2zx,  ...
      DUP3 			pt3
      PUSH 4			4
      PUSH 6			pt3[PTZX]
      DUP2 			pt3[PTZX]
      LT 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      ISZERO 			pt3[PTZX]
      PUSH [tag] 138			pt3[PTZX]
      JUMPI 			pt3[PTZX]
      INVALID 			pt3[PTZX]
    tag 138			pt3[PTZX]
      JUMPDEST 			pt3[PTZX]
      PUSH 20			pt3[PTZX]
      MUL 			pt3[PTZX]
      ADD 			pt3[PTZX]
      DUP4 			pt3
      PUSH 5			5
      PUSH 6			pt3[PTZY]
      DUP2 			pt3[PTZY]
      LT 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      ISZERO 			pt3[PTZY]
      PUSH [tag] 139			pt3[PTZY]
      JUMPI 			pt3[PTZY]
      INVALID 			pt3[PTZY]
    tag 139			pt3[PTZY]
      JUMPDEST 			pt3[PTZY]
      PUSH 20			pt3[PTZY]
      MUL 			pt3[PTZY]
      ADD 			pt3[PTZY]
      DUP3 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      DUP2 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      MSTORE 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      POP 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      DUP3 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      DUP2 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      MSTORE 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      POP 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      POP 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      POP 			(pt3[PTZX], pt3[PTZY]) = _FQ2M...
      PUSH [tag] 140			_FQ2Mul(pt1xx, pt1xy, pt1xx,  ...
      DUP14 			pt1xx
      DUP14 			pt1xy
      DUP16 			pt1xx
      DUP16 			pt1xy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt1xx, pt1xy, pt1xx,  ...
    tag 140			_FQ2Mul(pt1xx, pt1xy, pt1xx,  ...
      JUMPDEST 			_FQ2Mul(pt1xx, pt1xy, pt1xx,  ...
      DUP1 			(pt2xx,     pt2xy)     = _FQ2M...
      SWAP8 			(pt2xx,     pt2xy)     = _FQ2M...
      POP 			(pt2xx,     pt2xy)     = _FQ2M...
      DUP2 			(pt2xx,     pt2xy)     = _FQ2M...
      SWAP9 			(pt2xx,     pt2xy)     = _FQ2M...
      POP 			(pt2xx,     pt2xy)     = _FQ2M...
      POP 			(pt2xx,     pt2xy)     = _FQ2M...
      POP 			(pt2xx,     pt2xy)     = _FQ2M...
      PUSH [tag] 141			_FQ2Mul(pt2xx, pt2xy, pt2zx,  ...
      DUP8 			pt2xx
      DUP8 			pt2xy
      DUP6 			pt2zx
      DUP6 			pt2zy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt2xx, pt2xy, pt2zx,  ...
    tag 141			_FQ2Mul(pt2xx, pt2xy, pt2zx,  ...
      JUMPDEST 			_FQ2Mul(pt2xx, pt2xy, pt2zx,  ...
      DUP1 			(pt2xx,     pt2xy)     = _FQ2M...
      SWAP8 			(pt2xx,     pt2xy)     = _FQ2M...
      POP 			(pt2xx,     pt2xy)     = _FQ2M...
      DUP2 			(pt2xx,     pt2xy)     = _FQ2M...
      SWAP9 			(pt2xx,     pt2xy)     = _FQ2M...
      POP 			(pt2xx,     pt2xy)     = _FQ2M...
      POP 			(pt2xx,     pt2xy)     = _FQ2M...
      POP 			(pt2xx,     pt2xy)     = _FQ2M...
      PUSH [tag] 142			_FQ2Sub(pt2xx, pt2xy, pt1zx,  ...
      DUP8 			pt2xx
      DUP8 			pt2xy
      DUP12 			pt1zx
      DUP12 			pt1zy
      PUSH [tag] 73			_FQ2Sub
      JUMP [in]			_FQ2Sub(pt2xx, pt2xy, pt1zx,  ...
    tag 142			_FQ2Sub(pt2xx, pt2xy, pt1zx,  ...
      JUMPDEST 			_FQ2Sub(pt2xx, pt2xy, pt1zx,  ...
      DUP1 			(pt2xx,     pt2xy)     = _FQ2S...
      SWAP8 			(pt2xx,     pt2xy)     = _FQ2S...
      POP 			(pt2xx,     pt2xy)     = _FQ2S...
      DUP2 			(pt2xx,     pt2xy)     = _FQ2S...
      SWAP9 			(pt2xx,     pt2xy)     = _FQ2S...
      POP 			(pt2xx,     pt2xy)     = _FQ2S...
      POP 			(pt2xx,     pt2xy)     = _FQ2S...
      POP 			(pt2xx,     pt2xy)     = _FQ2S...
      PUSH [tag] 143			_FQ2Muc(pt2yx, pt2yy, 2)
      DUP6 			pt2yx
      DUP6 			pt2yy
      PUSH 2			2
      PUSH [tag] 144			_FQ2Muc
      JUMP [in]			_FQ2Muc(pt2yx, pt2yy, 2)
    tag 143			_FQ2Muc(pt2yx, pt2yy, 2)
      JUMPDEST 			_FQ2Muc(pt2yx, pt2yy, 2)
      DUP1 			(pt2zx,     pt2zy)     = _FQ2M...
      SWAP4 			(pt2zx,     pt2zy)     = _FQ2M...
      POP 			(pt2zx,     pt2zy)     = _FQ2M...
      DUP2 			(pt2zx,     pt2zy)     = _FQ2M...
      SWAP5 			(pt2zx,     pt2zy)     = _FQ2M...
      POP 			(pt2zx,     pt2zy)     = _FQ2M...
      POP 			(pt2zx,     pt2zy)     = _FQ2M...
      POP 			(pt2zx,     pt2zy)     = _FQ2M...
      PUSH [tag] 145			_FQ2Sub(pt2xx, pt2xy, pt2zx,  ...
      DUP8 			pt2xx
      DUP8 			pt2xy
      DUP6 			pt2zx
      DUP6 			pt2zy
      PUSH [tag] 73			_FQ2Sub
      JUMP [in]			_FQ2Sub(pt2xx, pt2xy, pt2zx,  ...
    tag 145			_FQ2Sub(pt2xx, pt2xy, pt2zx,  ...
      JUMPDEST 			_FQ2Sub(pt2xx, pt2xy, pt2zx,  ...
      DUP1 			(pt2xx,     pt2xy)     = _FQ2S...
      SWAP8 			(pt2xx,     pt2xy)     = _FQ2S...
      POP 			(pt2xx,     pt2xy)     = _FQ2S...
      DUP2 			(pt2xx,     pt2xy)     = _FQ2S...
      SWAP9 			(pt2xx,     pt2xy)     = _FQ2S...
      POP 			(pt2xx,     pt2xy)     = _FQ2S...
      POP 			(pt2xx,     pt2xy)     = _FQ2S...
      POP 			(pt2xx,     pt2xy)     = _FQ2S...
      PUSH [tag] 146			_FQ2Mul(pt1yx, pt1yy, pt2xx,  ...
      DUP12 			pt1yx
      DUP12 			pt1yy
      DUP10 			pt2xx
      DUP10 			pt2xy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt1yx, pt1yy, pt2xx,  ...
    tag 146			_FQ2Mul(pt1yx, pt1yy, pt2xx,  ...
      JUMPDEST 			_FQ2Mul(pt1yx, pt1yy, pt2xx,  ...
      DUP3 			pt3
      PUSH 0			0
      PUSH 6			pt3[PTXX]
      DUP2 			pt3[PTXX]
      LT 			pt3[PTXX]
      ISZERO 			pt3[PTXX]
      ISZERO 			pt3[PTXX]
      PUSH [tag] 147			pt3[PTXX]
      JUMPI 			pt3[PTXX]
      INVALID 			pt3[PTXX]
    tag 147			pt3[PTXX]
      JUMPDEST 			pt3[PTXX]
      PUSH 20			pt3[PTXX]
      MUL 			pt3[PTXX]
      ADD 			pt3[PTXX]
      DUP4 			pt3
      PUSH 1			1
      PUSH 6			pt3[PTXY]
      DUP2 			pt3[PTXY]
      LT 			pt3[PTXY]
      ISZERO 			pt3[PTXY]
      ISZERO 			pt3[PTXY]
      PUSH [tag] 148			pt3[PTXY]
      JUMPI 			pt3[PTXY]
      INVALID 			pt3[PTXY]
    tag 148			pt3[PTXY]
      JUMPDEST 			pt3[PTXY]
      PUSH 20			pt3[PTXY]
      MUL 			pt3[PTXY]
      ADD 			pt3[PTXY]
      DUP3 			(pt3[PTXX], pt3[PTXY]) = _FQ2M...
      DUP2 			(pt3[PTXX], pt3[PTXY]) = _FQ2M...
      MSTORE 			(pt3[PTXX], pt3[PTXY]) = _FQ2M...
      POP 			(pt3[PTXX], pt3[PTXY]) = _FQ2M...
      DUP3 			(pt3[PTXX], pt3[PTXY]) = _FQ2M...
      DUP2 			(pt3[PTXX], pt3[PTXY]) = _FQ2M...
      MSTORE 			(pt3[PTXX], pt3[PTXY]) = _FQ2M...
      POP 			(pt3[PTXX], pt3[PTXY]) = _FQ2M...
      POP 			(pt3[PTXX], pt3[PTXY]) = _FQ2M...
      POP 			(pt3[PTXX], pt3[PTXY]) = _FQ2M...
      PUSH [tag] 149			_FQ2Sub(pt2yx, pt2yy, pt2xx,  ...
      DUP6 			pt2yx
      DUP6 			pt2yy
      DUP10 			pt2xx
      DUP10 			pt2xy
      PUSH [tag] 73			_FQ2Sub
      JUMP [in]			_FQ2Sub(pt2yx, pt2yy, pt2xx,  ...
    tag 149			_FQ2Sub(pt2yx, pt2yy, pt2xx,  ...
      JUMPDEST 			_FQ2Sub(pt2yx, pt2yy, pt2xx,  ...
      DUP1 			(pt1yx,     pt1yy)     = _FQ2S...
      SWAP12 			(pt1yx,     pt1yy)     = _FQ2S...
      POP 			(pt1yx,     pt1yy)     = _FQ2S...
      DUP2 			(pt1yx,     pt1yy)     = _FQ2S...
      SWAP13 			(pt1yx,     pt1yy)     = _FQ2S...
      POP 			(pt1yx,     pt1yy)     = _FQ2S...
      POP 			(pt1yx,     pt1yy)     = _FQ2S...
      POP 			(pt1yx,     pt1yy)     = _FQ2S...
      PUSH [tag] 150			_FQ2Mul(pt1xx, pt1xy, pt1yx,  ...
      DUP14 			pt1xx
      DUP14 			pt1xy
      DUP14 			pt1yx
      DUP14 			pt1yy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt1xx, pt1xy, pt1yx,  ...
    tag 150			_FQ2Mul(pt1xx, pt1xy, pt1yx,  ...
      JUMPDEST 			_FQ2Mul(pt1xx, pt1xy, pt1yx,  ...
      DUP1 			(pt1yx,     pt1yy)     = _FQ2M...
      SWAP12 			(pt1yx,     pt1yy)     = _FQ2M...
      POP 			(pt1yx,     pt1yy)     = _FQ2M...
      DUP2 			(pt1yx,     pt1yy)     = _FQ2M...
      SWAP13 			(pt1yx,     pt1yy)     = _FQ2M...
      POP 			(pt1yx,     pt1yy)     = _FQ2M...
      POP 			(pt1yx,     pt1yy)     = _FQ2M...
      POP 			(pt1yx,     pt1yy)     = _FQ2M...
      PUSH [tag] 151			_FQ2Mul(pt1zx, pt1zy, pt3[PTYX...
      DUP10 			pt1zx
      DUP10 			pt1zy
      DUP4 			pt3
      PUSH 2			2
      PUSH 6			pt3[PTYX]
      DUP2 			pt3[PTYX]
      LT 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      PUSH [tag] 152			pt3[PTYX]
      JUMPI 			pt3[PTYX]
      INVALID 			pt3[PTYX]
    tag 152			pt3[PTYX]
      JUMPDEST 			pt3[PTYX]
      PUSH 20			pt3[PTYX]
      MUL 			pt3[PTYX]
      ADD 			pt3[PTYX]
      MLOAD 			pt3[PTYX]
      DUP5 			pt3
      PUSH 3			3
      PUSH 6			pt3[PTYY]
      DUP2 			pt3[PTYY]
      LT 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      PUSH [tag] 153			pt3[PTYY]
      JUMPI 			pt3[PTYY]
      INVALID 			pt3[PTYY]
    tag 153			pt3[PTYY]
      JUMPDEST 			pt3[PTYY]
      PUSH 20			pt3[PTYY]
      MUL 			pt3[PTYY]
      ADD 			pt3[PTYY]
      MLOAD 			pt3[PTYY]
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt1zx, pt1zy, pt3[PTYX...
    tag 151			_FQ2Mul(pt1zx, pt1zy, pt3[PTYX...
      JUMPDEST 			_FQ2Mul(pt1zx, pt1zy, pt3[PTYX...
      DUP1 			(pt1xx,     pt1xy)     = _FQ2M...
      SWAP14 			(pt1xx,     pt1xy)     = _FQ2M...
      POP 			(pt1xx,     pt1xy)     = _FQ2M...
      DUP2 			(pt1xx,     pt1xy)     = _FQ2M...
      SWAP15 			(pt1xx,     pt1xy)     = _FQ2M...
      POP 			(pt1xx,     pt1xy)     = _FQ2M...
      POP 			(pt1xx,     pt1xy)     = _FQ2M...
      POP 			(pt1xx,     pt1xy)     = _FQ2M...
      PUSH [tag] 154			_FQ2Sub(pt1yx, pt1yy, pt1xx,  ...
      DUP12 			pt1yx
      DUP12 			pt1yy
      DUP16 			pt1xx
      DUP16 			pt1xy
      PUSH [tag] 73			_FQ2Sub
      JUMP [in]			_FQ2Sub(pt1yx, pt1yy, pt1xx,  ...
    tag 154			_FQ2Sub(pt1yx, pt1yy, pt1xx,  ...
      JUMPDEST 			_FQ2Sub(pt1yx, pt1yy, pt1xx,  ...
      DUP3 			pt3
      PUSH 2			2
      PUSH 6			pt3[PTYX]
      DUP2 			pt3[PTYX]
      LT 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      ISZERO 			pt3[PTYX]
      PUSH [tag] 155			pt3[PTYX]
      JUMPI 			pt3[PTYX]
      INVALID 			pt3[PTYX]
    tag 155			pt3[PTYX]
      JUMPDEST 			pt3[PTYX]
      PUSH 20			pt3[PTYX]
      MUL 			pt3[PTYX]
      ADD 			pt3[PTYX]
      DUP4 			pt3
      PUSH 3			3
      PUSH 6			pt3[PTYY]
      DUP2 			pt3[PTYY]
      LT 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      ISZERO 			pt3[PTYY]
      PUSH [tag] 156			pt3[PTYY]
      JUMPI 			pt3[PTYY]
      INVALID 			pt3[PTYY]
    tag 156			pt3[PTYY]
      JUMPDEST 			pt3[PTYY]
      PUSH 20			pt3[PTYY]
      MUL 			pt3[PTYY]
      ADD 			pt3[PTYY]
      DUP3 			(pt3[PTYX], pt3[PTYY]) = _FQ2S...
      DUP2 			(pt3[PTYX], pt3[PTYY]) = _FQ2S...
      MSTORE 			(pt3[PTYX], pt3[PTYY]) = _FQ2S...
      POP 			(pt3[PTYX], pt3[PTYY]) = _FQ2S...
      DUP3 			(pt3[PTYX], pt3[PTYY]) = _FQ2S...
      DUP2 			(pt3[PTYX], pt3[PTYY]) = _FQ2S...
      MSTORE 			(pt3[PTYX], pt3[PTYY]) = _FQ2S...
      POP 			(pt3[PTYX], pt3[PTYY]) = _FQ2S...
      POP 			(pt3[PTYX], pt3[PTYY]) = _FQ2S...
      POP 			(pt3[PTYX], pt3[PTYY]) = _FQ2S...
    tag 77			function _ECTwistAddJacobian(\...
      JUMPDEST 			function _ECTwistAddJacobian(\...
      SWAP13 			function _ECTwistAddJacobian(\...
      SWAP12 			function _ECTwistAddJacobian(\...
      POP 			function _ECTwistAddJacobian(\...
      POP 			function _ECTwistAddJacobian(\...
      POP 			function _ECTwistAddJacobian(\...
      POP 			function _ECTwistAddJacobian(\...
      POP 			function _ECTwistAddJacobian(\...
      POP 			function _ECTwistAddJacobian(\...
      POP 			function _ECTwistAddJacobian(\...
      POP 			function _ECTwistAddJacobian(\...
      POP 			function _ECTwistAddJacobian(\...
      POP 			function _ECTwistAddJacobian(\...
      POP 			function _ECTwistAddJacobian(\...
      POP 			function _ECTwistAddJacobian(\...
      JUMP [out]			function _ECTwistAddJacobian(\...
    tag 48			function _fromJacobian(\n     ...
      JUMPDEST 			function _fromJacobian(\n     ...
      PUSH 0			uint256 pt2xx
      DUP1 			uint256 pt2xy
      PUSH 0			uint256 pt2yx
      DUP1 			uint256 pt2yy
      PUSH 0			uint256 invzx
      DUP1 			uint256 invzy
      PUSH [tag] 158			_FQ2Inv(pt1zx, pt1zy)
      DUP9 			pt1zx
      DUP9 			pt1zy
      PUSH [tag] 159			_FQ2Inv
      JUMP [in]			_FQ2Inv(pt1zx, pt1zy)
    tag 158			_FQ2Inv(pt1zx, pt1zy)
      JUMPDEST 			_FQ2Inv(pt1zx, pt1zy)
      DUP1 			(invzx, invzy) = _FQ2Inv(pt1zx...
      SWAP3 			(invzx, invzy) = _FQ2Inv(pt1zx...
      POP 			(invzx, invzy) = _FQ2Inv(pt1zx...
      DUP2 			(invzx, invzy) = _FQ2Inv(pt1zx...
      SWAP4 			(invzx, invzy) = _FQ2Inv(pt1zx...
      POP 			(invzx, invzy) = _FQ2Inv(pt1zx...
      POP 			(invzx, invzy) = _FQ2Inv(pt1zx...
      POP 			(invzx, invzy) = _FQ2Inv(pt1zx...
      PUSH [tag] 160			_FQ2Mul(pt1xx, pt1xy, invzx, i...
      DUP13 			pt1xx
      DUP13 			pt1xy
      DUP5 			invzx
      DUP5 			invzy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt1xx, pt1xy, invzx, i...
    tag 160			_FQ2Mul(pt1xx, pt1xy, invzx, i...
      JUMPDEST 			_FQ2Mul(pt1xx, pt1xy, invzx, i...
      DUP1 			(pt2xx, pt2xy) = _FQ2Mul(pt1xx...
      SWAP7 			(pt2xx, pt2xy) = _FQ2Mul(pt1xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt1xx...
      DUP2 			(pt2xx, pt2xy) = _FQ2Mul(pt1xx...
      SWAP8 			(pt2xx, pt2xy) = _FQ2Mul(pt1xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt1xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt1xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt1xx...
      PUSH [tag] 161			_FQ2Mul(pt1yx, pt1yy, invzx, i...
      DUP11 			pt1yx
      DUP11 			pt1yy
      DUP5 			invzx
      DUP5 			invzy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt1yx, pt1yy, invzx, i...
    tag 161			_FQ2Mul(pt1yx, pt1yy, invzx, i...
      JUMPDEST 			_FQ2Mul(pt1yx, pt1yy, invzx, i...
      DUP1 			(pt2yx, pt2yy) = _FQ2Mul(pt1yx...
      SWAP5 			(pt2yx, pt2yy) = _FQ2Mul(pt1yx...
      POP 			(pt2yx, pt2yy) = _FQ2Mul(pt1yx...
      DUP2 			(pt2yx, pt2yy) = _FQ2Mul(pt1yx...
      SWAP6 			(pt2yx, pt2yy) = _FQ2Mul(pt1yx...
      POP 			(pt2yx, pt2yy) = _FQ2Mul(pt1yx...
      POP 			(pt2yx, pt2yy) = _FQ2Mul(pt1yx...
      POP 			(pt2yx, pt2yy) = _FQ2Mul(pt1yx...
      POP 			function _fromJacobian(\n     ...
      POP 			function _fromJacobian(\n     ...
      SWAP7 			function _fromJacobian(\n     ...
      POP 			function _fromJacobian(\n     ...
      SWAP7 			function _fromJacobian(\n     ...
      POP 			function _fromJacobian(\n     ...
      SWAP7 			function _fromJacobian(\n     ...
      POP 			function _fromJacobian(\n     ...
      SWAP7 			function _fromJacobian(\n     ...
      SWAP3 			function _fromJacobian(\n     ...
      POP 			function _fromJacobian(\n     ...
      POP 			function _fromJacobian(\n     ...
      POP 			function _fromJacobian(\n     ...
      JUMP [out]			function _fromJacobian(\n     ...
    tag 59			function _ECTwistMulJacobian(\...
      JUMPDEST 			function _ECTwistMulJacobian(\...
      PUSH [tag] 162			uint256[6] memory pt2
      PUSH [tag] 38			uint256[6] memory pt2
      JUMP [in]			uint256[6] memory pt2
    tag 162			uint256[6] memory pt2
      JUMPDEST 			uint256[6] memory pt2
    tag 164			while (d != 0) {\n            ...
      JUMPDEST 			while (d != 0) {\n            ...
      PUSH 0			0
      DUP9 			d
      EQ 			d != 0
      ISZERO 			d != 0
      ISZERO 			while (d != 0) {\n            ...
      PUSH [tag] 165			while (d != 0) {\n            ...
      JUMPI 			while (d != 0) {\n            ...
      PUSH 0			0
      PUSH 1			1
      DUP10 			d
      AND 			d & 1
      EQ 			(d & 1) != 0
      ISZERO 			(d & 1) != 0
      ISZERO 			if ((d & 1) != 0) {\n         ...
      PUSH [tag] 166			if ((d & 1) != 0) {\n         ...
      JUMPI 			if ((d & 1) != 0) {\n         ...
      PUSH [tag] 167			_ECTwistAddJacobian(\n        ...
      DUP2 			pt2
      PUSH 0			0
      PUSH 6			pt2[PTXX]
      DUP2 			pt2[PTXX]
      LT 			pt2[PTXX]
      ISZERO 			pt2[PTXX]
      ISZERO 			pt2[PTXX]
      PUSH [tag] 168			pt2[PTXX]
      JUMPI 			pt2[PTXX]
      INVALID 			pt2[PTXX]
    tag 168			pt2[PTXX]
      JUMPDEST 			pt2[PTXX]
      PUSH 20			pt2[PTXX]
      MUL 			pt2[PTXX]
      ADD 			pt2[PTXX]
      MLOAD 			pt2[PTXX]
      DUP3 			pt2
      PUSH 1			1
      PUSH 6			pt2[PTXY]
      DUP2 			pt2[PTXY]
      LT 			pt2[PTXY]
      ISZERO 			pt2[PTXY]
      ISZERO 			pt2[PTXY]
      PUSH [tag] 169			pt2[PTXY]
      JUMPI 			pt2[PTXY]
      INVALID 			pt2[PTXY]
    tag 169			pt2[PTXY]
      JUMPDEST 			pt2[PTXY]
      PUSH 20			pt2[PTXY]
      MUL 			pt2[PTXY]
      ADD 			pt2[PTXY]
      MLOAD 			pt2[PTXY]
      DUP4 			pt2
      PUSH 2			2
      PUSH 6			pt2[PTYX]
      DUP2 			pt2[PTYX]
      LT 			pt2[PTYX]
      ISZERO 			pt2[PTYX]
      ISZERO 			pt2[PTYX]
      PUSH [tag] 170			pt2[PTYX]
      JUMPI 			pt2[PTYX]
      INVALID 			pt2[PTYX]
    tag 170			pt2[PTYX]
      JUMPDEST 			pt2[PTYX]
      PUSH 20			pt2[PTYX]
      MUL 			pt2[PTYX]
      ADD 			pt2[PTYX]
      MLOAD 			pt2[PTYX]
      DUP5 			pt2
      PUSH 3			3
      PUSH 6			pt2[PTYY]
      DUP2 			pt2[PTYY]
      LT 			pt2[PTYY]
      ISZERO 			pt2[PTYY]
      ISZERO 			pt2[PTYY]
      PUSH [tag] 171			pt2[PTYY]
      JUMPI 			pt2[PTYY]
      INVALID 			pt2[PTYY]
    tag 171			pt2[PTYY]
      JUMPDEST 			pt2[PTYY]
      PUSH 20			pt2[PTYY]
      MUL 			pt2[PTYY]
      ADD 			pt2[PTYY]
      MLOAD 			pt2[PTYY]
      DUP6 			pt2
      PUSH 4			4
      PUSH 6			pt2[PTZX]
      DUP2 			pt2[PTZX]
      LT 			pt2[PTZX]
      ISZERO 			pt2[PTZX]
      ISZERO 			pt2[PTZX]
      PUSH [tag] 172			pt2[PTZX]
      JUMPI 			pt2[PTZX]
      INVALID 			pt2[PTZX]
    tag 172			pt2[PTZX]
      JUMPDEST 			pt2[PTZX]
      PUSH 20			pt2[PTZX]
      MUL 			pt2[PTZX]
      ADD 			pt2[PTZX]
      MLOAD 			pt2[PTZX]
      DUP7 			pt2
      PUSH 5			5
      PUSH 6			pt2[PTZY]
      DUP2 			pt2[PTZY]
      LT 			pt2[PTZY]
      ISZERO 			pt2[PTZY]
      ISZERO 			pt2[PTZY]
      PUSH [tag] 173			pt2[PTZY]
      JUMPI 			pt2[PTZY]
      INVALID 			pt2[PTZY]
    tag 173			pt2[PTZY]
      JUMPDEST 			pt2[PTZY]
      PUSH 20			pt2[PTZY]
      MUL 			pt2[PTZY]
      ADD 			pt2[PTZY]
      MLOAD 			pt2[PTZY]
      DUP14 			pt1xx
      DUP14 			pt1xy
      DUP14 			pt1yx
      DUP14 			pt1yy
      DUP14 			pt1zx
      DUP14 			pt1zy
      PUSH [tag] 40			_ECTwistAddJacobian
      JUMP [in]			_ECTwistAddJacobian(\n        ...
    tag 167			_ECTwistAddJacobian(\n        ...
      JUMPDEST 			_ECTwistAddJacobian(\n        ...
      SWAP1 			pt2 = _ECTwistAddJacobian(\n  ...
      POP 			pt2 = _ECTwistAddJacobian(\n  ...
    tag 166			if ((d & 1) != 0) {\n         ...
      JUMPDEST 			if ((d & 1) != 0) {\n         ...
      PUSH [tag] 174			_ECTwistDoubleJacobian(\n     ...
      DUP8 			pt1xx
      DUP8 			pt1xy
      DUP8 			pt1yx
      DUP8 			pt1yy
      DUP8 			pt1zx
      DUP8 			pt1zy
      PUSH [tag] 112			_ECTwistDoubleJacobian
      JUMP [in]			_ECTwistDoubleJacobian(\n     ...
    tag 174			_ECTwistDoubleJacobian(\n     ...
      JUMPDEST 			_ECTwistDoubleJacobian(\n     ...
      DUP1 			(\n                pt1xx, pt1x...
      SWAP8 			(\n                pt1xx, pt1x...
      POP 			(\n                pt1xx, pt1x...
      DUP2 			(\n                pt1xx, pt1x...
      SWAP9 			(\n                pt1xx, pt1x...
      POP 			(\n                pt1xx, pt1x...
      DUP3 			(\n                pt1xx, pt1x...
      SWAP10 			(\n                pt1xx, pt1x...
      POP 			(\n                pt1xx, pt1x...
      DUP4 			(\n                pt1xx, pt1x...
      SWAP11 			(\n                pt1xx, pt1x...
      POP 			(\n                pt1xx, pt1x...
      DUP5 			(\n                pt1xx, pt1x...
      SWAP12 			(\n                pt1xx, pt1x...
      POP 			(\n                pt1xx, pt1x...
      DUP6 			(\n                pt1xx, pt1x...
      SWAP13 			(\n                pt1xx, pt1x...
      POP 			(\n                pt1xx, pt1x...
      POP 			(\n                pt1xx, pt1x...
      POP 			(\n                pt1xx, pt1x...
      POP 			(\n                pt1xx, pt1x...
      POP 			(\n                pt1xx, pt1x...
      POP 			(\n                pt1xx, pt1x...
      POP 			(\n                pt1xx, pt1x...
      PUSH 2			2
      DUP9 			d
      DUP2 			d / 2
      ISZERO 			d / 2
      ISZERO 			d / 2
      PUSH [tag] 175			d / 2
      JUMPI 			d / 2
      INVALID 			d / 2
    tag 175			d / 2
      JUMPDEST 			d / 2
      DIV 			d / 2
      SWAP8 			d = d / 2
      POP 			d = d / 2
      PUSH [tag] 164			while (d != 0) {\n            ...
      JUMP 			while (d != 0) {\n            ...
    tag 165			while (d != 0) {\n            ...
      JUMPDEST 			while (d != 0) {\n            ...
      SWAP8 			function _ECTwistMulJacobian(\...
      SWAP7 			function _ECTwistMulJacobian(\...
      POP 			function _ECTwistMulJacobian(\...
      POP 			function _ECTwistMulJacobian(\...
      POP 			function _ECTwistMulJacobian(\...
      POP 			function _ECTwistMulJacobian(\...
      POP 			function _ECTwistMulJacobian(\...
      POP 			function _ECTwistMulJacobian(\...
      POP 			function _ECTwistMulJacobian(\...
      JUMP [out]			function _ECTwistMulJacobian(\...
    tag 69			function _FQ2Mul(\n        uin...
      JUMPDEST 			function _FQ2Mul(\n        uin...
      PUSH 0			uint256
      DUP1 			uint256
      PUSH [tag] 177			submod(mulmod(xx, yx, FIELD_MO...
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      DUP1 			mulmod(xx, yx, FIELD_MODULUS)
      ISZERO 			mulmod(xx, yx, FIELD_MODULUS)
      ISZERO 			mulmod(xx, yx, FIELD_MODULUS)
      PUSH [tag] 178			mulmod(xx, yx, FIELD_MODULUS)
      JUMPI 			mulmod(xx, yx, FIELD_MODULUS)
      INVALID 			mulmod(xx, yx, FIELD_MODULUS)
    tag 178			mulmod(xx, yx, FIELD_MODULUS)
      JUMPDEST 			mulmod(xx, yx, FIELD_MODULUS)
      DUP6 			yx
      DUP9 			xx
      MULMOD 			mulmod(xx, yx, FIELD_MODULUS)
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      DUP1 			mulmod(xy, yy, FIELD_MODULUS)
      ISZERO 			mulmod(xy, yy, FIELD_MODULUS)
      ISZERO 			mulmod(xy, yy, FIELD_MODULUS)
      PUSH [tag] 179			mulmod(xy, yy, FIELD_MODULUS)
      JUMPI 			mulmod(xy, yy, FIELD_MODULUS)
      INVALID 			mulmod(xy, yy, FIELD_MODULUS)
    tag 179			mulmod(xy, yy, FIELD_MODULUS)
      JUMPDEST 			mulmod(xy, yy, FIELD_MODULUS)
      DUP6 			yy
      DUP9 			xy
      MULMOD 			mulmod(xy, yy, FIELD_MODULUS)
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      PUSH [tag] 180			submod
      JUMP [in]			submod(mulmod(xx, yx, FIELD_MO...
    tag 177			submod(mulmod(xx, yx, FIELD_MO...
      JUMPDEST 			submod(mulmod(xx, yx, FIELD_MO...
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      DUP1 			addmod(mulmod(xx, yy, FIELD_MO...
      ISZERO 			addmod(mulmod(xx, yy, FIELD_MO...
      ISZERO 			addmod(mulmod(xx, yy, FIELD_MO...
      PUSH [tag] 181			addmod(mulmod(xx, yy, FIELD_MO...
      JUMPI 			addmod(mulmod(xx, yy, FIELD_MO...
      INVALID 			addmod(mulmod(xx, yy, FIELD_MO...
    tag 181			addmod(mulmod(xx, yy, FIELD_MO...
      JUMPDEST 			addmod(mulmod(xx, yy, FIELD_MO...
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      DUP1 			mulmod(xy, yx, FIELD_MODULUS)
      ISZERO 			mulmod(xy, yx, FIELD_MODULUS)
      ISZERO 			mulmod(xy, yx, FIELD_MODULUS)
      PUSH [tag] 182			mulmod(xy, yx, FIELD_MODULUS)
      JUMPI 			mulmod(xy, yx, FIELD_MODULUS)
      INVALID 			mulmod(xy, yx, FIELD_MODULUS)
    tag 182			mulmod(xy, yx, FIELD_MODULUS)
      JUMPDEST 			mulmod(xy, yx, FIELD_MODULUS)
      DUP7 			yx
      DUP9 			xy
      MULMOD 			mulmod(xy, yx, FIELD_MODULUS)
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      DUP1 			mulmod(xx, yy, FIELD_MODULUS)
      ISZERO 			mulmod(xx, yy, FIELD_MODULUS)
      ISZERO 			mulmod(xx, yy, FIELD_MODULUS)
      PUSH [tag] 183			mulmod(xx, yy, FIELD_MODULUS)
      JUMPI 			mulmod(xx, yy, FIELD_MODULUS)
      INVALID 			mulmod(xx, yy, FIELD_MODULUS)
    tag 183			mulmod(xx, yy, FIELD_MODULUS)
      JUMPDEST 			mulmod(xx, yy, FIELD_MODULUS)
      DUP7 			yy
      DUP11 			xx
      MULMOD 			mulmod(xx, yy, FIELD_MODULUS)
      ADDMOD 			addmod(mulmod(xx, yy, FIELD_MO...
      SWAP2 			return (\n            submod(m...
      POP 			return (\n            submod(m...
      SWAP2 			return (\n            submod(m...
      POP 			return (\n            submod(m...
      SWAP5 			function _FQ2Mul(\n        uin...
      POP 			function _FQ2Mul(\n        uin...
      SWAP5 			function _FQ2Mul(\n        uin...
      SWAP3 			function _FQ2Mul(\n        uin...
      POP 			function _FQ2Mul(\n        uin...
      POP 			function _FQ2Mul(\n        uin...
      POP 			function _FQ2Mul(\n        uin...
      JUMP [out]			function _FQ2Mul(\n        uin...
    tag 73			function _FQ2Sub(\n        uin...
      JUMPDEST 			function _FQ2Sub(\n        uin...
      PUSH 0			uint256 rx
      DUP1 			uint256 ry
      PUSH [tag] 185			submod(xx, yx, FIELD_MODULUS)
      DUP7 			xx
      DUP6 			yx
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      PUSH [tag] 180			submod
      JUMP [in]			submod(xx, yx, FIELD_MODULUS)
    tag 185			submod(xx, yx, FIELD_MODULUS)
      JUMPDEST 			submod(xx, yx, FIELD_MODULUS)
      PUSH [tag] 186			submod(xy, yy, FIELD_MODULUS)
      DUP7 			xy
      DUP6 			yy
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      PUSH [tag] 180			submod
      JUMP [in]			submod(xy, yy, FIELD_MODULUS)
    tag 186			submod(xy, yy, FIELD_MODULUS)
      JUMPDEST 			submod(xy, yy, FIELD_MODULUS)
      SWAP2 			return (\n            submod(x...
      POP 			return (\n            submod(x...
      SWAP2 			return (\n            submod(x...
      POP 			return (\n            submod(x...
      SWAP5 			function _FQ2Sub(\n        uin...
      POP 			function _FQ2Sub(\n        uin...
      SWAP5 			function _FQ2Sub(\n        uin...
      SWAP3 			function _FQ2Sub(\n        uin...
      POP 			function _FQ2Sub(\n        uin...
      POP 			function _FQ2Sub(\n        uin...
      POP 			function _FQ2Sub(\n        uin...
      JUMP [out]			function _FQ2Sub(\n        uin...
    tag 112			function _ECTwistDoubleJacobia...
      JUMPDEST 			function _ECTwistDoubleJacobia...
      PUSH 0			uint256 pt2xx
      DUP1 			uint256 pt2xy
      PUSH 0			uint256 pt2yx
      DUP1 			uint256 pt2yy
      PUSH 0			uint256 pt2zx
      DUP1 			uint256 pt2zy
      PUSH [tag] 188			_FQ2Muc(pt1xx, pt1xy, 3)
      DUP13 			pt1xx
      DUP13 			pt1xy
      PUSH 3			3
      PUSH [tag] 144			_FQ2Muc
      JUMP [in]			_FQ2Muc(pt1xx, pt1xy, 3)
    tag 188			_FQ2Muc(pt1xx, pt1xy, 3)
      JUMPDEST 			_FQ2Muc(pt1xx, pt1xy, 3)
      DUP1 			(pt2xx, pt2xy) = _FQ2Muc(pt1xx...
      SWAP7 			(pt2xx, pt2xy) = _FQ2Muc(pt1xx...
      POP 			(pt2xx, pt2xy) = _FQ2Muc(pt1xx...
      DUP2 			(pt2xx, pt2xy) = _FQ2Muc(pt1xx...
      SWAP8 			(pt2xx, pt2xy) = _FQ2Muc(pt1xx...
      POP 			(pt2xx, pt2xy) = _FQ2Muc(pt1xx...
      POP 			(pt2xx, pt2xy) = _FQ2Muc(pt1xx...
      POP 			(pt2xx, pt2xy) = _FQ2Muc(pt1xx...
      PUSH [tag] 189			_FQ2Mul(pt2xx, pt2xy, pt1xx, p...
      DUP7 			pt2xx
      DUP7 			pt2xy
      DUP15 			pt1xx
      DUP15 			pt1xy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt2xx, pt2xy, pt1xx, p...
    tag 189			_FQ2Mul(pt2xx, pt2xy, pt1xx, p...
      JUMPDEST 			_FQ2Mul(pt2xx, pt2xy, pt1xx, p...
      DUP1 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      SWAP7 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      DUP2 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      SWAP8 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      PUSH [tag] 190			_FQ2Mul(pt1yx, pt1yy, pt1zx, p...
      DUP11 			pt1yx
      DUP11 			pt1yy
      DUP11 			pt1zx
      DUP11 			pt1zy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt1yx, pt1yy, pt1zx, p...
    tag 190			_FQ2Mul(pt1yx, pt1yy, pt1zx, p...
      JUMPDEST 			_FQ2Mul(pt1yx, pt1yy, pt1zx, p...
      DUP1 			(pt1zx, pt1zy) = _FQ2Mul(pt1yx...
      SWAP9 			(pt1zx, pt1zy) = _FQ2Mul(pt1yx...
      POP 			(pt1zx, pt1zy) = _FQ2Mul(pt1yx...
      DUP2 			(pt1zx, pt1zy) = _FQ2Mul(pt1yx...
      SWAP10 			(pt1zx, pt1zy) = _FQ2Mul(pt1yx...
      POP 			(pt1zx, pt1zy) = _FQ2Mul(pt1yx...
      POP 			(pt1zx, pt1zy) = _FQ2Mul(pt1yx...
      POP 			(pt1zx, pt1zy) = _FQ2Mul(pt1yx...
      PUSH [tag] 191			_FQ2Mul(pt1xx, pt1xy, pt1yx, p...
      DUP13 			pt1xx
      DUP13 			pt1xy
      DUP13 			pt1yx
      DUP13 			pt1yy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt1xx, pt1xy, pt1yx, p...
    tag 191			_FQ2Mul(pt1xx, pt1xy, pt1yx, p...
      JUMPDEST 			_FQ2Mul(pt1xx, pt1xy, pt1yx, p...
      DUP1 			(pt2yx, pt2yy) = _FQ2Mul(pt1xx...
      SWAP5 			(pt2yx, pt2yy) = _FQ2Mul(pt1xx...
      POP 			(pt2yx, pt2yy) = _FQ2Mul(pt1xx...
      DUP2 			(pt2yx, pt2yy) = _FQ2Mul(pt1xx...
      SWAP6 			(pt2yx, pt2yy) = _FQ2Mul(pt1xx...
      POP 			(pt2yx, pt2yy) = _FQ2Mul(pt1xx...
      POP 			(pt2yx, pt2yy) = _FQ2Mul(pt1xx...
      POP 			(pt2yx, pt2yy) = _FQ2Mul(pt1xx...
      PUSH [tag] 192			_FQ2Mul(pt2yx, pt2yy, pt1zx, p...
      DUP5 			pt2yx
      DUP5 			pt2yy
      DUP11 			pt1zx
      DUP11 			pt1zy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt2yx, pt2yy, pt1zx, p...
    tag 192			_FQ2Mul(pt2yx, pt2yy, pt1zx, p...
      JUMPDEST 			_FQ2Mul(pt2yx, pt2yy, pt1zx, p...
      DUP1 			(pt2yx, pt2yy) = _FQ2Mul(pt2yx...
      SWAP5 			(pt2yx, pt2yy) = _FQ2Mul(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Mul(pt2yx...
      DUP2 			(pt2yx, pt2yy) = _FQ2Mul(pt2yx...
      SWAP6 			(pt2yx, pt2yy) = _FQ2Mul(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Mul(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Mul(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Mul(pt2yx...
      PUSH [tag] 193			_FQ2Mul(pt2xx, pt2xy, pt2xx, p...
      DUP7 			pt2xx
      DUP7 			pt2xy
      DUP9 			pt2xx
      DUP9 			pt2xy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt2xx, pt2xy, pt2xx, p...
    tag 193			_FQ2Mul(pt2xx, pt2xy, pt2xx, p...
      JUMPDEST 			_FQ2Mul(pt2xx, pt2xy, pt2xx, p...
      DUP1 			(pt1xx, pt1xy) = _FQ2Mul(pt2xx...
      SWAP13 			(pt1xx, pt1xy) = _FQ2Mul(pt2xx...
      POP 			(pt1xx, pt1xy) = _FQ2Mul(pt2xx...
      DUP2 			(pt1xx, pt1xy) = _FQ2Mul(pt2xx...
      SWAP14 			(pt1xx, pt1xy) = _FQ2Mul(pt2xx...
      POP 			(pt1xx, pt1xy) = _FQ2Mul(pt2xx...
      POP 			(pt1xx, pt1xy) = _FQ2Mul(pt2xx...
      POP 			(pt1xx, pt1xy) = _FQ2Mul(pt2xx...
      PUSH [tag] 194			_FQ2Muc(pt2yx, pt2yy, 8)
      DUP5 			pt2yx
      DUP5 			pt2yy
      PUSH 8			8
      PUSH [tag] 144			_FQ2Muc
      JUMP [in]			_FQ2Muc(pt2yx, pt2yy, 8)
    tag 194			_FQ2Muc(pt2yx, pt2yy, 8)
      JUMPDEST 			_FQ2Muc(pt2yx, pt2yy, 8)
      DUP1 			(pt2zx, pt2zy) = _FQ2Muc(pt2yx...
      SWAP3 			(pt2zx, pt2zy) = _FQ2Muc(pt2yx...
      POP 			(pt2zx, pt2zy) = _FQ2Muc(pt2yx...
      DUP2 			(pt2zx, pt2zy) = _FQ2Muc(pt2yx...
      SWAP4 			(pt2zx, pt2zy) = _FQ2Muc(pt2yx...
      POP 			(pt2zx, pt2zy) = _FQ2Muc(pt2yx...
      POP 			(pt2zx, pt2zy) = _FQ2Muc(pt2yx...
      POP 			(pt2zx, pt2zy) = _FQ2Muc(pt2yx...
      PUSH [tag] 195			_FQ2Sub(pt1xx, pt1xy, pt2zx, p...
      DUP13 			pt1xx
      DUP13 			pt1xy
      DUP5 			pt2zx
      DUP5 			pt2zy
      PUSH [tag] 73			_FQ2Sub
      JUMP [in]			_FQ2Sub(pt1xx, pt1xy, pt2zx, p...
    tag 195			_FQ2Sub(pt1xx, pt1xy, pt2zx, p...
      JUMPDEST 			_FQ2Sub(pt1xx, pt1xy, pt2zx, p...
      DUP1 			(pt1xx, pt1xy) = _FQ2Sub(pt1xx...
      SWAP13 			(pt1xx, pt1xy) = _FQ2Sub(pt1xx...
      POP 			(pt1xx, pt1xy) = _FQ2Sub(pt1xx...
      DUP2 			(pt1xx, pt1xy) = _FQ2Sub(pt1xx...
      SWAP14 			(pt1xx, pt1xy) = _FQ2Sub(pt1xx...
      POP 			(pt1xx, pt1xy) = _FQ2Sub(pt1xx...
      POP 			(pt1xx, pt1xy) = _FQ2Sub(pt1xx...
      POP 			(pt1xx, pt1xy) = _FQ2Sub(pt1xx...
      PUSH [tag] 196			_FQ2Mul(pt1zx, pt1zy, pt1zx, p...
      DUP9 			pt1zx
      DUP9 			pt1zy
      DUP11 			pt1zx
      DUP11 			pt1zy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt1zx, pt1zy, pt1zx, p...
    tag 196			_FQ2Mul(pt1zx, pt1zy, pt1zx, p...
      JUMPDEST 			_FQ2Mul(pt1zx, pt1zy, pt1zx, p...
      DUP1 			(pt2zx, pt2zy) = _FQ2Mul(pt1zx...
      SWAP3 			(pt2zx, pt2zy) = _FQ2Mul(pt1zx...
      POP 			(pt2zx, pt2zy) = _FQ2Mul(pt1zx...
      DUP2 			(pt2zx, pt2zy) = _FQ2Mul(pt1zx...
      SWAP4 			(pt2zx, pt2zy) = _FQ2Mul(pt1zx...
      POP 			(pt2zx, pt2zy) = _FQ2Mul(pt1zx...
      POP 			(pt2zx, pt2zy) = _FQ2Mul(pt1zx...
      POP 			(pt2zx, pt2zy) = _FQ2Mul(pt1zx...
      PUSH [tag] 197			_FQ2Muc(pt2yx, pt2yy, 4)
      DUP5 			pt2yx
      DUP5 			pt2yy
      PUSH 4			4
      PUSH [tag] 144			_FQ2Muc
      JUMP [in]			_FQ2Muc(pt2yx, pt2yy, 4)
    tag 197			_FQ2Muc(pt2yx, pt2yy, 4)
      JUMPDEST 			_FQ2Muc(pt2yx, pt2yy, 4)
      DUP1 			(pt2yx, pt2yy) = _FQ2Muc(pt2yx...
      SWAP5 			(pt2yx, pt2yy) = _FQ2Muc(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Muc(pt2yx...
      DUP2 			(pt2yx, pt2yy) = _FQ2Muc(pt2yx...
      SWAP6 			(pt2yx, pt2yy) = _FQ2Muc(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Muc(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Muc(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Muc(pt2yx...
      PUSH [tag] 198			_FQ2Sub(pt2yx, pt2yy, pt1xx, p...
      DUP5 			pt2yx
      DUP5 			pt2yy
      DUP15 			pt1xx
      DUP15 			pt1xy
      PUSH [tag] 73			_FQ2Sub
      JUMP [in]			_FQ2Sub(pt2yx, pt2yy, pt1xx, p...
    tag 198			_FQ2Sub(pt2yx, pt2yy, pt1xx, p...
      JUMPDEST 			_FQ2Sub(pt2yx, pt2yy, pt1xx, p...
      DUP1 			(pt2yx, pt2yy) = _FQ2Sub(pt2yx...
      SWAP5 			(pt2yx, pt2yy) = _FQ2Sub(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Sub(pt2yx...
      DUP2 			(pt2yx, pt2yy) = _FQ2Sub(pt2yx...
      SWAP6 			(pt2yx, pt2yy) = _FQ2Sub(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Sub(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Sub(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Sub(pt2yx...
      PUSH [tag] 199			_FQ2Mul(pt2yx, pt2yy, pt2xx, p...
      DUP5 			pt2yx
      DUP5 			pt2yy
      DUP9 			pt2xx
      DUP9 			pt2xy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt2yx, pt2yy, pt2xx, p...
    tag 199			_FQ2Mul(pt2yx, pt2yy, pt2xx, p...
      JUMPDEST 			_FQ2Mul(pt2yx, pt2yy, pt2xx, p...
      DUP1 			(pt2yx, pt2yy) = _FQ2Mul(pt2yx...
      SWAP5 			(pt2yx, pt2yy) = _FQ2Mul(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Mul(pt2yx...
      DUP2 			(pt2yx, pt2yy) = _FQ2Mul(pt2yx...
      SWAP6 			(pt2yx, pt2yy) = _FQ2Mul(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Mul(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Mul(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Mul(pt2yx...
      PUSH [tag] 200			_FQ2Muc(pt1yx, pt1yy, 8)
      DUP11 			pt1yx
      DUP11 			pt1yy
      PUSH 8			8
      PUSH [tag] 144			_FQ2Muc
      JUMP [in]			_FQ2Muc(pt1yx, pt1yy, 8)
    tag 200			_FQ2Muc(pt1yx, pt1yy, 8)
      JUMPDEST 			_FQ2Muc(pt1yx, pt1yy, 8)
      DUP1 			(pt2xx, pt2xy) = _FQ2Muc(pt1yx...
      SWAP7 			(pt2xx, pt2xy) = _FQ2Muc(pt1yx...
      POP 			(pt2xx, pt2xy) = _FQ2Muc(pt1yx...
      DUP2 			(pt2xx, pt2xy) = _FQ2Muc(pt1yx...
      SWAP8 			(pt2xx, pt2xy) = _FQ2Muc(pt1yx...
      POP 			(pt2xx, pt2xy) = _FQ2Muc(pt1yx...
      POP 			(pt2xx, pt2xy) = _FQ2Muc(pt1yx...
      POP 			(pt2xx, pt2xy) = _FQ2Muc(pt1yx...
      PUSH [tag] 201			_FQ2Mul(pt2xx, pt2xy, pt1yx, p...
      DUP7 			pt2xx
      DUP7 			pt2xy
      DUP13 			pt1yx
      DUP13 			pt1yy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt2xx, pt2xy, pt1yx, p...
    tag 201			_FQ2Mul(pt2xx, pt2xy, pt1yx, p...
      JUMPDEST 			_FQ2Mul(pt2xx, pt2xy, pt1yx, p...
      DUP1 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      SWAP7 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      DUP2 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      SWAP8 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      PUSH [tag] 202			_FQ2Mul(pt2xx, pt2xy, pt2zx, p...
      DUP7 			pt2xx
      DUP7 			pt2xy
      DUP5 			pt2zx
      DUP5 			pt2zy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt2xx, pt2xy, pt2zx, p...
    tag 202			_FQ2Mul(pt2xx, pt2xy, pt2zx, p...
      JUMPDEST 			_FQ2Mul(pt2xx, pt2xy, pt2zx, p...
      DUP1 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      SWAP7 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      DUP2 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      SWAP8 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      PUSH [tag] 203			_FQ2Sub(pt2yx, pt2yy, pt2xx, p...
      DUP5 			pt2yx
      DUP5 			pt2yy
      DUP9 			pt2xx
      DUP9 			pt2xy
      PUSH [tag] 73			_FQ2Sub
      JUMP [in]			_FQ2Sub(pt2yx, pt2yy, pt2xx, p...
    tag 203			_FQ2Sub(pt2yx, pt2yy, pt2xx, p...
      JUMPDEST 			_FQ2Sub(pt2yx, pt2yy, pt2xx, p...
      DUP1 			(pt2yx, pt2yy) = _FQ2Sub(pt2yx...
      SWAP5 			(pt2yx, pt2yy) = _FQ2Sub(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Sub(pt2yx...
      DUP2 			(pt2yx, pt2yy) = _FQ2Sub(pt2yx...
      SWAP6 			(pt2yx, pt2yy) = _FQ2Sub(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Sub(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Sub(pt2yx...
      POP 			(pt2yx, pt2yy) = _FQ2Sub(pt2yx...
      PUSH [tag] 204			_FQ2Muc(pt1xx, pt1xy, 2)
      DUP13 			pt1xx
      DUP13 			pt1xy
      PUSH 2			2
      PUSH [tag] 144			_FQ2Muc
      JUMP [in]			_FQ2Muc(pt1xx, pt1xy, 2)
    tag 204			_FQ2Muc(pt1xx, pt1xy, 2)
      JUMPDEST 			_FQ2Muc(pt1xx, pt1xy, 2)
      DUP1 			(pt2xx, pt2xy) = _FQ2Muc(pt1xx...
      SWAP7 			(pt2xx, pt2xy) = _FQ2Muc(pt1xx...
      POP 			(pt2xx, pt2xy) = _FQ2Muc(pt1xx...
      DUP2 			(pt2xx, pt2xy) = _FQ2Muc(pt1xx...
      SWAP8 			(pt2xx, pt2xy) = _FQ2Muc(pt1xx...
      POP 			(pt2xx, pt2xy) = _FQ2Muc(pt1xx...
      POP 			(pt2xx, pt2xy) = _FQ2Muc(pt1xx...
      POP 			(pt2xx, pt2xy) = _FQ2Muc(pt1xx...
      PUSH [tag] 205			_FQ2Mul(pt2xx, pt2xy, pt1zx, p...
      DUP7 			pt2xx
      DUP7 			pt2xy
      DUP11 			pt1zx
      DUP11 			pt1zy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt2xx, pt2xy, pt1zx, p...
    tag 205			_FQ2Mul(pt2xx, pt2xy, pt1zx, p...
      JUMPDEST 			_FQ2Mul(pt2xx, pt2xy, pt1zx, p...
      DUP1 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      SWAP7 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      DUP2 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      SWAP8 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      POP 			(pt2xx, pt2xy) = _FQ2Mul(pt2xx...
      PUSH [tag] 206			_FQ2Mul(pt1zx, pt1zy, pt2zx, p...
      DUP9 			pt1zx
      DUP9 			pt1zy
      DUP5 			pt2zx
      DUP5 			pt2zy
      PUSH [tag] 69			_FQ2Mul
      JUMP [in]			_FQ2Mul(pt1zx, pt1zy, pt2zx, p...
    tag 206			_FQ2Mul(pt1zx, pt1zy, pt2zx, p...
      JUMPDEST 			_FQ2Mul(pt1zx, pt1zy, pt2zx, p...
      DUP1 			(pt2zx, pt2zy) = _FQ2Mul(pt1zx...
      SWAP3 			(pt2zx, pt2zy) = _FQ2Mul(pt1zx...
      POP 			(pt2zx, pt2zy) = _FQ2Mul(pt1zx...
      DUP2 			(pt2zx, pt2zy) = _FQ2Mul(pt1zx...
      SWAP4 			(pt2zx, pt2zy) = _FQ2Mul(pt1zx...
      POP 			(pt2zx, pt2zy) = _FQ2Mul(pt1zx...
      POP 			(pt2zx, pt2zy) = _FQ2Mul(pt1zx...
      POP 			(pt2zx, pt2zy) = _FQ2Mul(pt1zx...
      PUSH [tag] 207			_FQ2Muc(pt2zx, pt2zy, 8)
      DUP3 			pt2zx
      DUP3 			pt2zy
      PUSH 8			8
      PUSH [tag] 144			_FQ2Muc
      JUMP [in]			_FQ2Muc(pt2zx, pt2zy, 8)
    tag 207			_FQ2Muc(pt2zx, pt2zy, 8)
      JUMPDEST 			_FQ2Muc(pt2zx, pt2zy, 8)
      DUP1 			(pt2zx, pt2zy) = _FQ2Muc(pt2zx...
      SWAP3 			(pt2zx, pt2zy) = _FQ2Muc(pt2zx...
      POP 			(pt2zx, pt2zy) = _FQ2Muc(pt2zx...
      DUP2 			(pt2zx, pt2zy) = _FQ2Muc(pt2zx...
      SWAP4 			(pt2zx, pt2zy) = _FQ2Muc(pt2zx...
      POP 			(pt2zx, pt2zy) = _FQ2Muc(pt2zx...
      POP 			(pt2zx, pt2zy) = _FQ2Muc(pt2zx...
      POP 			(pt2zx, pt2zy) = _FQ2Muc(pt2zx...
      SWAP7 			function _ECTwistDoubleJacobia...
      POP 			function _ECTwistDoubleJacobia...
      SWAP7 			function _ECTwistDoubleJacobia...
      POP 			function _ECTwistDoubleJacobia...
      SWAP7 			function _ECTwistDoubleJacobia...
      POP 			function _ECTwistDoubleJacobia...
      SWAP7 			function _ECTwistDoubleJacobia...
      POP 			function _ECTwistDoubleJacobia...
      SWAP7 			function _ECTwistDoubleJacobia...
      POP 			function _ECTwistDoubleJacobia...
      SWAP7 			function _ECTwistDoubleJacobia...
      SWAP1 			function _ECTwistDoubleJacobia...
      POP 			function _ECTwistDoubleJacobia...
      JUMP [out]			function _ECTwistDoubleJacobia...
    tag 144			function _FQ2Muc(\n        uin...
      JUMPDEST 			function _FQ2Muc(\n        uin...
      PUSH 0			uint256
      DUP1 			uint256
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      DUP1 			mulmod(xx, c, FIELD_MODULUS)
      ISZERO 			mulmod(xx, c, FIELD_MODULUS)
      ISZERO 			mulmod(xx, c, FIELD_MODULUS)
      PUSH [tag] 209			mulmod(xx, c, FIELD_MODULUS)
      JUMPI 			mulmod(xx, c, FIELD_MODULUS)
      INVALID 			mulmod(xx, c, FIELD_MODULUS)
    tag 209			mulmod(xx, c, FIELD_MODULUS)
      JUMPDEST 			mulmod(xx, c, FIELD_MODULUS)
      DUP4 			c
      DUP7 			xx
      MULMOD 			mulmod(xx, c, FIELD_MODULUS)
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      DUP1 			mulmod(xy, c, FIELD_MODULUS)
      ISZERO 			mulmod(xy, c, FIELD_MODULUS)
      ISZERO 			mulmod(xy, c, FIELD_MODULUS)
      PUSH [tag] 210			mulmod(xy, c, FIELD_MODULUS)
      JUMPI 			mulmod(xy, c, FIELD_MODULUS)
      INVALID 			mulmod(xy, c, FIELD_MODULUS)
    tag 210			mulmod(xy, c, FIELD_MODULUS)
      JUMPDEST 			mulmod(xy, c, FIELD_MODULUS)
      DUP5 			c
      DUP7 			xy
      MULMOD 			mulmod(xy, c, FIELD_MODULUS)
      SWAP2 			return (\n            mulmod(x...
      POP 			return (\n            mulmod(x...
      SWAP2 			return (\n            mulmod(x...
      POP 			return (\n            mulmod(x...
      SWAP4 			function _FQ2Muc(\n        uin...
      POP 			function _FQ2Muc(\n        uin...
      SWAP4 			function _FQ2Muc(\n        uin...
      SWAP2 			function _FQ2Muc(\n        uin...
      POP 			function _FQ2Muc(\n        uin...
      POP 			function _FQ2Muc(\n        uin...
      JUMP [out]			function _FQ2Muc(\n        uin...
    tag 159			function _FQ2Inv(uint256 x, ui...
      JUMPDEST 			function _FQ2Inv(uint256 x, ui...
      PUSH 0			uint256
      DUP1 			uint256
      PUSH 0			uint256 inv
      PUSH [tag] 212			_modInv(addmod(mulmod(y, y, FI...
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      DUP1 			addmod(mulmod(y, y, FIELD_MODU...
      ISZERO 			addmod(mulmod(y, y, FIELD_MODU...
      ISZERO 			addmod(mulmod(y, y, FIELD_MODU...
      PUSH [tag] 213			addmod(mulmod(y, y, FIELD_MODU...
      JUMPI 			addmod(mulmod(y, y, FIELD_MODU...
      INVALID 			addmod(mulmod(y, y, FIELD_MODU...
    tag 213			addmod(mulmod(y, y, FIELD_MODU...
      JUMPDEST 			addmod(mulmod(y, y, FIELD_MODU...
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      DUP1 			mulmod(x, x, FIELD_MODULUS)
      ISZERO 			mulmod(x, x, FIELD_MODULUS)
      ISZERO 			mulmod(x, x, FIELD_MODULUS)
      PUSH [tag] 214			mulmod(x, x, FIELD_MODULUS)
      JUMPI 			mulmod(x, x, FIELD_MODULUS)
      INVALID 			mulmod(x, x, FIELD_MODULUS)
    tag 214			mulmod(x, x, FIELD_MODULUS)
      JUMPDEST 			mulmod(x, x, FIELD_MODULUS)
      DUP8 			x
      DUP9 			x
      MULMOD 			mulmod(x, x, FIELD_MODULUS)
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      DUP1 			mulmod(y, y, FIELD_MODULUS)
      ISZERO 			mulmod(y, y, FIELD_MODULUS)
      ISZERO 			mulmod(y, y, FIELD_MODULUS)
      PUSH [tag] 215			mulmod(y, y, FIELD_MODULUS)
      JUMPI 			mulmod(y, y, FIELD_MODULUS)
      INVALID 			mulmod(y, y, FIELD_MODULUS)
    tag 215			mulmod(y, y, FIELD_MODULUS)
      JUMPDEST 			mulmod(y, y, FIELD_MODULUS)
      DUP8 			y
      DUP9 			y
      MULMOD 			mulmod(y, y, FIELD_MODULUS)
      ADDMOD 			addmod(mulmod(y, y, FIELD_MODU...
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      PUSH [tag] 216			_modInv
      JUMP [in]			_modInv(addmod(mulmod(y, y, FI...
    tag 212			_modInv(addmod(mulmod(y, y, FI...
      JUMPDEST 			_modInv(addmod(mulmod(y, y, FI...
      SWAP1 			uint256 inv = _modInv(addmod(m...
      POP 			uint256 inv = _modInv(addmod(m...
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      DUP1 			mulmod(x, inv, FIELD_MODULUS)
      ISZERO 			mulmod(x, inv, FIELD_MODULUS)
      ISZERO 			mulmod(x, inv, FIELD_MODULUS)
      PUSH [tag] 217			mulmod(x, inv, FIELD_MODULUS)
      JUMPI 			mulmod(x, inv, FIELD_MODULUS)
      INVALID 			mulmod(x, inv, FIELD_MODULUS)
    tag 217			mulmod(x, inv, FIELD_MODULUS)
      JUMPDEST 			mulmod(x, inv, FIELD_MODULUS)
      DUP2 			inv
      DUP7 			x
      MULMOD 			mulmod(x, inv, FIELD_MODULUS)
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      DUP1 			mulmod(y, inv, FIELD_MODULUS)
      ISZERO 			mulmod(y, inv, FIELD_MODULUS)
      ISZERO 			mulmod(y, inv, FIELD_MODULUS)
      PUSH [tag] 218			mulmod(y, inv, FIELD_MODULUS)
      JUMPI 			mulmod(y, inv, FIELD_MODULUS)
      INVALID 			mulmod(y, inv, FIELD_MODULUS)
    tag 218			mulmod(y, inv, FIELD_MODULUS)
      JUMPDEST 			mulmod(y, inv, FIELD_MODULUS)
      DUP3 			inv
      DUP7 			y
      MULMOD 			mulmod(y, inv, FIELD_MODULUS)
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			0x30644e72e131a029b85045b68181...
      SUB 			FIELD_MODULUS - mulmod(y, inv,...
      SWAP3 			return (\n            mulmod(x...
      POP 			return (\n            mulmod(x...
      SWAP3 			return (\n            mulmod(x...
      POP 			return (\n            mulmod(x...
      POP 			return (\n            mulmod(x...
      SWAP3 			function _FQ2Inv(uint256 x, ui...
      POP 			function _FQ2Inv(uint256 x, ui...
      SWAP3 			function _FQ2Inv(uint256 x, ui...
      SWAP1 			function _FQ2Inv(uint256 x, ui...
      POP 			function _FQ2Inv(uint256 x, ui...
      JUMP [out]			function _FQ2Inv(uint256 x, ui...
    tag 180			function submod(uint256 a, uin...
      JUMPDEST 			function submod(uint256 a, uin...
      PUSH 0			uint256
      DUP2 			n
      DUP1 			addmod(a, n - b, n)
      ISZERO 			addmod(a, n - b, n)
      ISZERO 			addmod(a, n - b, n)
      PUSH [tag] 220			addmod(a, n - b, n)
      JUMPI 			addmod(a, n - b, n)
      INVALID 			addmod(a, n - b, n)
    tag 220			addmod(a, n - b, n)
      JUMPDEST 			addmod(a, n - b, n)
      DUP4 			b
      DUP4 			n
      SUB 			n - b
      DUP6 			a
      ADDMOD 			addmod(a, n - b, n)
      SWAP1 			return addmod(a, n - b, n)
      POP 			return addmod(a, n - b, n)
      SWAP4 			function submod(uint256 a, uin...
      SWAP3 			function submod(uint256 a, uin...
      POP 			function submod(uint256 a, uin...
      POP 			function submod(uint256 a, uin...
      POP 			function submod(uint256 a, uin...
      JUMP [out]			function submod(uint256 a, uin...
    tag 216			function _modInv(uint256 a, ui...
      JUMPDEST 			function _modInv(uint256 a, ui...
      PUSH 0			uint256 result
      DUP1 			bool success
      PUSH 40			0x40
      MLOAD 			mload(0x40)
      PUSH 20			0x20
      DUP2 			freemem
      MSTORE 			mstore(freemem, 0x20)
      PUSH 20			0x20
      DUP1 			0x20
      DUP3 			freemem
      ADD 			add(freemem,0x20)
      MSTORE 			mstore(add(freemem,0x20), 0x20...
      PUSH 20			0x20
      PUSH 40			0x40
      DUP3 			freemem
      ADD 			add(freemem,0x40)
      MSTORE 			mstore(add(freemem,0x40), 0x20...
      DUP5 			a
      PUSH 60			0x60
      DUP3 			freemem
      ADD 			add(freemem,0x60)
      MSTORE 			mstore(add(freemem,0x60), a)
      PUSH 2			2
      DUP5 			n
      SUB 			sub(n, 2)
      PUSH 80			0x80
      DUP3 			freemem
      ADD 			add(freemem,0x80)
      MSTORE 			mstore(add(freemem,0x80), sub(...
      DUP4 			n
      PUSH A0			0xA0
      DUP3 			freemem
      ADD 			add(freemem,0xA0)
      MSTORE 			mstore(add(freemem,0xA0), n)
      PUSH 20			0x20
      DUP2 			freemem
      PUSH C0			0xC0
      DUP4 			freemem
      PUSH 5			5
      PUSH 7D0			2000
      GAS 			gas
      SUB 			sub(gas, 2000)
      STATICCALL 			staticcall(sub(gas, 2000), 5, ...
      SWAP2 			success := staticcall(sub(gas,...
      POP 			success := staticcall(sub(gas,...
      DUP1 			freemem
      MLOAD 			mload(freemem)
      SWAP3 			result := mload(freemem)
      POP 			result := mload(freemem)
      POP 			{\n            let freemem := ...
      DUP1 			success
      ISZERO 			require(success)
      ISZERO 			require(success)
      PUSH [tag] 222			require(success)
      JUMPI 			require(success)
      PUSH 0			require(success)
      DUP1 			require(success)
      REVERT 			require(success)
    tag 222			require(success)
      JUMPDEST 			require(success)
      POP 			function _modInv(uint256 a, ui...
      SWAP3 			function _modInv(uint256 a, ui...
      SWAP2 			function _modInv(uint256 a, ui...
      POP 			function _modInv(uint256 a, ui...
      POP 			function _modInv(uint256 a, ui...
      JUMP [out]			function _modInv(uint256 a, ui...
    tag 38			library BN256G2 {\n    uint256...
      JUMPDEST 			library BN256G2 {\n    uint256...
      PUSH C0			library BN256G2 {\n    uint256...
      PUSH 40			library BN256G2 {\n    uint256...
      MLOAD 			library BN256G2 {\n    uint256...
      SWAP1 			library BN256G2 {\n    uint256...
      DUP2 			library BN256G2 {\n    uint256...
      ADD 			library BN256G2 {\n    uint256...
      PUSH 40			library BN256G2 {\n    uint256...
      MSTORE 			library BN256G2 {\n    uint256...
      DUP1 			library BN256G2 {\n    uint256...
      PUSH 6			library BN256G2 {\n    uint256...
      SWAP1 			library BN256G2 {\n    uint256...
      PUSH 20			 i
      DUP3 			 uint2
      MUL 			\n    uint256 in
      DUP1 			08c1
      CODESIZE 			16871ca8d3
      DUP4 			d97816
      CODECOPY 			b68181585d97816a916871ca8d3c20...
      DUP1 			rnal
      DUP3 			256 in
      ADD 			uint256 internal 
      SWAP2 			fd47;\n    uint256 internal 
      POP 			fd47;\n    uint256 internal 
      POP 			library BN256G2 {\n    uint256...
      SWAP1 			library BN256G2 {\n    uint256...
      POP 			library BN256G2 {\n    uint256...
      POP 			library BN256G2 {\n    uint256...
      SWAP1 			library BN256G2 {\n    uint256...
      JUMP [out]			library BN256G2 {\n    uint256...
    .data
