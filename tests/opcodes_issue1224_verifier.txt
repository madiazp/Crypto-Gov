.code
  PUSH 80			contract Verifier {\n    using...
  PUSH 40			contract Verifier {\n    using...
  MSTORE 			contract Verifier {\n    using...
  CALLVALUE 			contract Verifier {\n    using...
  DUP1 			BN256G2 {
  ISZERO 			ry
  PUSH [tag] 1			ry
  JUMPI 			ry
  PUSH 0			i
  DUP1 			5
  REVERT 			  uint256 in
tag 1			ry
  JUMPDEST 			ry
  POP 			contract Verifier {\n    using...
  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000			contract Verifier {\n    using...
  DUP1 			contract Verifier {\n    using...
  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000			contract Verifier {\n    using...
  PUSH 0			contract Verifier {\n    using...
  CODECOPY 			contract Verifier {\n    using...
  PUSH 0			contract Verifier {\n    using...
  RETURN 			contract Verifier {\n    using...
.data
  0:
    .code
      PUSH 80			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      PUSH 4			contract Verifier {\n    using...
      CALLDATASIZE 			contract Verifier {\n    using...
      LT 			contract Verifier {\n    using...
      PUSH [tag] 1			contract Verifier {\n    using...
      JUMPI 			contract Verifier {\n    using...
      PUSH 0			contract Verifier {\n    using...
      CALLDATALOAD 			contract Verifier {\n    using...
      PUSH 100000000000000000000000000000000000000000000000000000000			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      DIV 			contract Verifier {\n    using...
      DUP1 			contract Verifier {\n    using...
      PUSH DD129313			contract Verifier {\n    using...
      EQ 			contract Verifier {\n    using...
      PUSH [tag] 2			contract Verifier {\n    using...
      JUMPI 			contract Verifier {\n    using...
    tag 1			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      PUSH 0			contract Verifier {\n    using...
      DUP1 			contract Verifier {\n    using...
      REVERT 			contract Verifier {\n    using...
    tag 2			function verifyTx(\n    \n    ...
      JUMPDEST 			function verifyTx(\n    \n    ...
      CALLVALUE 			function verifyTx(\n    \n    ...
      DUP1 			BN256G2 {
      ISZERO 			ry
      PUSH [tag] 3			ry
      JUMPI 			ry
      PUSH 0			i
      DUP1 			5
      REVERT 			  uint256 in
    tag 3			ry
      JUMPDEST 			ry
      POP 			function verifyTx(\n    \n    ...
      PUSH [tag] 4			function verifyTx(\n    \n    ...
      PUSH 4			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      CALLDATASIZE 			function verifyTx(\n    \n    ...
      SUB 			function verifyTx(\n    \n    ...
      PUSH 120			G2 
      DUP2 			BN2
      LT 			ry BN256G2 {
      ISZERO 			br
      PUSH [tag] 5			br
      JUMPI 			br
      PUSH 0			i
      DUP1 			5
      REVERT 			  uint256 in
    tag 5			br
      JUMPDEST 			br
      DUP2 			function verifyTx(\n    \n    ...
      ADD 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      PUSH 40			function verifyTx(\n    \n    ...
      ADD 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      PUSH 2			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      PUSH 20			function verifyTx(\n    \n    ...
      MUL 			function verifyTx(\n    \n    ...
      PUSH 40			function verifyTx(\n    \n    ...
      MLOAD 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      DUP2 			function verifyTx(\n    \n    ...
      ADD 			function verifyTx(\n    \n    ...
      PUSH 40			function verifyTx(\n    \n    ...
      MSTORE 			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      SWAP3 			function verifyTx(\n    \n    ...
      SWAP2 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      DUP3 			function verifyTx(\n    \n    ...
      PUSH 2			function verifyTx(\n    \n    ...
      PUSH 20			function verifyTx(\n    \n    ...
      MUL 			function verifyTx(\n    \n    ...
      DUP1 			int
      DUP3 			uint25
      DUP5 			2 {\n  
      CALLDATACOPY 			ibrary BN256G2 {\n    uint256 ...
      PUSH 0			7
      DUP2 			158
      DUP5 			045b68
      ADD 			9b85045b68181585
      MSTORE 			e131a029b85045b68181585d978
      PUSH 1F			int2
      NOT 			   uint25
      PUSH 1F			fd47
      DUP3 			6d8
      ADD 			08c16d87cfd47;
      AND 			d3c208c16d87cfd47;\n    uint25...
      SWAP1 			6871ca8d3c208c16d87cfd47;\n   ...
      POP 			6871ca8d3c208c16d87cfd47;\n   ...
      DUP1 			 = 
      DUP4 			 TWIST
      ADD 			tant TWISTBX = 0
      SWAP3 			ernal constant TWISTBX = 0
      POP 			ernal constant TWISTBX = 0
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      SWAP2 			function verifyTx(\n    \n    ...
      SWAP3 			function verifyTx(\n    \n    ...
      SWAP2 			function verifyTx(\n    \n    ...
      SWAP3 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      PUSH 80			function verifyTx(\n    \n    ...
      ADD 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      PUSH 2			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      PUSH 20			function verifyTx(\n    \n    ...
      MUL 			function verifyTx(\n    \n    ...
      PUSH 40			function verifyTx(\n    \n    ...
      MLOAD 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      DUP2 			function verifyTx(\n    \n    ...
      ADD 			function verifyTx(\n    \n    ...
      PUSH 40			function verifyTx(\n    \n    ...
      MSTORE 			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      SWAP3 			function verifyTx(\n    \n    ...
      SWAP2 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      PUSH 0			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
    tag 6			function verifyTx(\n    \n    ...
      JUMPDEST 			function verifyTx(\n    \n    ...
      DUP3 			function verifyTx(\n    \n    ...
      DUP3 			function verifyTx(\n    \n    ...
      LT 			function verifyTx(\n    \n    ...
      ISZERO 			function verifyTx(\n    \n    ...
      PUSH [tag] 7			function verifyTx(\n    \n    ...
      JUMPI 			function verifyTx(\n    \n    ...
      DUP4 			function verifyTx(\n    \n    ...
      DUP3 			function verifyTx(\n    \n    ...
      PUSH 40			function verifyTx(\n    \n    ...
      MUL 			function verifyTx(\n    \n    ...
      ADD 			function verifyTx(\n    \n    ...
      PUSH 2			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      PUSH 20			function verifyTx(\n    \n    ...
      MUL 			function verifyTx(\n    \n    ...
      PUSH 40			function verifyTx(\n    \n    ...
      MLOAD 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      DUP2 			function verifyTx(\n    \n    ...
      ADD 			function verifyTx(\n    \n    ...
      PUSH 40			function verifyTx(\n    \n    ...
      MSTORE 			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      SWAP3 			function verifyTx(\n    \n    ...
      SWAP2 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      DUP3 			function verifyTx(\n    \n    ...
      PUSH 2			function verifyTx(\n    \n    ...
      PUSH 20			function verifyTx(\n    \n    ...
      MUL 			function verifyTx(\n    \n    ...
      DUP1 			int
      DUP3 			uint25
      DUP5 			2 {\n  
      CALLDATACOPY 			ibrary BN256G2 {\n    uint256 ...
      PUSH 0			7
      DUP2 			158
      DUP5 			045b68
      ADD 			9b85045b68181585
      MSTORE 			e131a029b85045b68181585d978
      PUSH 1F			int2
      NOT 			   uint25
      PUSH 1F			fd47
      DUP3 			6d8
      ADD 			08c16d87cfd47;
      AND 			d3c208c16d87cfd47;\n    uint25...
      SWAP1 			6871ca8d3c208c16d87cfd47;\n   ...
      POP 			6871ca8d3c208c16d87cfd47;\n   ...
      DUP1 			 = 
      DUP4 			 TWIST
      ADD 			tant TWISTBX = 0
      SWAP3 			ernal constant TWISTBX = 0
      POP 			ernal constant TWISTBX = 0
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      DUP2 			function verifyTx(\n    \n    ...
      MSTORE 			function verifyTx(\n    \n    ...
      PUSH 20			function verifyTx(\n    \n    ...
      ADD 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      PUSH 1			function verifyTx(\n    \n    ...
      ADD 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      PUSH [tag] 6			function verifyTx(\n    \n    ...
      JUMP 			function verifyTx(\n    \n    ...
    tag 7			function verifyTx(\n    \n    ...
      JUMPDEST 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      SWAP2 			function verifyTx(\n    \n    ...
      SWAP3 			function verifyTx(\n    \n    ...
      SWAP2 			function verifyTx(\n    \n    ...
      SWAP3 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      PUSH 40			function verifyTx(\n    \n    ...
      ADD 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      PUSH 2			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      PUSH 20			function verifyTx(\n    \n    ...
      MUL 			function verifyTx(\n    \n    ...
      PUSH 40			function verifyTx(\n    \n    ...
      MLOAD 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      DUP2 			function verifyTx(\n    \n    ...
      ADD 			function verifyTx(\n    \n    ...
      PUSH 40			function verifyTx(\n    \n    ...
      MSTORE 			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      SWAP3 			function verifyTx(\n    \n    ...
      SWAP2 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      DUP3 			function verifyTx(\n    \n    ...
      PUSH 2			function verifyTx(\n    \n    ...
      PUSH 20			function verifyTx(\n    \n    ...
      MUL 			function verifyTx(\n    \n    ...
      DUP1 			int
      DUP3 			uint25
      DUP5 			2 {\n  
      CALLDATACOPY 			ibrary BN256G2 {\n    uint256 ...
      PUSH 0			7
      DUP2 			158
      DUP5 			045b68
      ADD 			9b85045b68181585
      MSTORE 			e131a029b85045b68181585d978
      PUSH 1F			int2
      NOT 			   uint25
      PUSH 1F			fd47
      DUP3 			6d8
      ADD 			08c16d87cfd47;
      AND 			d3c208c16d87cfd47;\n    uint25...
      SWAP1 			6871ca8d3c208c16d87cfd47;\n   ...
      POP 			6871ca8d3c208c16d87cfd47;\n   ...
      DUP1 			 = 
      DUP4 			 TWIST
      ADD 			tant TWISTBX = 0
      SWAP3 			ernal constant TWISTBX = 0
      POP 			ernal constant TWISTBX = 0
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      SWAP2 			function verifyTx(\n    \n    ...
      SWAP3 			function verifyTx(\n    \n    ...
      SWAP2 			function verifyTx(\n    \n    ...
      SWAP3 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      PUSH 20			function verifyTx(\n    \n    ...
      ADD 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      PUSH 1			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      PUSH 20			function verifyTx(\n    \n    ...
      MUL 			function verifyTx(\n    \n    ...
      PUSH 40			function verifyTx(\n    \n    ...
      MLOAD 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      DUP2 			function verifyTx(\n    \n    ...
      ADD 			function verifyTx(\n    \n    ...
      PUSH 40			function verifyTx(\n    \n    ...
      MSTORE 			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      SWAP3 			function verifyTx(\n    \n    ...
      SWAP2 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      DUP3 			function verifyTx(\n    \n    ...
      PUSH 1			function verifyTx(\n    \n    ...
      PUSH 20			function verifyTx(\n    \n    ...
      MUL 			function verifyTx(\n    \n    ...
      DUP1 			int
      DUP3 			uint25
      DUP5 			2 {\n  
      CALLDATACOPY 			ibrary BN256G2 {\n    uint256 ...
      PUSH 0			7
      DUP2 			158
      DUP5 			045b68
      ADD 			9b85045b68181585
      MSTORE 			e131a029b85045b68181585d978
      PUSH 1F			int2
      NOT 			   uint25
      PUSH 1F			fd47
      DUP3 			6d8
      ADD 			08c16d87cfd47;
      AND 			d3c208c16d87cfd47;\n    uint25...
      SWAP1 			6871ca8d3c208c16d87cfd47;\n   ...
      POP 			6871ca8d3c208c16d87cfd47;\n   ...
      DUP1 			 = 
      DUP4 			 TWIST
      ADD 			tant TWISTBX = 0
      SWAP3 			ernal constant TWISTBX = 0
      POP 			ernal constant TWISTBX = 0
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      SWAP2 			function verifyTx(\n    \n    ...
      SWAP3 			function verifyTx(\n    \n    ...
      SWAP2 			function verifyTx(\n    \n    ...
      SWAP3 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      PUSH [tag] 8			function verifyTx(\n    \n    ...
      JUMP [in]			function verifyTx(\n    \n    ...
    tag 4			function verifyTx(\n    \n    ...
      JUMPDEST 			function verifyTx(\n    \n    ...
      PUSH 40			function verifyTx(\n    \n    ...
      MLOAD 			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      DUP3 			function verifyTx(\n    \n    ...
      ISZERO 			function verifyTx(\n    \n    ...
      ISZERO 			function verifyTx(\n    \n    ...
      ISZERO 			function verifyTx(\n    \n    ...
      ISZERO 			function verifyTx(\n    \n    ...
      DUP2 			function verifyTx(\n    \n    ...
      MSTORE 			function verifyTx(\n    \n    ...
      PUSH 20			function verifyTx(\n    \n    ...
      ADD 			function verifyTx(\n    \n    ...
      SWAP2 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      PUSH 40			function verifyTx(\n    \n    ...
      MLOAD 			function verifyTx(\n    \n    ...
      DUP1 			function verifyTx(\n    \n    ...
      SWAP2 			function verifyTx(\n    \n    ...
      SUB 			function verifyTx(\n    \n    ...
      SWAP1 			function verifyTx(\n    \n    ...
      RETURN 			function verifyTx(\n    \n    ...
    tag 8			function verifyTx(\n    \n    ...
      JUMPDEST 			function verifyTx(\n    \n    ...
      PUSH 0			bool r
      PUSH [tag] 10			Proof memory proof
      PUSH [tag] 11			Proof memory proof
      JUMP [in]			Proof memory proof
    tag 10			Proof memory proof
      JUMPDEST 			Proof memory proof
      PUSH 40			Pairing.G1Point(a[0], a[1])
      DUP1 			Pairing.G1Point(a[0], a[1])
      MLOAD 			Pairing.G1Point(a[0], a[1])
      SWAP1 			Pairing.G1Point(a[0], a[1])
      DUP2 			Pairing.G1Point(a[0], a[1])
      ADD 			Pairing.G1Point(a[0], a[1])
      PUSH 40			Pairing.G1Point(a[0], a[1])
      MSTORE 			Pairing.G1Point(a[0], a[1])
      DUP1 			Pairing.G1Point(a[0], a[1])
      DUP8 			a
      PUSH 0			0
      PUSH 2			a[0]
      DUP2 			a[0]
      LT 			a[0]
      ISZERO 			a[0]
      ISZERO 			a[0]
      PUSH [tag] 12			a[0]
      JUMPI 			a[0]
      INVALID 			a[0]
    tag 12			a[0]
      JUMPDEST 			a[0]
      PUSH 20			a[0]
      MUL 			a[0]
      ADD 			a[0]
      MLOAD 			a[0]
      DUP2 			Pairing.G1Point(a[0], a[1])
      MSTORE 			Pairing.G1Point(a[0], a[1])
      PUSH 20			Pairing.G1Point(a[0], a[1])
      ADD 			Pairing.G1Point(a[0], a[1])
      DUP8 			a
      PUSH 1			1
      PUSH 2			a[1]
      DUP2 			a[1]
      LT 			a[1]
      ISZERO 			a[1]
      ISZERO 			a[1]
      PUSH [tag] 13			a[1]
      JUMPI 			a[1]
      INVALID 			a[1]
    tag 13			a[1]
      JUMPDEST 			a[1]
      PUSH 20			a[1]
      MUL 			a[1]
      ADD 			a[1]
      MLOAD 			a[1]
      DUP2 			Pairing.G1Point(a[0], a[1])
      MSTORE 			Pairing.G1Point(a[0], a[1])
      POP 			Pairing.G1Point(a[0], a[1])
      DUP2 			proof
      PUSH 0			proof.a
      ADD 			proof.a
      DUP2 			proof.a = Pairing.G1Point(a[0]...
      SWAP1 			proof.a = Pairing.G1Point(a[0]...
      MSTORE 			proof.a = Pairing.G1Point(a[0]...
      POP 			proof.a = Pairing.G1Point(a[0]...
      PUSH 40			Pairing.G2Point([b[0][0], b[0]...
      DUP1 			Pairing.G2Point([b[0][0], b[0]...
      MLOAD 			Pairing.G2Point([b[0][0], b[0]...
      SWAP1 			Pairing.G2Point([b[0][0], b[0]...
      DUP2 			Pairing.G2Point([b[0][0], b[0]...
      ADD 			Pairing.G2Point([b[0][0], b[0]...
      PUSH 40			Pairing.G2Point([b[0][0], b[0]...
      MSTORE 			Pairing.G2Point([b[0][0], b[0]...
      DUP1 			Pairing.G2Point([b[0][0], b[0]...
      PUSH 40			Pairing.G2Point([b[0][0], b[0]...
      DUP1 			Pairing.G2Point([b[0][0], b[0]...
      MLOAD 			Pairing.G2Point([b[0][0], b[0]...
      SWAP1 			Pairing.G2Point([b[0][0], b[0]...
      DUP2 			Pairing.G2Point([b[0][0], b[0]...
      ADD 			Pairing.G2Point([b[0][0], b[0]...
      PUSH 40			Pairing.G2Point([b[0][0], b[0]...
      MSTORE 			Pairing.G2Point([b[0][0], b[0]...
      DUP1 			Pairing.G2Point([b[0][0], b[0]...
      DUP9 			b
      PUSH 0			0
      PUSH 2			b[0]
      DUP2 			b[0]
      LT 			b[0]
      ISZERO 			b[0]
      ISZERO 			b[0]
      PUSH [tag] 14			b[0]
      JUMPI 			b[0]
      INVALID 			b[0]
    tag 14			b[0]
      JUMPDEST 			b[0]
      PUSH 20			b[0]
      MUL 			b[0]
      ADD 			b[0]
      MLOAD 			b[0]
      PUSH 0			0
      PUSH 2			b[0][0]
      DUP2 			b[0][0]
      LT 			b[0][0]
      ISZERO 			b[0][0]
      ISZERO 			b[0][0]
      PUSH [tag] 15			b[0][0]
      JUMPI 			b[0][0]
      INVALID 			b[0][0]
    tag 15			b[0][0]
      JUMPDEST 			b[0][0]
      PUSH 20			b[0][0]
      MUL 			b[0][0]
      ADD 			b[0][0]
      MLOAD 			b[0][0]
      DUP2 			Pairing.G2Point([b[0][0], b[0]...
      MSTORE 			Pairing.G2Point([b[0][0], b[0]...
      PUSH 20			Pairing.G2Point([b[0][0], b[0]...
      ADD 			Pairing.G2Point([b[0][0], b[0]...
      DUP9 			b
      PUSH 0			0
      PUSH 2			b[0]
      DUP2 			b[0]
      LT 			b[0]
      ISZERO 			b[0]
      ISZERO 			b[0]
      PUSH [tag] 16			b[0]
      JUMPI 			b[0]
      INVALID 			b[0]
    tag 16			b[0]
      JUMPDEST 			b[0]
      PUSH 20			b[0]
      MUL 			b[0]
      ADD 			b[0]
      MLOAD 			b[0]
      PUSH 1			1
      PUSH 2			b[0][1]
      DUP2 			b[0][1]
      LT 			b[0][1]
      ISZERO 			b[0][1]
      ISZERO 			b[0][1]
      PUSH [tag] 17			b[0][1]
      JUMPI 			b[0][1]
      INVALID 			b[0][1]
    tag 17			b[0][1]
      JUMPDEST 			b[0][1]
      PUSH 20			b[0][1]
      MUL 			b[0][1]
      ADD 			b[0][1]
      MLOAD 			b[0][1]
      DUP2 			Pairing.G2Point([b[0][0], b[0]...
      MSTORE 			Pairing.G2Point([b[0][0], b[0]...
      POP 			Pairing.G2Point([b[0][0], b[0]...
      DUP2 			Pairing.G2Point([b[0][0], b[0]...
      MSTORE 			Pairing.G2Point([b[0][0], b[0]...
      PUSH 20			Pairing.G2Point([b[0][0], b[0]...
      ADD 			Pairing.G2Point([b[0][0], b[0]...
      PUSH 40			Pairing.G2Point([b[0][0], b[0]...
      DUP1 			Pairing.G2Point([b[0][0], b[0]...
      MLOAD 			Pairing.G2Point([b[0][0], b[0]...
      SWAP1 			Pairing.G2Point([b[0][0], b[0]...
      DUP2 			Pairing.G2Point([b[0][0], b[0]...
      ADD 			Pairing.G2Point([b[0][0], b[0]...
      PUSH 40			Pairing.G2Point([b[0][0], b[0]...
      MSTORE 			Pairing.G2Point([b[0][0], b[0]...
      DUP1 			Pairing.G2Point([b[0][0], b[0]...
      DUP9 			b
      PUSH 1			1
      PUSH 2			b[1]
      DUP2 			b[1]
      LT 			b[1]
      ISZERO 			b[1]
      ISZERO 			b[1]
      PUSH [tag] 18			b[1]
      JUMPI 			b[1]
      INVALID 			b[1]
    tag 18			b[1]
      JUMPDEST 			b[1]
      PUSH 20			b[1]
      MUL 			b[1]
      ADD 			b[1]
      MLOAD 			b[1]
      PUSH 0			0
      PUSH 2			b[1][0]
      DUP2 			b[1][0]
      LT 			b[1][0]
      ISZERO 			b[1][0]
      ISZERO 			b[1][0]
      PUSH [tag] 19			b[1][0]
      JUMPI 			b[1][0]
      INVALID 			b[1][0]
    tag 19			b[1][0]
      JUMPDEST 			b[1][0]
      PUSH 20			b[1][0]
      MUL 			b[1][0]
      ADD 			b[1][0]
      MLOAD 			b[1][0]
      DUP2 			Pairing.G2Point([b[0][0], b[0]...
      MSTORE 			Pairing.G2Point([b[0][0], b[0]...
      PUSH 20			Pairing.G2Point([b[0][0], b[0]...
      ADD 			Pairing.G2Point([b[0][0], b[0]...
      DUP9 			b
      PUSH 1			1
      PUSH 2			b[1]
      DUP2 			b[1]
      LT 			b[1]
      ISZERO 			b[1]
      ISZERO 			b[1]
      PUSH [tag] 20			b[1]
      JUMPI 			b[1]
      INVALID 			b[1]
    tag 20			b[1]
      JUMPDEST 			b[1]
      PUSH 20			b[1]
      MUL 			b[1]
      ADD 			b[1]
      MLOAD 			b[1]
      PUSH 1			1
      PUSH 2			b[1][1]
      DUP2 			b[1][1]
      LT 			b[1][1]
      ISZERO 			b[1][1]
      ISZERO 			b[1][1]
      PUSH [tag] 21			b[1][1]
      JUMPI 			b[1][1]
      INVALID 			b[1][1]
    tag 21			b[1][1]
      JUMPDEST 			b[1][1]
      PUSH 20			b[1][1]
      MUL 			b[1][1]
      ADD 			b[1][1]
      MLOAD 			b[1][1]
      DUP2 			Pairing.G2Point([b[0][0], b[0]...
      MSTORE 			Pairing.G2Point([b[0][0], b[0]...
      POP 			Pairing.G2Point([b[0][0], b[0]...
      DUP2 			Pairing.G2Point([b[0][0], b[0]...
      MSTORE 			Pairing.G2Point([b[0][0], b[0]...
      POP 			Pairing.G2Point([b[0][0], b[0]...
      DUP2 			proof
      PUSH 20			proof.b
      ADD 			proof.b
      DUP2 			proof.b = Pairing.G2Point([b[0...
      SWAP1 			proof.b = Pairing.G2Point([b[0...
      MSTORE 			proof.b = Pairing.G2Point([b[0...
      POP 			proof.b = Pairing.G2Point([b[0...
      PUSH 40			Pairing.G1Point(c[0], c[1])
      DUP1 			Pairing.G1Point(c[0], c[1])
      MLOAD 			Pairing.G1Point(c[0], c[1])
      SWAP1 			Pairing.G1Point(c[0], c[1])
      DUP2 			Pairing.G1Point(c[0], c[1])
      ADD 			Pairing.G1Point(c[0], c[1])
      PUSH 40			Pairing.G1Point(c[0], c[1])
      MSTORE 			Pairing.G1Point(c[0], c[1])
      DUP1 			Pairing.G1Point(c[0], c[1])
      DUP6 			c
      PUSH 0			0
      PUSH 2			c[0]
      DUP2 			c[0]
      LT 			c[0]
      ISZERO 			c[0]
      ISZERO 			c[0]
      PUSH [tag] 22			c[0]
      JUMPI 			c[0]
      INVALID 			c[0]
    tag 22			c[0]
      JUMPDEST 			c[0]
      PUSH 20			c[0]
      MUL 			c[0]
      ADD 			c[0]
      MLOAD 			c[0]
      DUP2 			Pairing.G1Point(c[0], c[1])
      MSTORE 			Pairing.G1Point(c[0], c[1])
      PUSH 20			Pairing.G1Point(c[0], c[1])
      ADD 			Pairing.G1Point(c[0], c[1])
      DUP6 			c
      PUSH 1			1
      PUSH 2			c[1]
      DUP2 			c[1]
      LT 			c[1]
      ISZERO 			c[1]
      ISZERO 			c[1]
      PUSH [tag] 23			c[1]
      JUMPI 			c[1]
      INVALID 			c[1]
    tag 23			c[1]
      JUMPDEST 			c[1]
      PUSH 20			c[1]
      MUL 			c[1]
      ADD 			c[1]
      MLOAD 			c[1]
      DUP2 			Pairing.G1Point(c[0], c[1])
      MSTORE 			Pairing.G1Point(c[0], c[1])
      POP 			Pairing.G1Point(c[0], c[1])
      DUP2 			proof
      PUSH 40			proof.c
      ADD 			proof.c
      DUP2 			proof.c = Pairing.G1Point(c[0]...
      SWAP1 			proof.c = Pairing.G1Point(c[0]...
      MSTORE 			proof.c = Pairing.G1Point(c[0]...
      POP 			proof.c = Pairing.G1Point(c[0]...
      PUSH 60			uint[] memory inputValues
      PUSH 1			input.length
      PUSH 40			new uint[](input.length)
      MLOAD 			new uint[](input.length)
      SWAP1 			new uint[](input.length)
      DUP1 			new uint[](input.length)
      DUP3 			new uint[](input.length)
      MSTORE 			new uint[](input.length)
      DUP1 			new uint[](input.length)
      PUSH 20			new uint[](input.length)
      MUL 			new uint[](input.length)
      PUSH 20			new uint[](input.length)
      ADD 			new uint[](input.length)
      DUP3 			new uint[](input.length)
      ADD 			new uint[](input.length)
      PUSH 40			new uint[](input.length)
      MSTORE 			new uint[](input.length)
      DUP1 			new uint[](input.length)
      ISZERO 			new uint[](input.length)
      PUSH [tag] 24			new uint[](input.length)
      JUMPI 			new uint[](input.length)
      DUP2 			new uint[](input.length)
      PUSH 20			new uint[](input.length)
      ADD 			new uint[](input.length)
      PUSH 20			 i
      DUP3 			 uint2
      MUL 			\n    uint256 in
      DUP1 			08c1
      CODESIZE 			16871ca8d3
      DUP4 			d97816
      CODECOPY 			b68181585d97816a916871ca8d3c20...
      DUP1 			rnal
      DUP3 			256 in
      ADD 			uint256 internal 
      SWAP2 			fd47;\n    uint256 internal 
      POP 			fd47;\n    uint256 internal 
      POP 			library BN256G2 {\n    uint256...
      SWAP1 			new uint[](input.length)
      POP 			new uint[](input.length)
    tag 24			new uint[](input.length)
      JUMPDEST 			new uint[](input.length)
      POP 			new uint[](input.length)
      SWAP1 			uint[] memory inputValues = ne...
      POP 			uint[] memory inputValues = ne...
      PUSH 0			uint i
      DUP1 			0
      SWAP1 			uint i = 0
      POP 			uint i = 0
    tag 25			for(uint i = 0; i < input.leng...
      JUMPDEST 			for(uint i = 0; i < input.leng...
      PUSH 1			input.length
      DUP2 			i
      LT 			i < input.length
      ISZERO 			for(uint i = 0; i < input.leng...
      PUSH [tag] 26			for(uint i = 0; i < input.leng...
      JUMPI 			for(uint i = 0; i < input.leng...
      DUP5 			input
      DUP2 			i
      PUSH 1			input[i]
      DUP2 			input[i]
      LT 			input[i]
      ISZERO 			input[i]
      ISZERO 			input[i]
      PUSH [tag] 28			input[i]
      JUMPI 			input[i]
      INVALID 			input[i]
    tag 28			input[i]
      JUMPDEST 			input[i]
      PUSH 20			input[i]
      MUL 			input[i]
      ADD 			input[i]
      MLOAD 			input[i]
      DUP3 			inputValues
      DUP3 			i
      DUP2 			inputValues[i]
      MLOAD 			inputValues[i]
      DUP2 			inputValues[i]
      LT 			inputValues[i]
      ISZERO 			inputValues[i]
      ISZERO 			inputValues[i]
      PUSH [tag] 29			inputValues[i]
      JUMPI 			inputValues[i]
      INVALID 			inputValues[i]
    tag 29			inputValues[i]
      JUMPDEST 			inputValues[i]
      SWAP1 			inputValues[i]
      PUSH 20			inputValues[i]
      ADD 			inputValues[i]
      SWAP1 			inputValues[i]
      PUSH 20			inputValues[i]
      MUL 			inputValues[i]
      ADD 			inputValues[i]
      DUP2 			inputValues[i] = input[i]
      DUP2 			inputValues[i] = input[i]
      MSTORE 			inputValues[i] = input[i]
      POP 			inputValues[i] = input[i]
      POP 			inputValues[i] = input[i]
      DUP1 			i++
      DUP1 			i++
      PUSH 1			i++
      ADD 			i++
      SWAP2 			i++
      POP 			i++
      POP 			i++
      PUSH [tag] 25			for(uint i = 0; i < input.leng...
      JUMP 			for(uint i = 0; i < input.leng...
    tag 26			for(uint i = 0; i < input.leng...
      JUMPDEST 			for(uint i = 0; i < input.leng...
      POP 			for(uint i = 0; i < input.leng...
      PUSH 0			0
      PUSH [tag] 30			verify(inputValues, proof)
      DUP3 			inputValues
      DUP5 			proof
      PUSH [tag] 31			verify
      JUMP [in]			verify(inputValues, proof)
    tag 30			verify(inputValues, proof)
      JUMPDEST 			verify(inputValues, proof)
      EQ 			verify(inputValues, proof) == ...
      ISZERO 			if (verify(inputValues, proof)...
      PUSH [tag] 32			if (verify(inputValues, proof)...
      JUMPI 			if (verify(inputValues, proof)...
      PUSH 3F3CFDB26FB5F9F1786AB4F1A1F9CD4C0B5E726CBDFC26E495261731AAD44E39			Verified("Transaction successf...
      PUSH 40			Verified("Transaction successf...
      MLOAD 			Verified("Transaction successf...
      DUP1 			Verified("Transaction successf...
      DUP1 			Verified("Transaction successf...
      PUSH 20			Verified("Transaction successf...
      ADD 			Verified("Transaction successf...
      DUP3 			Verified("Transaction successf...
      DUP2 			Verified("Transaction successf...
      SUB 			Verified("Transaction successf...
      DUP3 			Verified("Transaction successf...
      MSTORE 			Verified("Transaction successf...
      PUSH 22			Verified("Transaction successf...
      DUP2 			Verified("Transaction successf...
      MSTORE 			Verified("Transaction successf...
      PUSH 20			Verified("Transaction successf...
      ADD 			Verified("Transaction successf...
      DUP1 			Verified("Transaction successf...
      PUSH 5472616E73616374696F6E207375636365737366756C6C792076657269666965			Verified("Transaction successf...
      DUP2 			Verified("Transaction successf...
      MSTORE 			Verified("Transaction successf...
      PUSH 20			Verified("Transaction successf...
      ADD 			Verified("Transaction successf...
      PUSH 642E000000000000000000000000000000000000000000000000000000000000			Verified("Transaction successf...
      DUP2 			Verified("Transaction successf...
      MSTORE 			Verified("Transaction successf...
      POP 			Verified("Transaction successf...
      PUSH 40			Verified("Transaction successf...
      ADD 			Verified("Transaction successf...
      SWAP2 			Verified("Transaction successf...
      POP 			Verified("Transaction successf...
      POP 			Verified("Transaction successf...
      PUSH 40			Verified("Transaction successf...
      MLOAD 			Verified("Transaction successf...
      DUP1 			Verified("Transaction successf...
      SWAP2 			Verified("Transaction successf...
      SUB 			Verified("Transaction successf...
      SWAP1 			Verified("Transaction successf...
      LOG1 			Verified("Transaction successf...
      PUSH 1			true
      SWAP3 			return true
      POP 			return true
      POP 			return true
      POP 			return true
      PUSH [tag] 9			return true
      JUMP 			return true
    tag 32			if (verify(inputValues, proof)...
      JUMPDEST 			if (verify(inputValues, proof)...
      PUSH 0			false
      SWAP3 			return false
      POP 			return false
      POP 			return false
      POP 			return false
    tag 9			function verifyTx(\n    \n    ...
      JUMPDEST 			function verifyTx(\n    \n    ...
      SWAP5 			function verifyTx(\n    \n    ...
      SWAP4 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      POP 			function verifyTx(\n    \n    ...
      JUMP [out]			function verifyTx(\n    \n    ...
    tag 31			function verify(uint[] memory ...
      JUMPDEST 			function verify(uint[] memory ...
      PUSH 0			uint
      DUP1 			uint256 snark_scalar_field
      PUSH 30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001			218882428718392752222464057452...
      SWAP1 			uint256 snark_scalar_field = 2...
      POP 			uint256 snark_scalar_field = 2...
      PUSH [tag] 35			VerifyingKey memory vk
      PUSH [tag] 36			VerifyingKey memory vk
      JUMP [in]			VerifyingKey memory vk
    tag 35			VerifyingKey memory vk
      JUMPDEST 			VerifyingKey memory vk
      PUSH [tag] 37			verifyingKey()
      PUSH [tag] 38			verifyingKey
      JUMP [in]			verifyingKey()
    tag 37			verifyingKey()
      JUMPDEST 			verifyingKey()
      SWAP1 			VerifyingKey memory vk = verif...
      POP 			VerifyingKey memory vk = verif...
      DUP1 			vk
      PUSH 80			vk.gamma_abc
      ADD 			vk.gamma_abc
      MLOAD 			vk.gamma_abc
      MLOAD 			vk.gamma_abc.length
      PUSH 1			1
      DUP7 			input
      MLOAD 			input.length
      ADD 			input.length + 1
      EQ 			input.length + 1 == vk.gamma_a...
      ISZERO 			require(input.length + 1 == vk...
      ISZERO 			require(input.length + 1 == vk...
      PUSH [tag] 39			require(input.length + 1 == vk...
      JUMPI 			require(input.length + 1 == vk...
      PUSH 0			require(input.length + 1 == vk...
      DUP1 			require(input.length + 1 == vk...
      REVERT 			require(input.length + 1 == vk...
    tag 39			require(input.length + 1 == vk...
      JUMPDEST 			require(input.length + 1 == vk...
      PUSH [tag] 40			Pairing.G1Point memory vk_x
      PUSH [tag] 41			Pairing.G1Point memory vk_x
      JUMP [in]			Pairing.G1Point memory vk_x
    tag 40			Pairing.G1Point memory vk_x
      JUMPDEST 			Pairing.G1Point memory vk_x
      PUSH 40			Pairing.G1Point(0, 0)
      DUP1 			Pairing.G1Point(0, 0)
      MLOAD 			Pairing.G1Point(0, 0)
      SWAP1 			Pairing.G1Point(0, 0)
      DUP2 			Pairing.G1Point(0, 0)
      ADD 			Pairing.G1Point(0, 0)
      PUSH 40			Pairing.G1Point(0, 0)
      MSTORE 			Pairing.G1Point(0, 0)
      DUP1 			Pairing.G1Point(0, 0)
      PUSH 0			0
      DUP2 			Pairing.G1Point(0, 0)
      MSTORE 			Pairing.G1Point(0, 0)
      PUSH 20			Pairing.G1Point(0, 0)
      ADD 			Pairing.G1Point(0, 0)
      PUSH 0			0
      DUP2 			Pairing.G1Point(0, 0)
      MSTORE 			Pairing.G1Point(0, 0)
      POP 			Pairing.G1Point(0, 0)
      SWAP1 			Pairing.G1Point memory vk_x = ...
      POP 			Pairing.G1Point memory vk_x = ...
      PUSH 0			uint i
      DUP1 			0
      SWAP1 			uint i = 0
      POP 			uint i = 0
    tag 42			for (uint i = 0; i < input.len...
      JUMPDEST 			for (uint i = 0; i < input.len...
      DUP7 			input
      MLOAD 			input.length
      DUP2 			i
      LT 			i < input.length
      ISZERO 			for (uint i = 0; i < input.len...
      PUSH [tag] 43			for (uint i = 0; i < input.len...
      JUMPI 			for (uint i = 0; i < input.len...
      DUP4 			snark_scalar_field
      DUP8 			input
      DUP3 			i
      DUP2 			input[i]
      MLOAD 			input[i]
      DUP2 			input[i]
      LT 			input[i]
      ISZERO 			input[i]
      ISZERO 			input[i]
      PUSH [tag] 45			input[i]
      JUMPI 			input[i]
      INVALID 			input[i]
    tag 45			input[i]
      JUMPDEST 			input[i]
      SWAP1 			input[i]
      PUSH 20			input[i]
      ADD 			input[i]
      SWAP1 			input[i]
      PUSH 20			input[i]
      MUL 			input[i]
      ADD 			input[i]
      MLOAD 			input[i]
      LT 			input[i] < snark_scalar_field
      ISZERO 			require(input[i] < snark_scala...
      ISZERO 			require(input[i] < snark_scala...
      PUSH [tag] 46			require(input[i] < snark_scala...
      JUMPI 			require(input[i] < snark_scala...
      PUSH 0			require(input[i] < snark_scala...
      DUP1 			require(input[i] < snark_scala...
      REVERT 			require(input[i] < snark_scala...
    tag 46			require(input[i] < snark_scala...
      JUMPDEST 			require(input[i] < snark_scala...
      PUSH [tag] 47			Pairing.addition(vk_x, Pairing...
      DUP3 			vk_x
      PUSH [tag] 48			Pairing.scalar_mul(vk.gamma_ab...
      DUP6 			vk
      PUSH 80			vk.gamma_abc
      ADD 			vk.gamma_abc
      MLOAD 			vk.gamma_abc
      PUSH 1			1
      DUP6 			i
      ADD 			i + 1
      DUP2 			vk.gamma_abc[i + 1]
      MLOAD 			vk.gamma_abc[i + 1]
      DUP2 			vk.gamma_abc[i + 1]
      LT 			vk.gamma_abc[i + 1]
      ISZERO 			vk.gamma_abc[i + 1]
      ISZERO 			vk.gamma_abc[i + 1]
      PUSH [tag] 49			vk.gamma_abc[i + 1]
      JUMPI 			vk.gamma_abc[i + 1]
      INVALID 			vk.gamma_abc[i + 1]
    tag 49			vk.gamma_abc[i + 1]
      JUMPDEST 			vk.gamma_abc[i + 1]
      SWAP1 			vk.gamma_abc[i + 1]
      PUSH 20			vk.gamma_abc[i + 1]
      ADD 			vk.gamma_abc[i + 1]
      SWAP1 			vk.gamma_abc[i + 1]
      PUSH 20			vk.gamma_abc[i + 1]
      MUL 			vk.gamma_abc[i + 1]
      ADD 			vk.gamma_abc[i + 1]
      MLOAD 			vk.gamma_abc[i + 1]
      DUP11 			input
      DUP6 			i
      DUP2 			input[i]
      MLOAD 			input[i]
      DUP2 			input[i]
      LT 			input[i]
      ISZERO 			input[i]
      ISZERO 			input[i]
      PUSH [tag] 50			input[i]
      JUMPI 			input[i]
      INVALID 			input[i]
    tag 50			input[i]
      JUMPDEST 			input[i]
      SWAP1 			input[i]
      PUSH 20			input[i]
      ADD 			input[i]
      SWAP1 			input[i]
      PUSH 20			input[i]
      MUL 			input[i]
      ADD 			input[i]
      MLOAD 			input[i]
      PUSH [tag] 51			Pairing.scalar_mul
      JUMP [in]			Pairing.scalar_mul(vk.gamma_ab...
    tag 48			Pairing.scalar_mul(vk.gamma_ab...
      JUMPDEST 			Pairing.scalar_mul(vk.gamma_ab...
      PUSH [tag] 52			Pairing.addition
      JUMP [in]			Pairing.addition(vk_x, Pairing...
    tag 47			Pairing.addition(vk_x, Pairing...
      JUMPDEST 			Pairing.addition(vk_x, Pairing...
      SWAP2 			vk_x = Pairing.addition(vk_x, ...
      POP 			vk_x = Pairing.addition(vk_x, ...
      DUP1 			i++
      DUP1 			i++
      PUSH 1			i++
      ADD 			i++
      SWAP2 			i++
      POP 			i++
      POP 			i++
      PUSH [tag] 42			for (uint i = 0; i < input.len...
      JUMP 			for (uint i = 0; i < input.len...
    tag 43			for (uint i = 0; i < input.len...
      JUMPDEST 			for (uint i = 0; i < input.len...
      POP 			for (uint i = 0; i < input.len...
      PUSH [tag] 53			Pairing.addition(vk_x, vk.gamm...
      DUP2 			vk_x
      DUP4 			vk
      PUSH 80			vk.gamma_abc
      ADD 			vk.gamma_abc
      MLOAD 			vk.gamma_abc
      PUSH 0			0
      DUP2 			vk.gamma_abc[0]
      MLOAD 			vk.gamma_abc[0]
      DUP2 			vk.gamma_abc[0]
      LT 			vk.gamma_abc[0]
      ISZERO 			vk.gamma_abc[0]
      ISZERO 			vk.gamma_abc[0]
      PUSH [tag] 54			vk.gamma_abc[0]
      JUMPI 			vk.gamma_abc[0]
      INVALID 			vk.gamma_abc[0]
    tag 54			vk.gamma_abc[0]
      JUMPDEST 			vk.gamma_abc[0]
      SWAP1 			vk.gamma_abc[0]
      PUSH 20			vk.gamma_abc[0]
      ADD 			vk.gamma_abc[0]
      SWAP1 			vk.gamma_abc[0]
      PUSH 20			vk.gamma_abc[0]
      MUL 			vk.gamma_abc[0]
      ADD 			vk.gamma_abc[0]
      MLOAD 			vk.gamma_abc[0]
      PUSH [tag] 52			Pairing.addition
      JUMP [in]			Pairing.addition(vk_x, vk.gamm...
    tag 53			Pairing.addition(vk_x, vk.gamm...
      JUMPDEST 			Pairing.addition(vk_x, vk.gamm...
      SWAP1 			vk_x = Pairing.addition(vk_x, ...
      POP 			vk_x = Pairing.addition(vk_x, ...
      PUSH [tag] 55			Pairing.pairingProd4(\n       ...
      DUP6 			proof
      PUSH 0			proof.a
      ADD 			proof.a
      MLOAD 			proof.a
      DUP7 			proof
      PUSH 20			proof.b
      ADD 			proof.b
      MLOAD 			proof.b
      PUSH [tag] 56			Pairing.negate(vk_x)
      DUP5 			vk_x
      PUSH [tag] 57			Pairing.negate
      JUMP [in]			Pairing.negate(vk_x)
    tag 56			Pairing.negate(vk_x)
      JUMPDEST 			Pairing.negate(vk_x)
      DUP6 			vk
      PUSH 40			vk.gamma
      ADD 			vk.gamma
      MLOAD 			vk.gamma
      PUSH [tag] 58			Pairing.negate(proof.c)
      DUP11 			proof
      PUSH 40			proof.c
      ADD 			proof.c
      MLOAD 			proof.c
      PUSH [tag] 57			Pairing.negate
      JUMP [in]			Pairing.negate(proof.c)
    tag 58			Pairing.negate(proof.c)
      JUMPDEST 			Pairing.negate(proof.c)
      DUP8 			vk
      PUSH 60			vk.delta
      ADD 			vk.delta
      MLOAD 			vk.delta
      PUSH [tag] 59			Pairing.negate(vk.a)
      DUP10 			vk
      PUSH 0			vk.a
      ADD 			vk.a
      MLOAD 			vk.a
      PUSH [tag] 57			Pairing.negate
      JUMP [in]			Pairing.negate(vk.a)
    tag 59			Pairing.negate(vk.a)
      JUMPDEST 			Pairing.negate(vk.a)
      DUP10 			vk
      PUSH 20			vk.b
      ADD 			vk.b
      MLOAD 			vk.b
      PUSH [tag] 60			Pairing.pairingProd4
      JUMP [in]			Pairing.pairingProd4(\n       ...
    tag 55			Pairing.pairingProd4(\n       ...
      JUMPDEST 			Pairing.pairingProd4(\n       ...
      ISZERO 			!Pairing.pairingProd4(\n      ...
      ISZERO 			if(!Pairing.pairingProd4(\n   ...
      PUSH [tag] 61			if(!Pairing.pairingProd4(\n   ...
      JUMPI 			if(!Pairing.pairingProd4(\n   ...
      PUSH 1			1
      SWAP4 			return 1
      POP 			return 1
      POP 			return 1
      POP 			return 1
      POP 			return 1
      PUSH [tag] 34			return 1
      JUMP 			return 1
    tag 61			if(!Pairing.pairingProd4(\n   ...
      JUMPDEST 			if(!Pairing.pairingProd4(\n   ...
      PUSH 0			0
      SWAP4 			return 0
      POP 			return 0
      POP 			return 0
      POP 			return 0
      POP 			return 0
    tag 34			function verify(uint[] memory ...
      JUMPDEST 			function verify(uint[] memory ...
      SWAP3 			function verify(uint[] memory ...
      SWAP2 			function verify(uint[] memory ...
      POP 			function verify(uint[] memory ...
      POP 			function verify(uint[] memory ...
      JUMP [out]			function verify(uint[] memory ...
    tag 38			function verifyingKey() pure i...
      JUMPDEST 			function verifyingKey() pure i...
      PUSH [tag] 62			VerifyingKey memory vk
      PUSH [tag] 36			VerifyingKey memory vk
      JUMP [in]			VerifyingKey memory vk
    tag 62			VerifyingKey memory vk
      JUMPDEST 			VerifyingKey memory vk
      PUSH 40			Pairing.G1Point(uint256(0x0a66...
      DUP1 			Pairing.G1Point(uint256(0x0a66...
      MLOAD 			Pairing.G1Point(uint256(0x0a66...
      SWAP1 			Pairing.G1Point(uint256(0x0a66...
      DUP2 			Pairing.G1Point(uint256(0x0a66...
      ADD 			Pairing.G1Point(uint256(0x0a66...
      PUSH 40			Pairing.G1Point(uint256(0x0a66...
      MSTORE 			Pairing.G1Point(uint256(0x0a66...
      DUP1 			Pairing.G1Point(uint256(0x0a66...
      PUSH A66D7B33789FE1DDF9E9AA10F58A9D065A849090BED127BE938354FA43D9A98			0x0a66d7b33789fe1ddf9e9aa10f58...
      DUP2 			Pairing.G1Point(uint256(0x0a66...
      MSTORE 			Pairing.G1Point(uint256(0x0a66...
      PUSH 20			Pairing.G1Point(uint256(0x0a66...
      ADD 			Pairing.G1Point(uint256(0x0a66...
      PUSH 7740BA2BBE9E5A7B3CB1AA428092E5C0F7B38BA9D0D1443918F55DA3F3BADC4			0x07740ba2bbe9e5a7b3cb1aa42809...
      DUP2 			Pairing.G1Point(uint256(0x0a66...
      MSTORE 			Pairing.G1Point(uint256(0x0a66...
      POP 			Pairing.G1Point(uint256(0x0a66...
      DUP2 			vk
      PUSH 0			vk.a
      ADD 			vk.a
      DUP2 			vk.a = Pairing.G1Point(uint256...
      SWAP1 			vk.a = Pairing.G1Point(uint256...
      MSTORE 			vk.a = Pairing.G1Point(uint256...
      POP 			vk.a = Pairing.G1Point(uint256...
      PUSH 40			Pairing.G2Point([uint256(0x19a...
      DUP1 			Pairing.G2Point([uint256(0x19a...
      MLOAD 			Pairing.G2Point([uint256(0x19a...
      SWAP1 			Pairing.G2Point([uint256(0x19a...
      DUP2 			Pairing.G2Point([uint256(0x19a...
      ADD 			Pairing.G2Point([uint256(0x19a...
      PUSH 40			Pairing.G2Point([uint256(0x19a...
      MSTORE 			Pairing.G2Point([uint256(0x19a...
      DUP1 			Pairing.G2Point([uint256(0x19a...
      PUSH 40			Pairing.G2Point([uint256(0x19a...
      DUP1 			Pairing.G2Point([uint256(0x19a...
      MLOAD 			Pairing.G2Point([uint256(0x19a...
      SWAP1 			Pairing.G2Point([uint256(0x19a...
      DUP2 			Pairing.G2Point([uint256(0x19a...
      ADD 			Pairing.G2Point([uint256(0x19a...
      PUSH 40			Pairing.G2Point([uint256(0x19a...
      MSTORE 			Pairing.G2Point([uint256(0x19a...
      DUP1 			Pairing.G2Point([uint256(0x19a...
      PUSH 19A14CFDD576230BEC3B5FD70C2CAFB5989587AD089F0647DDC432CF7242D9CC			0x19a14cfdd576230bec3b5fd70c2c...
      DUP2 			Pairing.G2Point([uint256(0x19a...
      MSTORE 			Pairing.G2Point([uint256(0x19a...
      PUSH 20			Pairing.G2Point([uint256(0x19a...
      ADD 			Pairing.G2Point([uint256(0x19a...
      PUSH 281428EBD57BC8F1B67ADB6864B0DE18FF816D9256B237FFA142A95C2F7518			0x00281428ebd57bc8f1b67adb6864...
      DUP2 			Pairing.G2Point([uint256(0x19a...
      MSTORE 			Pairing.G2Point([uint256(0x19a...
      POP 			Pairing.G2Point([uint256(0x19a...
      DUP2 			Pairing.G2Point([uint256(0x19a...
      MSTORE 			Pairing.G2Point([uint256(0x19a...
      PUSH 20			Pairing.G2Point([uint256(0x19a...
      ADD 			Pairing.G2Point([uint256(0x19a...
      PUSH 40			Pairing.G2Point([uint256(0x19a...
      DUP1 			Pairing.G2Point([uint256(0x19a...
      MLOAD 			Pairing.G2Point([uint256(0x19a...
      SWAP1 			Pairing.G2Point([uint256(0x19a...
      DUP2 			Pairing.G2Point([uint256(0x19a...
      ADD 			Pairing.G2Point([uint256(0x19a...
      PUSH 40			Pairing.G2Point([uint256(0x19a...
      MSTORE 			Pairing.G2Point([uint256(0x19a...
      DUP1 			Pairing.G2Point([uint256(0x19a...
      PUSH E185F834D55F5D993B48A71774A42AF57958B79339A7CC053701C1B2C5D912E			0x0e185f834d55f5d993b48a71774a...
      DUP2 			Pairing.G2Point([uint256(0x19a...
      MSTORE 			Pairing.G2Point([uint256(0x19a...
      PUSH 20			Pairing.G2Point([uint256(0x19a...
      ADD 			Pairing.G2Point([uint256(0x19a...
      PUSH 6D7D4A913BA1AB5AC30B4A9E1C82BFA32FEA565FB3DD2635C953B1554FDA8AE			0x06d7d4a913ba1ab5ac30b4a9e1c8...
      DUP2 			Pairing.G2Point([uint256(0x19a...
      MSTORE 			Pairing.G2Point([uint256(0x19a...
      POP 			Pairing.G2Point([uint256(0x19a...
      DUP2 			Pairing.G2Point([uint256(0x19a...
      MSTORE 			Pairing.G2Point([uint256(0x19a...
      POP 			Pairing.G2Point([uint256(0x19a...
      DUP2 			vk
      PUSH 20			vk.b
      ADD 			vk.b
      DUP2 			vk.b = Pairing.G2Point([uint25...
      SWAP1 			vk.b = Pairing.G2Point([uint25...
      MSTORE 			vk.b = Pairing.G2Point([uint25...
      POP 			vk.b = Pairing.G2Point([uint25...
      PUSH 40			Pairing.G2Point([uint256(0x0b1...
      DUP1 			Pairing.G2Point([uint256(0x0b1...
      MLOAD 			Pairing.G2Point([uint256(0x0b1...
      SWAP1 			Pairing.G2Point([uint256(0x0b1...
      DUP2 			Pairing.G2Point([uint256(0x0b1...
      ADD 			Pairing.G2Point([uint256(0x0b1...
      PUSH 40			Pairing.G2Point([uint256(0x0b1...
      MSTORE 			Pairing.G2Point([uint256(0x0b1...
      DUP1 			Pairing.G2Point([uint256(0x0b1...
      PUSH 40			Pairing.G2Point([uint256(0x0b1...
      DUP1 			Pairing.G2Point([uint256(0x0b1...
      MLOAD 			Pairing.G2Point([uint256(0x0b1...
      SWAP1 			Pairing.G2Point([uint256(0x0b1...
      DUP2 			Pairing.G2Point([uint256(0x0b1...
      ADD 			Pairing.G2Point([uint256(0x0b1...
      PUSH 40			Pairing.G2Point([uint256(0x0b1...
      MSTORE 			Pairing.G2Point([uint256(0x0b1...
      DUP1 			Pairing.G2Point([uint256(0x0b1...
      PUSH B12276C517E61EE10BACA921053DB31A7B905C78443563D5686C707D567C339			0x0b12276c517e61ee10baca921053...
      DUP2 			Pairing.G2Point([uint256(0x0b1...
      MSTORE 			Pairing.G2Point([uint256(0x0b1...
      PUSH 20			Pairing.G2Point([uint256(0x0b1...
      ADD 			Pairing.G2Point([uint256(0x0b1...
      PUSH D40711BAC3B28570C633C4DEB0873B0D7BFD835FCA219F6A02E00A51FC43B94			0x0d40711bac3b28570c633c4deb08...
      DUP2 			Pairing.G2Point([uint256(0x0b1...
      MSTORE 			Pairing.G2Point([uint256(0x0b1...
      POP 			Pairing.G2Point([uint256(0x0b1...
      DUP2 			Pairing.G2Point([uint256(0x0b1...
      MSTORE 			Pairing.G2Point([uint256(0x0b1...
      PUSH 20			Pairing.G2Point([uint256(0x0b1...
      ADD 			Pairing.G2Point([uint256(0x0b1...
      PUSH 40			Pairing.G2Point([uint256(0x0b1...
      DUP1 			Pairing.G2Point([uint256(0x0b1...
      MLOAD 			Pairing.G2Point([uint256(0x0b1...
      SWAP1 			Pairing.G2Point([uint256(0x0b1...
      DUP2 			Pairing.G2Point([uint256(0x0b1...
      ADD 			Pairing.G2Point([uint256(0x0b1...
      PUSH 40			Pairing.G2Point([uint256(0x0b1...
      MSTORE 			Pairing.G2Point([uint256(0x0b1...
      DUP1 			Pairing.G2Point([uint256(0x0b1...
      PUSH 1EE1B47B522A00884FF2F821A6E0439D1C80B13513014A9A288C67DA04B53A96			0x1ee1b47b522a00884ff2f821a6e0...
      DUP2 			Pairing.G2Point([uint256(0x0b1...
      MSTORE 			Pairing.G2Point([uint256(0x0b1...
      PUSH 20			Pairing.G2Point([uint256(0x0b1...
      ADD 			Pairing.G2Point([uint256(0x0b1...
      PUSH 1828A2E4A05A7292E65E94A5A12BCAD046CEFA7321BA2A768E754C367C920403			0x1828a2e4a05a7292e65e94a5a12b...
      DUP2 			Pairing.G2Point([uint256(0x0b1...
      MSTORE 			Pairing.G2Point([uint256(0x0b1...
      POP 			Pairing.G2Point([uint256(0x0b1...
      DUP2 			Pairing.G2Point([uint256(0x0b1...
      MSTORE 			Pairing.G2Point([uint256(0x0b1...
      POP 			Pairing.G2Point([uint256(0x0b1...
      DUP2 			vk
      PUSH 40			vk.gamma
      ADD 			vk.gamma
      DUP2 			vk.gamma = Pairing.G2Point([ui...
      SWAP1 			vk.gamma = Pairing.G2Point([ui...
      MSTORE 			vk.gamma = Pairing.G2Point([ui...
      POP 			vk.gamma = Pairing.G2Point([ui...
      PUSH 40			Pairing.G2Point([uint256(0x25b...
      DUP1 			Pairing.G2Point([uint256(0x25b...
      MLOAD 			Pairing.G2Point([uint256(0x25b...
      SWAP1 			Pairing.G2Point([uint256(0x25b...
      DUP2 			Pairing.G2Point([uint256(0x25b...
      ADD 			Pairing.G2Point([uint256(0x25b...
      PUSH 40			Pairing.G2Point([uint256(0x25b...
      MSTORE 			Pairing.G2Point([uint256(0x25b...
      DUP1 			Pairing.G2Point([uint256(0x25b...
      PUSH 40			Pairing.G2Point([uint256(0x25b...
      DUP1 			Pairing.G2Point([uint256(0x25b...
      MLOAD 			Pairing.G2Point([uint256(0x25b...
      SWAP1 			Pairing.G2Point([uint256(0x25b...
      DUP2 			Pairing.G2Point([uint256(0x25b...
      ADD 			Pairing.G2Point([uint256(0x25b...
      PUSH 40			Pairing.G2Point([uint256(0x25b...
      MSTORE 			Pairing.G2Point([uint256(0x25b...
      DUP1 			Pairing.G2Point([uint256(0x25b...
      PUSH 25B8450AA1E6A01F2CF51B942379F733CA770A12C3958428C780FBBDD4D2AEE2			0x25b8450aa1e6a01f2cf51b942379...
      DUP2 			Pairing.G2Point([uint256(0x25b...
      MSTORE 			Pairing.G2Point([uint256(0x25b...
      PUSH 20			Pairing.G2Point([uint256(0x25b...
      ADD 			Pairing.G2Point([uint256(0x25b...
      PUSH 2CD84FED31E7B27262CD9E9D38E5B30F5CD22EA33EA091CCB3D58DFC4ED81F46			0x2cd84fed31e7b27262cd9e9d38e5...
      DUP2 			Pairing.G2Point([uint256(0x25b...
      MSTORE 			Pairing.G2Point([uint256(0x25b...
      POP 			Pairing.G2Point([uint256(0x25b...
      DUP2 			Pairing.G2Point([uint256(0x25b...
      MSTORE 			Pairing.G2Point([uint256(0x25b...
      PUSH 20			Pairing.G2Point([uint256(0x25b...
      ADD 			Pairing.G2Point([uint256(0x25b...
      PUSH 40			Pairing.G2Point([uint256(0x25b...
      DUP1 			Pairing.G2Point([uint256(0x25b...
      MLOAD 			Pairing.G2Point([uint256(0x25b...
      SWAP1 			Pairing.G2Point([uint256(0x25b...
      DUP2 			Pairing.G2Point([uint256(0x25b...
      ADD 			Pairing.G2Point([uint256(0x25b...
      PUSH 40			Pairing.G2Point([uint256(0x25b...
      MSTORE 			Pairing.G2Point([uint256(0x25b...
      DUP1 			Pairing.G2Point([uint256(0x25b...
      PUSH 1997CD56ECCEA640A70F3927F05E4A1CC3F7DAB5D361BAD472942860642CD269			0x1997cd56eccea640a70f3927f05e...
      DUP2 			Pairing.G2Point([uint256(0x25b...
      MSTORE 			Pairing.G2Point([uint256(0x25b...
      PUSH 20			Pairing.G2Point([uint256(0x25b...
      ADD 			Pairing.G2Point([uint256(0x25b...
      PUSH 26F81DA02C5A5C05DC868CE5F58C3AE0C2B31923274FD2ED90FB65BFFD18FEE7			0x26f81da02c5a5c05dc868ce5f58c...
      DUP2 			Pairing.G2Point([uint256(0x25b...
      MSTORE 			Pairing.G2Point([uint256(0x25b...
      POP 			Pairing.G2Point([uint256(0x25b...
      DUP2 			Pairing.G2Point([uint256(0x25b...
      MSTORE 			Pairing.G2Point([uint256(0x25b...
      POP 			Pairing.G2Point([uint256(0x25b...
      DUP2 			vk
      PUSH 60			vk.delta
      ADD 			vk.delta
      DUP2 			vk.delta = Pairing.G2Point([ui...
      SWAP1 			vk.delta = Pairing.G2Point([ui...
      MSTORE 			vk.delta = Pairing.G2Point([ui...
      POP 			vk.delta = Pairing.G2Point([ui...
      PUSH 2			2
      PUSH 40			new Pairing.G1Point[](2)
      MLOAD 			new Pairing.G1Point[](2)
      SWAP1 			new Pairing.G1Point[](2)
      DUP1 			new Pairing.G1Point[](2)
      DUP3 			new Pairing.G1Point[](2)
      MSTORE 			new Pairing.G1Point[](2)
      DUP1 			new Pairing.G1Point[](2)
      PUSH 20			new Pairing.G1Point[](2)
      MUL 			new Pairing.G1Point[](2)
      PUSH 20			new Pairing.G1Point[](2)
      ADD 			new Pairing.G1Point[](2)
      DUP3 			new Pairing.G1Point[](2)
      ADD 			new Pairing.G1Point[](2)
      PUSH 40			new Pairing.G1Point[](2)
      MSTORE 			new Pairing.G1Point[](2)
      DUP1 			new Pairing.G1Point[](2)
      ISZERO 			new Pairing.G1Point[](2)
      PUSH [tag] 64			new Pairing.G1Point[](2)
      JUMPI 			new Pairing.G1Point[](2)
      DUP2 			new Pairing.G1Point[](2)
      PUSH 20			new Pairing.G1Point[](2)
      ADD 			new Pairing.G1Point[](2)
    tag 65			new Pairing.G1Point[](2)
      JUMPDEST 			new Pairing.G1Point[](2)
      PUSH [tag] 66			new Pairing.G1Point[](2)
      PUSH [tag] 67			new Pairing.G1Point[](2)
      JUMP [in]			new Pairing.G1Point[](2)
    tag 66			new Pairing.G1Point[](2)
      JUMPDEST 			new Pairing.G1Point[](2)
      DUP2 			new Pairing.G1Point[](2)
      MSTORE 			new Pairing.G1Point[](2)
      PUSH 20			new Pairing.G1Point[](2)
      ADD 			new Pairing.G1Point[](2)
      SWAP1 			new Pairing.G1Point[](2)
      PUSH 1			new Pairing.G1Point[](2)
      SWAP1 			new Pairing.G1Point[](2)
      SUB 			new Pairing.G1Point[](2)
      SWAP1 			new Pairing.G1Point[](2)
      DUP2 			new Pairing.G1Point[](2)
      PUSH [tag] 65			new Pairing.G1Point[](2)
      JUMPI 			new Pairing.G1Point[](2)
      SWAP1 			new Pairing.G1Point[](2)
      POP 			new Pairing.G1Point[](2)
    tag 64			new Pairing.G1Point[](2)
      JUMPDEST 			new Pairing.G1Point[](2)
      POP 			new Pairing.G1Point[](2)
      DUP2 			vk
      PUSH 80			vk.gamma_abc
      ADD 			vk.gamma_abc
      DUP2 			vk.gamma_abc = new Pairing.G1P...
      SWAP1 			vk.gamma_abc = new Pairing.G1P...
      MSTORE 			vk.gamma_abc = new Pairing.G1P...
      POP 			vk.gamma_abc = new Pairing.G1P...
      PUSH 40			Pairing.G1Point(uint256(0x1d3b...
      DUP1 			Pairing.G1Point(uint256(0x1d3b...
      MLOAD 			Pairing.G1Point(uint256(0x1d3b...
      SWAP1 			Pairing.G1Point(uint256(0x1d3b...
      DUP2 			Pairing.G1Point(uint256(0x1d3b...
      ADD 			Pairing.G1Point(uint256(0x1d3b...
      PUSH 40			Pairing.G1Point(uint256(0x1d3b...
      MSTORE 			Pairing.G1Point(uint256(0x1d3b...
      DUP1 			Pairing.G1Point(uint256(0x1d3b...
      PUSH 1D3B1EE1603366B684466D4CB9E39CB6627552B65130D223E9C5EB52D2B0BD40			0x1d3b1ee1603366b684466d4cb9e3...
      DUP2 			Pairing.G1Point(uint256(0x1d3b...
      MSTORE 			Pairing.G1Point(uint256(0x1d3b...
      PUSH 20			Pairing.G1Point(uint256(0x1d3b...
      ADD 			Pairing.G1Point(uint256(0x1d3b...
      PUSH 28FD0EA47D452A5450FA8A198E7AA8858EB6A3147D9EE75F70966AC5E632FC16			0x28fd0ea47d452a5450fa8a198e7a...
      DUP2 			Pairing.G1Point(uint256(0x1d3b...
      MSTORE 			Pairing.G1Point(uint256(0x1d3b...
      POP 			Pairing.G1Point(uint256(0x1d3b...
      DUP2 			vk
      PUSH 80			vk.gamma_abc
      ADD 			vk.gamma_abc
      MLOAD 			vk.gamma_abc
      PUSH 0			0
      DUP2 			vk.gamma_abc[0]
      MLOAD 			vk.gamma_abc[0]
      DUP2 			vk.gamma_abc[0]
      LT 			vk.gamma_abc[0]
      ISZERO 			vk.gamma_abc[0]
      ISZERO 			vk.gamma_abc[0]
      PUSH [tag] 68			vk.gamma_abc[0]
      JUMPI 			vk.gamma_abc[0]
      INVALID 			vk.gamma_abc[0]
    tag 68			vk.gamma_abc[0]
      JUMPDEST 			vk.gamma_abc[0]
      SWAP1 			vk.gamma_abc[0]
      PUSH 20			vk.gamma_abc[0]
      ADD 			vk.gamma_abc[0]
      SWAP1 			vk.gamma_abc[0]
      PUSH 20			vk.gamma_abc[0]
      MUL 			vk.gamma_abc[0]
      ADD 			vk.gamma_abc[0]
      DUP2 			vk.gamma_abc[0] = Pairing.G1Po...
      SWAP1 			vk.gamma_abc[0] = Pairing.G1Po...
      MSTORE 			vk.gamma_abc[0] = Pairing.G1Po...
      POP 			vk.gamma_abc[0] = Pairing.G1Po...
      PUSH 40			Pairing.G1Point(uint256(0x2f0d...
      DUP1 			Pairing.G1Point(uint256(0x2f0d...
      MLOAD 			Pairing.G1Point(uint256(0x2f0d...
      SWAP1 			Pairing.G1Point(uint256(0x2f0d...
      DUP2 			Pairing.G1Point(uint256(0x2f0d...
      ADD 			Pairing.G1Point(uint256(0x2f0d...
      PUSH 40			Pairing.G1Point(uint256(0x2f0d...
      MSTORE 			Pairing.G1Point(uint256(0x2f0d...
      DUP1 			Pairing.G1Point(uint256(0x2f0d...
      PUSH 2F0D7B0AEDDE5E3BA8B6902CFEAA163B0E7FC920AF0FDBF8FCA4D91C479636F7			0x2f0d7b0aedde5e3ba8b6902cfeaa...
      DUP2 			Pairing.G1Point(uint256(0x2f0d...
      MSTORE 			Pairing.G1Point(uint256(0x2f0d...
      PUSH 20			Pairing.G1Point(uint256(0x2f0d...
      ADD 			Pairing.G1Point(uint256(0x2f0d...
      PUSH A8EF077748AD3F1652C954A96B3AFD93866D1198F70657F713149D47A32824A			0x0a8ef077748ad3f1652c954a96b3...
      DUP2 			Pairing.G1Point(uint256(0x2f0d...
      MSTORE 			Pairing.G1Point(uint256(0x2f0d...
      POP 			Pairing.G1Point(uint256(0x2f0d...
      DUP2 			vk
      PUSH 80			vk.gamma_abc
      ADD 			vk.gamma_abc
      MLOAD 			vk.gamma_abc
      PUSH 1			1
      DUP2 			vk.gamma_abc[1]
      MLOAD 			vk.gamma_abc[1]
      DUP2 			vk.gamma_abc[1]
      LT 			vk.gamma_abc[1]
      ISZERO 			vk.gamma_abc[1]
      ISZERO 			vk.gamma_abc[1]
      PUSH [tag] 69			vk.gamma_abc[1]
      JUMPI 			vk.gamma_abc[1]
      INVALID 			vk.gamma_abc[1]
    tag 69			vk.gamma_abc[1]
      JUMPDEST 			vk.gamma_abc[1]
      SWAP1 			vk.gamma_abc[1]
      PUSH 20			vk.gamma_abc[1]
      ADD 			vk.gamma_abc[1]
      SWAP1 			vk.gamma_abc[1]
      PUSH 20			vk.gamma_abc[1]
      MUL 			vk.gamma_abc[1]
      ADD 			vk.gamma_abc[1]
      DUP2 			vk.gamma_abc[1] = Pairing.G1Po...
      SWAP1 			vk.gamma_abc[1] = Pairing.G1Po...
      MSTORE 			vk.gamma_abc[1] = Pairing.G1Po...
      POP 			vk.gamma_abc[1] = Pairing.G1Po...
      SWAP1 			function verifyingKey() pure i...
      JUMP [out]			function verifyingKey() pure i...
    tag 51			function scalar_mul(G1Point me...
      JUMPDEST 			function scalar_mul(G1Point me...
      PUSH [tag] 70			G1Point memory r
      PUSH [tag] 41			G1Point memory r
      JUMP [in]			G1Point memory r
    tag 70			G1Point memory r
      JUMPDEST 			G1Point memory r
      PUSH [tag] 72			uint[3] memory input
      PUSH [tag] 73			uint[3] memory input
      JUMP [in]			uint[3] memory input
    tag 72			uint[3] memory input
      JUMPDEST 			uint[3] memory input
      DUP4 			p
      PUSH 0			p.X
      ADD 			p.X
      MLOAD 			p.X
      DUP2 			input
      PUSH 0			0
      PUSH 3			input[0]
      DUP2 			input[0]
      LT 			input[0]
      ISZERO 			input[0]
      ISZERO 			input[0]
      PUSH [tag] 74			input[0]
      JUMPI 			input[0]
      INVALID 			input[0]
    tag 74			input[0]
      JUMPDEST 			input[0]
      PUSH 20			input[0]
      MUL 			input[0]
      ADD 			input[0]
      DUP2 			input[0] = p.X
      DUP2 			input[0] = p.X
      MSTORE 			input[0] = p.X
      POP 			input[0] = p.X
      POP 			input[0] = p.X
      DUP4 			p
      PUSH 20			p.Y
      ADD 			p.Y
      MLOAD 			p.Y
      DUP2 			input
      PUSH 1			1
      PUSH 3			input[1]
      DUP2 			input[1]
      LT 			input[1]
      ISZERO 			input[1]
      ISZERO 			input[1]
      PUSH [tag] 75			input[1]
      JUMPI 			input[1]
      INVALID 			input[1]
    tag 75			input[1]
      JUMPDEST 			input[1]
      PUSH 20			input[1]
      MUL 			input[1]
      ADD 			input[1]
      DUP2 			input[1] = p.Y
      DUP2 			input[1] = p.Y
      MSTORE 			input[1] = p.Y
      POP 			input[1] = p.Y
      POP 			input[1] = p.Y
      DUP3 			s
      DUP2 			input
      PUSH 2			2
      PUSH 3			input[2]
      DUP2 			input[2]
      LT 			input[2]
      ISZERO 			input[2]
      ISZERO 			input[2]
      PUSH [tag] 76			input[2]
      JUMPI 			input[2]
      INVALID 			input[2]
    tag 76			input[2]
      JUMPDEST 			input[2]
      PUSH 20			input[2]
      MUL 			input[2]
      ADD 			input[2]
      DUP2 			input[2] = s
      DUP2 			input[2] = s
      MSTORE 			input[2] = s
      POP 			input[2] = s
      POP 			input[2] = s
      PUSH 0			bool success
      PUSH 60			0x60
      DUP4 			r
      PUSH 80			0x80
      DUP5 			input
      PUSH 0			0
      PUSH 7			7
      PUSH 7D0			2000
      GAS 			gas
      SUB 			sub(gas, 2000)
      CALL 			call(sub(gas, 2000), 7, 0, inp...
      SWAP1 			success := call(sub(gas, 2000)...
      POP 			success := call(sub(gas, 2000)...
      DUP1 			success
      PUSH 0			0
      DUP2 			case 0 { invalid() }
      EQ 			case 0 { invalid() }
      PUSH [tag] 78			case 0 { invalid() }
      JUMPI 			case 0 { invalid() }
      PUSH [tag] 77			switch success case 0 { invali...
      JUMP 			switch success case 0 { invali...
    tag 78			case 0 { invalid() }
      JUMPDEST 			case 0 { invalid() }
      INVALID 			invalid()
    tag 77			switch success case 0 { invali...
      JUMPDEST 			switch success case 0 { invali...
      POP 			switch success case 0 { invali...
      DUP1 			success
      ISZERO 			require (success)
      ISZERO 			require (success)
      PUSH [tag] 79			require (success)
      JUMPI 			require (success)
      PUSH 0			require (success)
      DUP1 			require (success)
      REVERT 			require (success)
    tag 79			require (success)
      JUMPDEST 			require (success)
      POP 			function scalar_mul(G1Point me...
      POP 			function scalar_mul(G1Point me...
      SWAP3 			function scalar_mul(G1Point me...
      SWAP2 			function scalar_mul(G1Point me...
      POP 			function scalar_mul(G1Point me...
      POP 			function scalar_mul(G1Point me...
      JUMP [out]			function scalar_mul(G1Point me...
    tag 52			function addition(G1Point memo...
      JUMPDEST 			function addition(G1Point memo...
      PUSH [tag] 80			G1Point memory r
      PUSH [tag] 41			G1Point memory r
      JUMP [in]			G1Point memory r
    tag 80			G1Point memory r
      JUMPDEST 			G1Point memory r
      PUSH [tag] 82			uint[4] memory input
      PUSH [tag] 83			uint[4] memory input
      JUMP [in]			uint[4] memory input
    tag 82			uint[4] memory input
      JUMPDEST 			uint[4] memory input
      DUP4 			p1
      PUSH 0			p1.X
      ADD 			p1.X
      MLOAD 			p1.X
      DUP2 			input
      PUSH 0			0
      PUSH 4			input[0]
      DUP2 			input[0]
      LT 			input[0]
      ISZERO 			input[0]
      ISZERO 			input[0]
      PUSH [tag] 84			input[0]
      JUMPI 			input[0]
      INVALID 			input[0]
    tag 84			input[0]
      JUMPDEST 			input[0]
      PUSH 20			input[0]
      MUL 			input[0]
      ADD 			input[0]
      DUP2 			input[0] = p1.X
      DUP2 			input[0] = p1.X
      MSTORE 			input[0] = p1.X
      POP 			input[0] = p1.X
      POP 			input[0] = p1.X
      DUP4 			p1
      PUSH 20			p1.Y
      ADD 			p1.Y
      MLOAD 			p1.Y
      DUP2 			input
      PUSH 1			1
      PUSH 4			input[1]
      DUP2 			input[1]
      LT 			input[1]
      ISZERO 			input[1]
      ISZERO 			input[1]
      PUSH [tag] 85			input[1]
      JUMPI 			input[1]
      INVALID 			input[1]
    tag 85			input[1]
      JUMPDEST 			input[1]
      PUSH 20			input[1]
      MUL 			input[1]
      ADD 			input[1]
      DUP2 			input[1] = p1.Y
      DUP2 			input[1] = p1.Y
      MSTORE 			input[1] = p1.Y
      POP 			input[1] = p1.Y
      POP 			input[1] = p1.Y
      DUP3 			p2
      PUSH 0			p2.X
      ADD 			p2.X
      MLOAD 			p2.X
      DUP2 			input
      PUSH 2			2
      PUSH 4			input[2]
      DUP2 			input[2]
      LT 			input[2]
      ISZERO 			input[2]
      ISZERO 			input[2]
      PUSH [tag] 86			input[2]
      JUMPI 			input[2]
      INVALID 			input[2]
    tag 86			input[2]
      JUMPDEST 			input[2]
      PUSH 20			input[2]
      MUL 			input[2]
      ADD 			input[2]
      DUP2 			input[2] = p2.X
      DUP2 			input[2] = p2.X
      MSTORE 			input[2] = p2.X
      POP 			input[2] = p2.X
      POP 			input[2] = p2.X
      DUP3 			p2
      PUSH 20			p2.Y
      ADD 			p2.Y
      MLOAD 			p2.Y
      DUP2 			input
      PUSH 3			3
      PUSH 4			input[3]
      DUP2 			input[3]
      LT 			input[3]
      ISZERO 			input[3]
      ISZERO 			input[3]
      PUSH [tag] 87			input[3]
      JUMPI 			input[3]
      INVALID 			input[3]
    tag 87			input[3]
      JUMPDEST 			input[3]
      PUSH 20			input[3]
      MUL 			input[3]
      ADD 			input[3]
      DUP2 			input[3] = p2.Y
      DUP2 			input[3] = p2.Y
      MSTORE 			input[3] = p2.Y
      POP 			input[3] = p2.Y
      POP 			input[3] = p2.Y
      PUSH 0			bool success
      PUSH 60			0x60
      DUP4 			r
      PUSH C0			0xc0
      DUP5 			input
      PUSH 0			0
      PUSH 6			6
      PUSH 7D0			2000
      GAS 			gas
      SUB 			sub(gas, 2000)
      CALL 			call(sub(gas, 2000), 6, 0, inp...
      SWAP1 			success := call(sub(gas, 2000)...
      POP 			success := call(sub(gas, 2000)...
      DUP1 			success
      PUSH 0			0
      DUP2 			case 0 { invalid() }
      EQ 			case 0 { invalid() }
      PUSH [tag] 89			case 0 { invalid() }
      JUMPI 			case 0 { invalid() }
      PUSH [tag] 88			switch success case 0 { invali...
      JUMP 			switch success case 0 { invali...
    tag 89			case 0 { invalid() }
      JUMPDEST 			case 0 { invalid() }
      INVALID 			invalid()
    tag 88			switch success case 0 { invali...
      JUMPDEST 			switch success case 0 { invali...
      POP 			switch success case 0 { invali...
      DUP1 			success
      ISZERO 			require(success)
      ISZERO 			require(success)
      PUSH [tag] 90			require(success)
      JUMPI 			require(success)
      PUSH 0			require(success)
      DUP1 			require(success)
      REVERT 			require(success)
    tag 90			require(success)
      JUMPDEST 			require(success)
      POP 			function addition(G1Point memo...
      POP 			function addition(G1Point memo...
      SWAP3 			function addition(G1Point memo...
      SWAP2 			function addition(G1Point memo...
      POP 			function addition(G1Point memo...
      POP 			function addition(G1Point memo...
      JUMP [out]			function addition(G1Point memo...
    tag 57			function negate(G1Point memory...
      JUMPDEST 			function negate(G1Point memory...
      PUSH [tag] 91			G1Point memory
      PUSH [tag] 41			G1Point memory
      JUMP [in]			G1Point memory
    tag 91			G1Point memory
      JUMPDEST 			G1Point memory
      PUSH 0			uint q
      PUSH 30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47			218882428718392752222464057452...
      SWAP1 			uint q = 218882428718392752222...
      POP 			uint q = 218882428718392752222...
      PUSH 0			0
      DUP4 			p
      PUSH 0			p.X
      ADD 			p.X
      MLOAD 			p.X
      EQ 			p.X == 0
      DUP1 			p.X == 0 && p.Y == 0
      ISZERO 			p.X == 0 && p.Y == 0
      PUSH [tag] 93			p.X == 0 && p.Y == 0
      JUMPI 			p.X == 0 && p.Y == 0
      POP 			p.X == 0 && p.Y == 0
      PUSH 0			0
      DUP4 			p
      PUSH 20			p.Y
      ADD 			p.Y
      MLOAD 			p.Y
      EQ 			p.Y == 0
    tag 93			p.X == 0 && p.Y == 0
      JUMPDEST 			p.X == 0 && p.Y == 0
      ISZERO 			if (p.X == 0 && p.Y == 0)\n   ...
      PUSH [tag] 94			if (p.X == 0 && p.Y == 0)\n   ...
      JUMPI 			if (p.X == 0 && p.Y == 0)\n   ...
      PUSH 40			G1Point(0, 0)
      DUP1 			G1Point(0, 0)
      MLOAD 			G1Point(0, 0)
      SWAP1 			G1Point(0, 0)
      DUP2 			G1Point(0, 0)
      ADD 			G1Point(0, 0)
      PUSH 40			G1Point(0, 0)
      MSTORE 			G1Point(0, 0)
      DUP1 			G1Point(0, 0)
      PUSH 0			0
      DUP2 			G1Point(0, 0)
      MSTORE 			G1Point(0, 0)
      PUSH 20			G1Point(0, 0)
      ADD 			G1Point(0, 0)
      PUSH 0			0
      DUP2 			G1Point(0, 0)
      MSTORE 			G1Point(0, 0)
      POP 			G1Point(0, 0)
      SWAP2 			return G1Point(0, 0)
      POP 			return G1Point(0, 0)
      POP 			return G1Point(0, 0)
      PUSH [tag] 92			return G1Point(0, 0)
      JUMP 			return G1Point(0, 0)
    tag 94			if (p.X == 0 && p.Y == 0)\n   ...
      JUMPDEST 			if (p.X == 0 && p.Y == 0)\n   ...
      PUSH 40			G1Point(p.X, q - (p.Y % q))
      DUP1 			G1Point(p.X, q - (p.Y % q))
      MLOAD 			G1Point(p.X, q - (p.Y % q))
      SWAP1 			G1Point(p.X, q - (p.Y % q))
      DUP2 			G1Point(p.X, q - (p.Y % q))
      ADD 			G1Point(p.X, q - (p.Y % q))
      PUSH 40			G1Point(p.X, q - (p.Y % q))
      MSTORE 			G1Point(p.X, q - (p.Y % q))
      DUP1 			G1Point(p.X, q - (p.Y % q))
      DUP5 			p
      PUSH 0			p.X
      ADD 			p.X
      MLOAD 			p.X
      DUP2 			G1Point(p.X, q - (p.Y % q))
      MSTORE 			G1Point(p.X, q - (p.Y % q))
      PUSH 20			G1Point(p.X, q - (p.Y % q))
      ADD 			G1Point(p.X, q - (p.Y % q))
      DUP3 			q
      DUP6 			p
      PUSH 20			p.Y
      ADD 			p.Y
      MLOAD 			p.Y
      DUP2 			p.Y % q
      ISZERO 			p.Y % q
      ISZERO 			p.Y % q
      PUSH [tag] 95			p.Y % q
      JUMPI 			p.Y % q
      INVALID 			p.Y % q
    tag 95			p.Y % q
      JUMPDEST 			p.Y % q
      MOD 			p.Y % q
      DUP4 			q
      SUB 			q - (p.Y % q)
      DUP2 			G1Point(p.X, q - (p.Y % q))
      MSTORE 			G1Point(p.X, q - (p.Y % q))
      POP 			G1Point(p.X, q - (p.Y % q))
      SWAP2 			return G1Point(p.X, q - (p.Y %...
      POP 			return G1Point(p.X, q - (p.Y %...
      POP 			return G1Point(p.X, q - (p.Y %...
    tag 92			function negate(G1Point memory...
      JUMPDEST 			function negate(G1Point memory...
      SWAP2 			function negate(G1Point memory...
      SWAP1 			function negate(G1Point memory...
      POP 			function negate(G1Point memory...
      JUMP [out]			function negate(G1Point memory...
    tag 60			function pairingProd4(\n      ...
      JUMPDEST 			function pairingProd4(\n      ...
      PUSH 0			bool
      PUSH 60			G1Point[] memory p1
      PUSH 4			4
      PUSH 40			new G1Point[](4)
      MLOAD 			new G1Point[](4)
      SWAP1 			new G1Point[](4)
      DUP1 			new G1Point[](4)
      DUP3 			new G1Point[](4)
      MSTORE 			new G1Point[](4)
      DUP1 			new G1Point[](4)
      PUSH 20			new G1Point[](4)
      MUL 			new G1Point[](4)
      PUSH 20			new G1Point[](4)
      ADD 			new G1Point[](4)
      DUP3 			new G1Point[](4)
      ADD 			new G1Point[](4)
      PUSH 40			new G1Point[](4)
      MSTORE 			new G1Point[](4)
      DUP1 			new G1Point[](4)
      ISZERO 			new G1Point[](4)
      PUSH [tag] 97			new G1Point[](4)
      JUMPI 			new G1Point[](4)
      DUP2 			new G1Point[](4)
      PUSH 20			new G1Point[](4)
      ADD 			new G1Point[](4)
    tag 98			new G1Point[](4)
      JUMPDEST 			new G1Point[](4)
      PUSH [tag] 99			new G1Point[](4)
      PUSH [tag] 67			new G1Point[](4)
      JUMP [in]			new G1Point[](4)
    tag 99			new G1Point[](4)
      JUMPDEST 			new G1Point[](4)
      DUP2 			new G1Point[](4)
      MSTORE 			new G1Point[](4)
      PUSH 20			new G1Point[](4)
      ADD 			new G1Point[](4)
      SWAP1 			new G1Point[](4)
      PUSH 1			new G1Point[](4)
      SWAP1 			new G1Point[](4)
      SUB 			new G1Point[](4)
      SWAP1 			new G1Point[](4)
      DUP2 			new G1Point[](4)
      PUSH [tag] 98			new G1Point[](4)
      JUMPI 			new G1Point[](4)
      SWAP1 			new G1Point[](4)
      POP 			new G1Point[](4)
    tag 97			new G1Point[](4)
      JUMPDEST 			new G1Point[](4)
      POP 			new G1Point[](4)
      SWAP1 			G1Point[] memory p1 = new G1Po...
      POP 			G1Point[] memory p1 = new G1Po...
      PUSH 60			G2Point[] memory p2
      PUSH 4			4
      PUSH 40			new G2Point[](4)
      MLOAD 			new G2Point[](4)
      SWAP1 			new G2Point[](4)
      DUP1 			new G2Point[](4)
      DUP3 			new G2Point[](4)
      MSTORE 			new G2Point[](4)
      DUP1 			new G2Point[](4)
      PUSH 20			new G2Point[](4)
      MUL 			new G2Point[](4)
      PUSH 20			new G2Point[](4)
      ADD 			new G2Point[](4)
      DUP3 			new G2Point[](4)
      ADD 			new G2Point[](4)
      PUSH 40			new G2Point[](4)
      MSTORE 			new G2Point[](4)
      DUP1 			new G2Point[](4)
      ISZERO 			new G2Point[](4)
      PUSH [tag] 100			new G2Point[](4)
      JUMPI 			new G2Point[](4)
      DUP2 			new G2Point[](4)
      PUSH 20			new G2Point[](4)
      ADD 			new G2Point[](4)
    tag 101			new G2Point[](4)
      JUMPDEST 			new G2Point[](4)
      PUSH [tag] 102			new G2Point[](4)
      PUSH [tag] 103			new G2Point[](4)
      JUMP [in]			new G2Point[](4)
    tag 102			new G2Point[](4)
      JUMPDEST 			new G2Point[](4)
      DUP2 			new G2Point[](4)
      MSTORE 			new G2Point[](4)
      PUSH 20			new G2Point[](4)
      ADD 			new G2Point[](4)
      SWAP1 			new G2Point[](4)
      PUSH 1			new G2Point[](4)
      SWAP1 			new G2Point[](4)
      SUB 			new G2Point[](4)
      SWAP1 			new G2Point[](4)
      DUP2 			new G2Point[](4)
      PUSH [tag] 101			new G2Point[](4)
      JUMPI 			new G2Point[](4)
      SWAP1 			new G2Point[](4)
      POP 			new G2Point[](4)
    tag 100			new G2Point[](4)
      JUMPDEST 			new G2Point[](4)
      POP 			new G2Point[](4)
      SWAP1 			G2Point[] memory p2 = new G2Po...
      POP 			G2Point[] memory p2 = new G2Po...
      DUP11 			a1
      DUP3 			p1
      PUSH 0			0
      DUP2 			p1[0]
      MLOAD 			p1[0]
      DUP2 			p1[0]
      LT 			p1[0]
      ISZERO 			p1[0]
      ISZERO 			p1[0]
      PUSH [tag] 104			p1[0]
      JUMPI 			p1[0]
      INVALID 			p1[0]
    tag 104			p1[0]
      JUMPDEST 			p1[0]
      SWAP1 			p1[0]
      PUSH 20			p1[0]
      ADD 			p1[0]
      SWAP1 			p1[0]
      PUSH 20			p1[0]
      MUL 			p1[0]
      ADD 			p1[0]
      DUP2 			p1[0] = a1
      SWAP1 			p1[0] = a1
      MSTORE 			p1[0] = a1
      POP 			p1[0] = a1
      DUP9 			b1
      DUP3 			p1
      PUSH 1			1
      DUP2 			p1[1]
      MLOAD 			p1[1]
      DUP2 			p1[1]
      LT 			p1[1]
      ISZERO 			p1[1]
      ISZERO 			p1[1]
      PUSH [tag] 105			p1[1]
      JUMPI 			p1[1]
      INVALID 			p1[1]
    tag 105			p1[1]
      JUMPDEST 			p1[1]
      SWAP1 			p1[1]
      PUSH 20			p1[1]
      ADD 			p1[1]
      SWAP1 			p1[1]
      PUSH 20			p1[1]
      MUL 			p1[1]
      ADD 			p1[1]
      DUP2 			p1[1] = b1
      SWAP1 			p1[1] = b1
      MSTORE 			p1[1] = b1
      POP 			p1[1] = b1
      DUP7 			c1
      DUP3 			p1
      PUSH 2			2
      DUP2 			p1[2]
      MLOAD 			p1[2]
      DUP2 			p1[2]
      LT 			p1[2]
      ISZERO 			p1[2]
      ISZERO 			p1[2]
      PUSH [tag] 106			p1[2]
      JUMPI 			p1[2]
      INVALID 			p1[2]
    tag 106			p1[2]
      JUMPDEST 			p1[2]
      SWAP1 			p1[2]
      PUSH 20			p1[2]
      ADD 			p1[2]
      SWAP1 			p1[2]
      PUSH 20			p1[2]
      MUL 			p1[2]
      ADD 			p1[2]
      DUP2 			p1[2] = c1
      SWAP1 			p1[2] = c1
      MSTORE 			p1[2] = c1
      POP 			p1[2] = c1
      DUP5 			d1
      DUP3 			p1
      PUSH 3			3
      DUP2 			p1[3]
      MLOAD 			p1[3]
      DUP2 			p1[3]
      LT 			p1[3]
      ISZERO 			p1[3]
      ISZERO 			p1[3]
      PUSH [tag] 107			p1[3]
      JUMPI 			p1[3]
      INVALID 			p1[3]
    tag 107			p1[3]
      JUMPDEST 			p1[3]
      SWAP1 			p1[3]
      PUSH 20			p1[3]
      ADD 			p1[3]
      SWAP1 			p1[3]
      PUSH 20			p1[3]
      MUL 			p1[3]
      ADD 			p1[3]
      DUP2 			p1[3] = d1
      SWAP1 			p1[3] = d1
      MSTORE 			p1[3] = d1
      POP 			p1[3] = d1
      DUP10 			a2
      DUP2 			p2
      PUSH 0			0
      DUP2 			p2[0]
      MLOAD 			p2[0]
      DUP2 			p2[0]
      LT 			p2[0]
      ISZERO 			p2[0]
      ISZERO 			p2[0]
      PUSH [tag] 108			p2[0]
      JUMPI 			p2[0]
      INVALID 			p2[0]
    tag 108			p2[0]
      JUMPDEST 			p2[0]
      SWAP1 			p2[0]
      PUSH 20			p2[0]
      ADD 			p2[0]
      SWAP1 			p2[0]
      PUSH 20			p2[0]
      MUL 			p2[0]
      ADD 			p2[0]
      DUP2 			p2[0] = a2
      SWAP1 			p2[0] = a2
      MSTORE 			p2[0] = a2
      POP 			p2[0] = a2
      DUP8 			b2
      DUP2 			p2
      PUSH 1			1
      DUP2 			p2[1]
      MLOAD 			p2[1]
      DUP2 			p2[1]
      LT 			p2[1]
      ISZERO 			p2[1]
      ISZERO 			p2[1]
      PUSH [tag] 109			p2[1]
      JUMPI 			p2[1]
      INVALID 			p2[1]
    tag 109			p2[1]
      JUMPDEST 			p2[1]
      SWAP1 			p2[1]
      PUSH 20			p2[1]
      ADD 			p2[1]
      SWAP1 			p2[1]
      PUSH 20			p2[1]
      MUL 			p2[1]
      ADD 			p2[1]
      DUP2 			p2[1] = b2
      SWAP1 			p2[1] = b2
      MSTORE 			p2[1] = b2
      POP 			p2[1] = b2
      DUP6 			c2
      DUP2 			p2
      PUSH 2			2
      DUP2 			p2[2]
      MLOAD 			p2[2]
      DUP2 			p2[2]
      LT 			p2[2]
      ISZERO 			p2[2]
      ISZERO 			p2[2]
      PUSH [tag] 110			p2[2]
      JUMPI 			p2[2]
      INVALID 			p2[2]
    tag 110			p2[2]
      JUMPDEST 			p2[2]
      SWAP1 			p2[2]
      PUSH 20			p2[2]
      ADD 			p2[2]
      SWAP1 			p2[2]
      PUSH 20			p2[2]
      MUL 			p2[2]
      ADD 			p2[2]
      DUP2 			p2[2] = c2
      SWAP1 			p2[2] = c2
      MSTORE 			p2[2] = c2
      POP 			p2[2] = c2
      DUP4 			d2
      DUP2 			p2
      PUSH 3			3
      DUP2 			p2[3]
      MLOAD 			p2[3]
      DUP2 			p2[3]
      LT 			p2[3]
      ISZERO 			p2[3]
      ISZERO 			p2[3]
      PUSH [tag] 111			p2[3]
      JUMPI 			p2[3]
      INVALID 			p2[3]
    tag 111			p2[3]
      JUMPDEST 			p2[3]
      SWAP1 			p2[3]
      PUSH 20			p2[3]
      ADD 			p2[3]
      SWAP1 			p2[3]
      PUSH 20			p2[3]
      MUL 			p2[3]
      ADD 			p2[3]
      DUP2 			p2[3] = d2
      SWAP1 			p2[3] = d2
      MSTORE 			p2[3] = d2
      POP 			p2[3] = d2
      PUSH [tag] 112			pairing(p1, p2)
      DUP3 			p1
      DUP3 			p2
      PUSH [tag] 113			pairing
      JUMP [in]			pairing(p1, p2)
    tag 112			pairing(p1, p2)
      JUMPDEST 			pairing(p1, p2)
      SWAP3 			return pairing(p1, p2)
      POP 			return pairing(p1, p2)
      POP 			return pairing(p1, p2)
      POP 			return pairing(p1, p2)
      SWAP9 			function pairingProd4(\n      ...
      SWAP8 			function pairingProd4(\n      ...
      POP 			function pairingProd4(\n      ...
      POP 			function pairingProd4(\n      ...
      POP 			function pairingProd4(\n      ...
      POP 			function pairingProd4(\n      ...
      POP 			function pairingProd4(\n      ...
      POP 			function pairingProd4(\n      ...
      POP 			function pairingProd4(\n      ...
      POP 			function pairingProd4(\n      ...
      JUMP [out]			function pairingProd4(\n      ...
    tag 113			function pairing(G1Point[] mem...
      JUMPDEST 			function pairing(G1Point[] mem...
      PUSH 0			bool
      DUP2 			p2
      MLOAD 			p2.length
      DUP4 			p1
      MLOAD 			p1.length
      EQ 			p1.length == p2.length
      ISZERO 			require(p1.length == p2.length...
      ISZERO 			require(p1.length == p2.length...
      PUSH [tag] 115			require(p1.length == p2.length...
      JUMPI 			require(p1.length == p2.length...
      PUSH 0			require(p1.length == p2.length...
      DUP1 			require(p1.length == p2.length...
      REVERT 			require(p1.length == p2.length...
    tag 115			require(p1.length == p2.length...
      JUMPDEST 			require(p1.length == p2.length...
      PUSH 0			uint elements
      DUP4 			p1
      MLOAD 			p1.length
      SWAP1 			uint elements = p1.length
      POP 			uint elements = p1.length
      PUSH 0			uint inputSize
      PUSH 6			6
      DUP3 			elements
      MUL 			elements * 6
      SWAP1 			uint inputSize = elements * 6
      POP 			uint inputSize = elements * 6
      PUSH 60			uint[] memory input
      DUP2 			inputSize
      PUSH 40			new uint[](inputSize)
      MLOAD 			new uint[](inputSize)
      SWAP1 			new uint[](inputSize)
      DUP1 			new uint[](inputSize)
      DUP3 			new uint[](inputSize)
      MSTORE 			new uint[](inputSize)
      DUP1 			new uint[](inputSize)
      PUSH 20			new uint[](inputSize)
      MUL 			new uint[](inputSize)
      PUSH 20			new uint[](inputSize)
      ADD 			new uint[](inputSize)
      DUP3 			new uint[](inputSize)
      ADD 			new uint[](inputSize)
      PUSH 40			new uint[](inputSize)
      MSTORE 			new uint[](inputSize)
      DUP1 			new uint[](inputSize)
      ISZERO 			new uint[](inputSize)
      PUSH [tag] 116			new uint[](inputSize)
      JUMPI 			new uint[](inputSize)
      DUP2 			new uint[](inputSize)
      PUSH 20			new uint[](inputSize)
      ADD 			new uint[](inputSize)
      PUSH 20			 i
      DUP3 			 uint2
      MUL 			\n    uint256 in
      DUP1 			08c1
      CODESIZE 			16871ca8d3
      DUP4 			d97816
      CODECOPY 			b68181585d97816a916871ca8d3c20...
      DUP1 			rnal
      DUP3 			256 in
      ADD 			uint256 internal 
      SWAP2 			fd47;\n    uint256 internal 
      POP 			fd47;\n    uint256 internal 
      POP 			library BN256G2 {\n    uint256...
      SWAP1 			new uint[](inputSize)
      POP 			new uint[](inputSize)
    tag 116			new uint[](inputSize)
      JUMPDEST 			new uint[](inputSize)
      POP 			new uint[](inputSize)
      SWAP1 			uint[] memory input = new uint...
      POP 			uint[] memory input = new uint...
      PUSH 0			uint i
      DUP1 			0
      SWAP1 			uint i = 0
      POP 			uint i = 0
    tag 117			for (uint i = 0; i < elements;...
      JUMPDEST 			for (uint i = 0; i < elements;...
      DUP4 			elements
      DUP2 			i
      LT 			i < elements
      ISZERO 			for (uint i = 0; i < elements;...
      PUSH [tag] 118			for (uint i = 0; i < elements;...
      JUMPI 			for (uint i = 0; i < elements;...
      DUP7 			p1
      DUP2 			i
      DUP2 			p1[i]
      MLOAD 			p1[i]
      DUP2 			p1[i]
      LT 			p1[i]
      ISZERO 			p1[i]
      ISZERO 			p1[i]
      PUSH [tag] 120			p1[i]
      JUMPI 			p1[i]
      INVALID 			p1[i]
    tag 120			p1[i]
      JUMPDEST 			p1[i]
      SWAP1 			p1[i]
      PUSH 20			p1[i]
      ADD 			p1[i]
      SWAP1 			p1[i]
      PUSH 20			p1[i]
      MUL 			p1[i]
      ADD 			p1[i]
      MLOAD 			p1[i]
      PUSH 0			p1[i].X
      ADD 			p1[i].X
      MLOAD 			p1[i].X
      DUP3 			input
      PUSH 0			0
      PUSH 6			6
      DUP5 			i
      MUL 			i * 6
      ADD 			i * 6 + 0
      DUP2 			input[i * 6 + 0]
      MLOAD 			input[i * 6 + 0]
      DUP2 			input[i * 6 + 0]
      LT 			input[i * 6 + 0]
      ISZERO 			input[i * 6 + 0]
      ISZERO 			input[i * 6 + 0]
      PUSH [tag] 121			input[i * 6 + 0]
      JUMPI 			input[i * 6 + 0]
      INVALID 			input[i * 6 + 0]
    tag 121			input[i * 6 + 0]
      JUMPDEST 			input[i * 6 + 0]
      SWAP1 			input[i * 6 + 0]
      PUSH 20			input[i * 6 + 0]
      ADD 			input[i * 6 + 0]
      SWAP1 			input[i * 6 + 0]
      PUSH 20			input[i * 6 + 0]
      MUL 			input[i * 6 + 0]
      ADD 			input[i * 6 + 0]
      DUP2 			input[i * 6 + 0] = p1[i].X
      DUP2 			input[i * 6 + 0] = p1[i].X
      MSTORE 			input[i * 6 + 0] = p1[i].X
      POP 			input[i * 6 + 0] = p1[i].X
      POP 			input[i * 6 + 0] = p1[i].X
      DUP7 			p1
      DUP2 			i
      DUP2 			p1[i]
      MLOAD 			p1[i]
      DUP2 			p1[i]
      LT 			p1[i]
      ISZERO 			p1[i]
      ISZERO 			p1[i]
      PUSH [tag] 122			p1[i]
      JUMPI 			p1[i]
      INVALID 			p1[i]
    tag 122			p1[i]
      JUMPDEST 			p1[i]
      SWAP1 			p1[i]
      PUSH 20			p1[i]
      ADD 			p1[i]
      SWAP1 			p1[i]
      PUSH 20			p1[i]
      MUL 			p1[i]
      ADD 			p1[i]
      MLOAD 			p1[i]
      PUSH 20			p1[i].Y
      ADD 			p1[i].Y
      MLOAD 			p1[i].Y
      DUP3 			input
      PUSH 1			1
      PUSH 6			6
      DUP5 			i
      MUL 			i * 6
      ADD 			i * 6 + 1
      DUP2 			input[i * 6 + 1]
      MLOAD 			input[i * 6 + 1]
      DUP2 			input[i * 6 + 1]
      LT 			input[i * 6 + 1]
      ISZERO 			input[i * 6 + 1]
      ISZERO 			input[i * 6 + 1]
      PUSH [tag] 123			input[i * 6 + 1]
      JUMPI 			input[i * 6 + 1]
      INVALID 			input[i * 6 + 1]
    tag 123			input[i * 6 + 1]
      JUMPDEST 			input[i * 6 + 1]
      SWAP1 			input[i * 6 + 1]
      PUSH 20			input[i * 6 + 1]
      ADD 			input[i * 6 + 1]
      SWAP1 			input[i * 6 + 1]
      PUSH 20			input[i * 6 + 1]
      MUL 			input[i * 6 + 1]
      ADD 			input[i * 6 + 1]
      DUP2 			input[i * 6 + 1] = p1[i].Y
      DUP2 			input[i * 6 + 1] = p1[i].Y
      MSTORE 			input[i * 6 + 1] = p1[i].Y
      POP 			input[i * 6 + 1] = p1[i].Y
      POP 			input[i * 6 + 1] = p1[i].Y
      DUP6 			p2
      DUP2 			i
      DUP2 			p2[i]
      MLOAD 			p2[i]
      DUP2 			p2[i]
      LT 			p2[i]
      ISZERO 			p2[i]
      ISZERO 			p2[i]
      PUSH [tag] 124			p2[i]
      JUMPI 			p2[i]
      INVALID 			p2[i]
    tag 124			p2[i]
      JUMPDEST 			p2[i]
      SWAP1 			p2[i]
      PUSH 20			p2[i]
      ADD 			p2[i]
      SWAP1 			p2[i]
      PUSH 20			p2[i]
      MUL 			p2[i]
      ADD 			p2[i]
      MLOAD 			p2[i]
      PUSH 0			p2[i].X
      ADD 			p2[i].X
      MLOAD 			p2[i].X
      PUSH 0			0
      PUSH 2			p2[i].X[0]
      DUP2 			p2[i].X[0]
      LT 			p2[i].X[0]
      ISZERO 			p2[i].X[0]
      ISZERO 			p2[i].X[0]
      PUSH [tag] 125			p2[i].X[0]
      JUMPI 			p2[i].X[0]
      INVALID 			p2[i].X[0]
    tag 125			p2[i].X[0]
      JUMPDEST 			p2[i].X[0]
      PUSH 20			p2[i].X[0]
      MUL 			p2[i].X[0]
      ADD 			p2[i].X[0]
      MLOAD 			p2[i].X[0]
      DUP3 			input
      PUSH 2			2
      PUSH 6			6
      DUP5 			i
      MUL 			i * 6
      ADD 			i * 6 + 2
      DUP2 			input[i * 6 + 2]
      MLOAD 			input[i * 6 + 2]
      DUP2 			input[i * 6 + 2]
      LT 			input[i * 6 + 2]
      ISZERO 			input[i * 6 + 2]
      ISZERO 			input[i * 6 + 2]
      PUSH [tag] 126			input[i * 6 + 2]
      JUMPI 			input[i * 6 + 2]
      INVALID 			input[i * 6 + 2]
    tag 126			input[i * 6 + 2]
      JUMPDEST 			input[i * 6 + 2]
      SWAP1 			input[i * 6 + 2]
      PUSH 20			input[i * 6 + 2]
      ADD 			input[i * 6 + 2]
      SWAP1 			input[i * 6 + 2]
      PUSH 20			input[i * 6 + 2]
      MUL 			input[i * 6 + 2]
      ADD 			input[i * 6 + 2]
      DUP2 			input[i * 6 + 2] = p2[i].X[0]
      DUP2 			input[i * 6 + 2] = p2[i].X[0]
      MSTORE 			input[i * 6 + 2] = p2[i].X[0]
      POP 			input[i * 6 + 2] = p2[i].X[0]
      POP 			input[i * 6 + 2] = p2[i].X[0]
      DUP6 			p2
      DUP2 			i
      DUP2 			p2[i]
      MLOAD 			p2[i]
      DUP2 			p2[i]
      LT 			p2[i]
      ISZERO 			p2[i]
      ISZERO 			p2[i]
      PUSH [tag] 127			p2[i]
      JUMPI 			p2[i]
      INVALID 			p2[i]
    tag 127			p2[i]
      JUMPDEST 			p2[i]
      SWAP1 			p2[i]
      PUSH 20			p2[i]
      ADD 			p2[i]
      SWAP1 			p2[i]
      PUSH 20			p2[i]
      MUL 			p2[i]
      ADD 			p2[i]
      MLOAD 			p2[i]
      PUSH 0			p2[i].X
      ADD 			p2[i].X
      MLOAD 			p2[i].X
      PUSH 1			1
      PUSH 2			p2[i].X[1]
      DUP2 			p2[i].X[1]
      LT 			p2[i].X[1]
      ISZERO 			p2[i].X[1]
      ISZERO 			p2[i].X[1]
      PUSH [tag] 128			p2[i].X[1]
      JUMPI 			p2[i].X[1]
      INVALID 			p2[i].X[1]
    tag 128			p2[i].X[1]
      JUMPDEST 			p2[i].X[1]
      PUSH 20			p2[i].X[1]
      MUL 			p2[i].X[1]
      ADD 			p2[i].X[1]
      MLOAD 			p2[i].X[1]
      DUP3 			input
      PUSH 3			3
      PUSH 6			6
      DUP5 			i
      MUL 			i * 6
      ADD 			i * 6 + 3
      DUP2 			input[i * 6 + 3]
      MLOAD 			input[i * 6 + 3]
      DUP2 			input[i * 6 + 3]
      LT 			input[i * 6 + 3]
      ISZERO 			input[i * 6 + 3]
      ISZERO 			input[i * 6 + 3]
      PUSH [tag] 129			input[i * 6 + 3]
      JUMPI 			input[i * 6 + 3]
      INVALID 			input[i * 6 + 3]
    tag 129			input[i * 6 + 3]
      JUMPDEST 			input[i * 6 + 3]
      SWAP1 			input[i * 6 + 3]
      PUSH 20			input[i * 6 + 3]
      ADD 			input[i * 6 + 3]
      SWAP1 			input[i * 6 + 3]
      PUSH 20			input[i * 6 + 3]
      MUL 			input[i * 6 + 3]
      ADD 			input[i * 6 + 3]
      DUP2 			input[i * 6 + 3] = p2[i].X[1]
      DUP2 			input[i * 6 + 3] = p2[i].X[1]
      MSTORE 			input[i * 6 + 3] = p2[i].X[1]
      POP 			input[i * 6 + 3] = p2[i].X[1]
      POP 			input[i * 6 + 3] = p2[i].X[1]
      DUP6 			p2
      DUP2 			i
      DUP2 			p2[i]
      MLOAD 			p2[i]
      DUP2 			p2[i]
      LT 			p2[i]
      ISZERO 			p2[i]
      ISZERO 			p2[i]
      PUSH [tag] 130			p2[i]
      JUMPI 			p2[i]
      INVALID 			p2[i]
    tag 130			p2[i]
      JUMPDEST 			p2[i]
      SWAP1 			p2[i]
      PUSH 20			p2[i]
      ADD 			p2[i]
      SWAP1 			p2[i]
      PUSH 20			p2[i]
      MUL 			p2[i]
      ADD 			p2[i]
      MLOAD 			p2[i]
      PUSH 20			p2[i].Y
      ADD 			p2[i].Y
      MLOAD 			p2[i].Y
      PUSH 0			0
      PUSH 2			p2[i].Y[0]
      DUP2 			p2[i].Y[0]
      LT 			p2[i].Y[0]
      ISZERO 			p2[i].Y[0]
      ISZERO 			p2[i].Y[0]
      PUSH [tag] 131			p2[i].Y[0]
      JUMPI 			p2[i].Y[0]
      INVALID 			p2[i].Y[0]
    tag 131			p2[i].Y[0]
      JUMPDEST 			p2[i].Y[0]
      PUSH 20			p2[i].Y[0]
      MUL 			p2[i].Y[0]
      ADD 			p2[i].Y[0]
      MLOAD 			p2[i].Y[0]
      DUP3 			input
      PUSH 4			4
      PUSH 6			6
      DUP5 			i
      MUL 			i * 6
      ADD 			i * 6 + 4
      DUP2 			input[i * 6 + 4]
      MLOAD 			input[i * 6 + 4]
      DUP2 			input[i * 6 + 4]
      LT 			input[i * 6 + 4]
      ISZERO 			input[i * 6 + 4]
      ISZERO 			input[i * 6 + 4]
      PUSH [tag] 132			input[i * 6 + 4]
      JUMPI 			input[i * 6 + 4]
      INVALID 			input[i * 6 + 4]
    tag 132			input[i * 6 + 4]
      JUMPDEST 			input[i * 6 + 4]
      SWAP1 			input[i * 6 + 4]
      PUSH 20			input[i * 6 + 4]
      ADD 			input[i * 6 + 4]
      SWAP1 			input[i * 6 + 4]
      PUSH 20			input[i * 6 + 4]
      MUL 			input[i * 6 + 4]
      ADD 			input[i * 6 + 4]
      DUP2 			input[i * 6 + 4] = p2[i].Y[0]
      DUP2 			input[i * 6 + 4] = p2[i].Y[0]
      MSTORE 			input[i * 6 + 4] = p2[i].Y[0]
      POP 			input[i * 6 + 4] = p2[i].Y[0]
      POP 			input[i * 6 + 4] = p2[i].Y[0]
      DUP6 			p2
      DUP2 			i
      DUP2 			p2[i]
      MLOAD 			p2[i]
      DUP2 			p2[i]
      LT 			p2[i]
      ISZERO 			p2[i]
      ISZERO 			p2[i]
      PUSH [tag] 133			p2[i]
      JUMPI 			p2[i]
      INVALID 			p2[i]
    tag 133			p2[i]
      JUMPDEST 			p2[i]
      SWAP1 			p2[i]
      PUSH 20			p2[i]
      ADD 			p2[i]
      SWAP1 			p2[i]
      PUSH 20			p2[i]
      MUL 			p2[i]
      ADD 			p2[i]
      MLOAD 			p2[i]
      PUSH 20			p2[i].Y
      ADD 			p2[i].Y
      MLOAD 			p2[i].Y
      PUSH 1			1
      PUSH 2			p2[i].Y[1]
      DUP2 			p2[i].Y[1]
      LT 			p2[i].Y[1]
      ISZERO 			p2[i].Y[1]
      ISZERO 			p2[i].Y[1]
      PUSH [tag] 134			p2[i].Y[1]
      JUMPI 			p2[i].Y[1]
      INVALID 			p2[i].Y[1]
    tag 134			p2[i].Y[1]
      JUMPDEST 			p2[i].Y[1]
      PUSH 20			p2[i].Y[1]
      MUL 			p2[i].Y[1]
      ADD 			p2[i].Y[1]
      MLOAD 			p2[i].Y[1]
      DUP3 			input
      PUSH 5			5
      PUSH 6			6
      DUP5 			i
      MUL 			i * 6
      ADD 			i * 6 + 5
      DUP2 			input[i * 6 + 5]
      MLOAD 			input[i * 6 + 5]
      DUP2 			input[i * 6 + 5]
      LT 			input[i * 6 + 5]
      ISZERO 			input[i * 6 + 5]
      ISZERO 			input[i * 6 + 5]
      PUSH [tag] 135			input[i * 6 + 5]
      JUMPI 			input[i * 6 + 5]
      INVALID 			input[i * 6 + 5]
    tag 135			input[i * 6 + 5]
      JUMPDEST 			input[i * 6 + 5]
      SWAP1 			input[i * 6 + 5]
      PUSH 20			input[i * 6 + 5]
      ADD 			input[i * 6 + 5]
      SWAP1 			input[i * 6 + 5]
      PUSH 20			input[i * 6 + 5]
      MUL 			input[i * 6 + 5]
      ADD 			input[i * 6 + 5]
      DUP2 			input[i * 6 + 5] = p2[i].Y[1]
      DUP2 			input[i * 6 + 5] = p2[i].Y[1]
      MSTORE 			input[i * 6 + 5] = p2[i].Y[1]
      POP 			input[i * 6 + 5] = p2[i].Y[1]
      POP 			input[i * 6 + 5] = p2[i].Y[1]
      DUP1 			i++
      DUP1 			i++
      PUSH 1			i++
      ADD 			i++
      SWAP2 			i++
      POP 			i++
      POP 			i++
      PUSH [tag] 117			for (uint i = 0; i < elements;...
      JUMP 			for (uint i = 0; i < elements;...
    tag 118			for (uint i = 0; i < elements;...
      JUMPDEST 			for (uint i = 0; i < elements;...
      POP 			for (uint i = 0; i < elements;...
      PUSH [tag] 136			uint[1] memory out
      PUSH [tag] 137			uint[1] memory out
      JUMP [in]			uint[1] memory out
    tag 136			uint[1] memory out
      JUMPDEST 			uint[1] memory out
      PUSH 0			bool success
      PUSH 20			0x20
      DUP3 			out
      PUSH 20			0x20
      DUP7 			inputSize
      MUL 			mul(inputSize, 0x20)
      PUSH 20			0x20
      DUP7 			input
      ADD 			add(input, 0x20)
      PUSH 0			0
      PUSH 8			8
      PUSH 7D0			2000
      GAS 			gas
      SUB 			sub(gas, 2000)
      CALL 			call(sub(gas, 2000), 8, 0, add...
      SWAP1 			success := call(sub(gas, 2000)...
      POP 			success := call(sub(gas, 2000)...
      DUP1 			success
      PUSH 0			0
      DUP2 			case 0 { invalid() }
      EQ 			case 0 { invalid() }
      PUSH [tag] 139			case 0 { invalid() }
      JUMPI 			case 0 { invalid() }
      PUSH [tag] 138			switch success case 0 { invali...
      JUMP 			switch success case 0 { invali...
    tag 139			case 0 { invalid() }
      JUMPDEST 			case 0 { invalid() }
      INVALID 			invalid()
    tag 138			switch success case 0 { invali...
      JUMPDEST 			switch success case 0 { invali...
      POP 			switch success case 0 { invali...
      DUP1 			success
      ISZERO 			require(success)
      ISZERO 			require(success)
      PUSH [tag] 140			require(success)
      JUMPI 			require(success)
      PUSH 0			require(success)
      DUP1 			require(success)
      REVERT 			require(success)
    tag 140			require(success)
      JUMPDEST 			require(success)
      PUSH 0			0
      DUP3 			out
      PUSH 0			0
      PUSH 1			out[0]
      DUP2 			out[0]
      LT 			out[0]
      ISZERO 			out[0]
      ISZERO 			out[0]
      PUSH [tag] 141			out[0]
      JUMPI 			out[0]
      INVALID 			out[0]
    tag 141			out[0]
      JUMPDEST 			out[0]
      PUSH 20			out[0]
      MUL 			out[0]
      ADD 			out[0]
      MLOAD 			out[0]
      EQ 			out[0] != 0
      ISZERO 			out[0] != 0
      SWAP6 			return out[0] != 0
      POP 			return out[0] != 0
      POP 			return out[0] != 0
      POP 			return out[0] != 0
      POP 			return out[0] != 0
      POP 			return out[0] != 0
      POP 			return out[0] != 0
      SWAP3 			function pairing(G1Point[] mem...
      SWAP2 			function pairing(G1Point[] mem...
      POP 			function pairing(G1Point[] mem...
      POP 			function pairing(G1Point[] mem...
      JUMP [out]			function pairing(G1Point[] mem...
    tag 11			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      PUSH 100			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      MLOAD 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      DUP1 			contract Verifier {\n    using...
      PUSH [tag] 142			contract Verifier {\n    using...
      PUSH [tag] 67			contract Verifier {\n    using...
      JUMP [in]			contract Verifier {\n    using...
    tag 142			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      PUSH 20			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH [tag] 143			contract Verifier {\n    using...
      PUSH [tag] 103			contract Verifier {\n    using...
      JUMP [in]			contract Verifier {\n    using...
    tag 143			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      PUSH 20			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH [tag] 144			contract Verifier {\n    using...
      PUSH [tag] 67			contract Verifier {\n    using...
      JUMP [in]			contract Verifier {\n    using...
    tag 144			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      POP 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      JUMP [out]			contract Verifier {\n    using...
    tag 36			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      PUSH 1E0			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      MLOAD 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      DUP1 			contract Verifier {\n    using...
      PUSH [tag] 145			contract Verifier {\n    using...
      PUSH [tag] 67			contract Verifier {\n    using...
      JUMP [in]			contract Verifier {\n    using...
    tag 145			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      PUSH 20			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH [tag] 146			contract Verifier {\n    using...
      PUSH [tag] 103			contract Verifier {\n    using...
      JUMP [in]			contract Verifier {\n    using...
    tag 146			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      PUSH 20			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH [tag] 147			contract Verifier {\n    using...
      PUSH [tag] 103			contract Verifier {\n    using...
      JUMP [in]			contract Verifier {\n    using...
    tag 147			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      PUSH 20			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH [tag] 148			contract Verifier {\n    using...
      PUSH [tag] 103			contract Verifier {\n    using...
      JUMP [in]			contract Verifier {\n    using...
    tag 148			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      PUSH 20			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH 60			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      POP 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      JUMP [out]			contract Verifier {\n    using...
    tag 41			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      DUP1 			contract Verifier {\n    using...
      MLOAD 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      DUP1 			contract Verifier {\n    using...
      PUSH 0			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      PUSH 20			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH 0			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      POP 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      JUMP [out]			contract Verifier {\n    using...
    tag 67			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      DUP1 			contract Verifier {\n    using...
      MLOAD 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      DUP1 			contract Verifier {\n    using...
      PUSH 0			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      PUSH 20			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH 0			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      POP 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      JUMP [out]			contract Verifier {\n    using...
    tag 73			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      PUSH 60			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      MLOAD 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      DUP1 			contract Verifier {\n    using...
      PUSH 3			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      PUSH 20			 i
      DUP3 			 uint2
      MUL 			\n    uint256 in
      DUP1 			08c1
      CODESIZE 			16871ca8d3
      DUP4 			d97816
      CODECOPY 			b68181585d97816a916871ca8d3c20...
      DUP1 			rnal
      DUP3 			256 in
      ADD 			uint256 internal 
      SWAP2 			fd47;\n    uint256 internal 
      POP 			fd47;\n    uint256 internal 
      POP 			library BN256G2 {\n    uint256...
      SWAP1 			contract Verifier {\n    using...
      POP 			contract Verifier {\n    using...
      POP 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      JUMP [out]			contract Verifier {\n    using...
    tag 83			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      PUSH 80			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      MLOAD 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      DUP1 			contract Verifier {\n    using...
      PUSH 4			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      PUSH 20			 i
      DUP3 			 uint2
      MUL 			\n    uint256 in
      DUP1 			08c1
      CODESIZE 			16871ca8d3
      DUP4 			d97816
      CODECOPY 			b68181585d97816a916871ca8d3c20...
      DUP1 			rnal
      DUP3 			256 in
      ADD 			uint256 internal 
      SWAP2 			fd47;\n    uint256 internal 
      POP 			fd47;\n    uint256 internal 
      POP 			library BN256G2 {\n    uint256...
      SWAP1 			contract Verifier {\n    using...
      POP 			contract Verifier {\n    using...
      POP 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      JUMP [out]			contract Verifier {\n    using...
    tag 103			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      PUSH 80			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      MLOAD 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      DUP1 			contract Verifier {\n    using...
      PUSH [tag] 149			contract Verifier {\n    using...
      PUSH [tag] 150			contract Verifier {\n    using...
      JUMP [in]			contract Verifier {\n    using...
    tag 149			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      PUSH 20			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH [tag] 151			contract Verifier {\n    using...
      PUSH [tag] 150			contract Verifier {\n    using...
      JUMP [in]			contract Verifier {\n    using...
    tag 151			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      POP 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      JUMP [out]			contract Verifier {\n    using...
    tag 137			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      PUSH 20			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      MLOAD 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      DUP1 			contract Verifier {\n    using...
      PUSH 1			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      PUSH 20			 i
      DUP3 			 uint2
      MUL 			\n    uint256 in
      DUP1 			08c1
      CODESIZE 			16871ca8d3
      DUP4 			d97816
      CODECOPY 			b68181585d97816a916871ca8d3c20...
      DUP1 			rnal
      DUP3 			256 in
      ADD 			uint256 internal 
      SWAP2 			fd47;\n    uint256 internal 
      POP 			fd47;\n    uint256 internal 
      POP 			library BN256G2 {\n    uint256...
      SWAP1 			contract Verifier {\n    using...
      POP 			contract Verifier {\n    using...
      POP 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      JUMP [out]			contract Verifier {\n    using...
    tag 150			contract Verifier {\n    using...
      JUMPDEST 			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      DUP1 			contract Verifier {\n    using...
      MLOAD 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      DUP2 			contract Verifier {\n    using...
      ADD 			contract Verifier {\n    using...
      PUSH 40			contract Verifier {\n    using...
      MSTORE 			contract Verifier {\n    using...
      DUP1 			contract Verifier {\n    using...
      PUSH 2			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      PUSH 20			 i
      DUP3 			 uint2
      MUL 			\n    uint256 in
      DUP1 			08c1
      CODESIZE 			16871ca8d3
      DUP4 			d97816
      CODECOPY 			b68181585d97816a916871ca8d3c20...
      DUP1 			rnal
      DUP3 			256 in
      ADD 			uint256 internal 
      SWAP2 			fd47;\n    uint256 internal 
      POP 			fd47;\n    uint256 internal 
      POP 			library BN256G2 {\n    uint256...
      SWAP1 			contract Verifier {\n    using...
      POP 			contract Verifier {\n    using...
      POP 			contract Verifier {\n    using...
      SWAP1 			contract Verifier {\n    using...
      JUMP [out]			contract Verifier {\n    using...
    .data
