.code
  PUSH 80			contract SimpleStorage {\n\n  ...
  PUSH 40			contract SimpleStorage {\n\n  ...
  MSTORE 			contract SimpleStorage {\n\n  ...
  CALLVALUE 			contract SimpleStorage {\n\n  ...
  DUP1 			olidity ^
  ISZERO 			a 
  PUSH [tag] 1			a 
  JUMPI 			a 
  PUSH 0			a
  DUP1 			n
  REVERT 			.0;\n\ncontrac
tag 1			a 
  JUMPDEST 			a 
  POP 			contract SimpleStorage {\n\n  ...
  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000			contract SimpleStorage {\n\n  ...
  DUP1 			contract SimpleStorage {\n\n  ...
  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000			contract SimpleStorage {\n\n  ...
  PUSH 0			contract SimpleStorage {\n\n  ...
  CODECOPY 			contract SimpleStorage {\n\n  ...
  PUSH 0			contract SimpleStorage {\n\n  ...
  RETURN 			contract SimpleStorage {\n\n  ...
.data
  0:
    .code
      PUSH 80			contract SimpleStorage {\n\n  ...
      PUSH 40			contract SimpleStorage {\n\n  ...
      MSTORE 			contract SimpleStorage {\n\n  ...
      CALLVALUE 			contract SimpleStorage {\n\n  ...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 1			a 
      JUMPI 			a 
      PUSH 0			a
      DUP1 			n
      REVERT 			.0;\n\ncontrac
    tag 1			a 
      JUMPDEST 			a 
      POP 			contract SimpleStorage {\n\n  ...
      PUSH 4			contract SimpleStorage {\n\n  ...
      CALLDATASIZE 			contract SimpleStorage {\n\n  ...
      LT 			contract SimpleStorage {\n\n  ...
      PUSH [tag] 2			contract SimpleStorage {\n\n  ...
      JUMPI 			contract SimpleStorage {\n\n  ...
      PUSH 0			contract SimpleStorage {\n\n  ...
      CALLDATALOAD 			contract SimpleStorage {\n\n  ...
      PUSH E0			contract SimpleStorage {\n\n  ...
      SHR 			contract SimpleStorage {\n\n  ...
      DUP1 			contract SimpleStorage {\n\n  ...
      PUSH 6279E43C			contract SimpleStorage {\n\n  ...
      EQ 			contract SimpleStorage {\n\n  ...
      PUSH [tag] 3			contract SimpleStorage {\n\n  ...
      JUMPI 			contract SimpleStorage {\n\n  ...
      DUP1 			contract SimpleStorage {\n\n  ...
      PUSH 783CE458			contract SimpleStorage {\n\n  ...
      EQ 			contract SimpleStorage {\n\n  ...
      PUSH [tag] 4			contract SimpleStorage {\n\n  ...
      JUMPI 			contract SimpleStorage {\n\n  ...
    tag 2			contract SimpleStorage {\n\n  ...
      JUMPDEST 			contract SimpleStorage {\n\n  ...
      PUSH 0			contract SimpleStorage {\n\n  ...
      DUP1 			contract SimpleStorage {\n\n  ...
      REVERT 			contract SimpleStorage {\n\n  ...
    tag 3			function echo(uint256 ini) pub...
      JUMPDEST 			function echo(uint256 ini) pub...
      PUSH [tag] 5			function echo(uint256 ini) pub...
      PUSH 4			function echo(uint256 ini) pub...
      DUP1 			function echo(uint256 ini) pub...
      CALLDATASIZE 			function echo(uint256 ini) pub...
      SUB 			function echo(uint256 ini) pub...
      PUSH 20			ty
      DUP2 			oli
      LT 			a solidity 
      ISZERO 			ag
      PUSH [tag] 6			ag
      JUMPI 			ag
      PUSH 0			r
      DUP1 			o
      REVERT 			5.0;\n\ncontra
    tag 6			ag
      JUMPDEST 			ag
      DUP2 			function echo(uint256 ini) pub...
      ADD 			function echo(uint256 ini) pub...
      SWAP1 			function echo(uint256 ini) pub...
      DUP1 			function echo(uint256 ini) pub...
      DUP1 			function echo(uint256 ini) pub...
      CALLDATALOAD 			function echo(uint256 ini) pub...
      SWAP1 			function echo(uint256 ini) pub...
      PUSH 20			function echo(uint256 ini) pub...
      ADD 			function echo(uint256 ini) pub...
      SWAP1 			function echo(uint256 ini) pub...
      SWAP3 			function echo(uint256 ini) pub...
      SWAP2 			function echo(uint256 ini) pub...
      SWAP1 			function echo(uint256 ini) pub...
      POP 			function echo(uint256 ini) pub...
      POP 			function echo(uint256 ini) pub...
      POP 			function echo(uint256 ini) pub...
      PUSH [tag] 7			function echo(uint256 ini) pub...
      JUMP [in]			function echo(uint256 ini) pub...
    tag 5			function echo(uint256 ini) pub...
      JUMPDEST 			function echo(uint256 ini) pub...
      PUSH 40			function echo(uint256 ini) pub...
      MLOAD 			function echo(uint256 ini) pub...
      DUP1 			function echo(uint256 ini) pub...
      DUP3 			function echo(uint256 ini) pub...
      DUP2 			function echo(uint256 ini) pub...
      MSTORE 			function echo(uint256 ini) pub...
      PUSH 20			function echo(uint256 ini) pub...
      ADD 			function echo(uint256 ini) pub...
      SWAP2 			function echo(uint256 ini) pub...
      POP 			function echo(uint256 ini) pub...
      POP 			function echo(uint256 ini) pub...
      PUSH 40			function echo(uint256 ini) pub...
      MLOAD 			function echo(uint256 ini) pub...
      DUP1 			function echo(uint256 ini) pub...
      SWAP2 			function echo(uint256 ini) pub...
      SUB 			function echo(uint256 ini) pub...
      SWAP1 			function echo(uint256 ini) pub...
      RETURN 			function echo(uint256 ini) pub...
    tag 4			function expmod(uint256 base, ...
      JUMPDEST 			function expmod(uint256 base, ...
      PUSH [tag] 8			function expmod(uint256 base, ...
      PUSH 4			function expmod(uint256 base, ...
      DUP1 			function expmod(uint256 base, ...
      CALLDATASIZE 			function expmod(uint256 base, ...
      SUB 			function expmod(uint256 base, ...
      PUSH 60			ty
      DUP2 			oli
      LT 			a solidity 
      ISZERO 			ag
      PUSH [tag] 9			ag
      JUMPI 			ag
      PUSH 0			r
      DUP1 			o
      REVERT 			5.0;\n\ncontra
    tag 9			ag
      JUMPDEST 			ag
      DUP2 			function expmod(uint256 base, ...
      ADD 			function expmod(uint256 base, ...
      SWAP1 			function expmod(uint256 base, ...
      DUP1 			function expmod(uint256 base, ...
      DUP1 			function expmod(uint256 base, ...
      CALLDATALOAD 			function expmod(uint256 base, ...
      SWAP1 			function expmod(uint256 base, ...
      PUSH 20			function expmod(uint256 base, ...
      ADD 			function expmod(uint256 base, ...
      SWAP1 			function expmod(uint256 base, ...
      SWAP3 			function expmod(uint256 base, ...
      SWAP2 			function expmod(uint256 base, ...
      SWAP1 			function expmod(uint256 base, ...
      DUP1 			function expmod(uint256 base, ...
      CALLDATALOAD 			function expmod(uint256 base, ...
      SWAP1 			function expmod(uint256 base, ...
      PUSH 20			function expmod(uint256 base, ...
      ADD 			function expmod(uint256 base, ...
      SWAP1 			function expmod(uint256 base, ...
      SWAP3 			function expmod(uint256 base, ...
      SWAP2 			function expmod(uint256 base, ...
      SWAP1 			function expmod(uint256 base, ...
      DUP1 			function expmod(uint256 base, ...
      CALLDATALOAD 			function expmod(uint256 base, ...
      SWAP1 			function expmod(uint256 base, ...
      PUSH 20			function expmod(uint256 base, ...
      ADD 			function expmod(uint256 base, ...
      SWAP1 			function expmod(uint256 base, ...
      SWAP3 			function expmod(uint256 base, ...
      SWAP2 			function expmod(uint256 base, ...
      SWAP1 			function expmod(uint256 base, ...
      POP 			function expmod(uint256 base, ...
      POP 			function expmod(uint256 base, ...
      POP 			function expmod(uint256 base, ...
      PUSH [tag] 10			function expmod(uint256 base, ...
      JUMP [in]			function expmod(uint256 base, ...
    tag 8			function expmod(uint256 base, ...
      JUMPDEST 			function expmod(uint256 base, ...
      PUSH 40			function expmod(uint256 base, ...
      MLOAD 			function expmod(uint256 base, ...
      DUP1 			function expmod(uint256 base, ...
      DUP3 			function expmod(uint256 base, ...
      DUP2 			function expmod(uint256 base, ...
      MSTORE 			function expmod(uint256 base, ...
      PUSH 20			function expmod(uint256 base, ...
      ADD 			function expmod(uint256 base, ...
      SWAP2 			function expmod(uint256 base, ...
      POP 			function expmod(uint256 base, ...
      POP 			function expmod(uint256 base, ...
      PUSH 40			function expmod(uint256 base, ...
      MLOAD 			function expmod(uint256 base, ...
      DUP1 			function expmod(uint256 base, ...
      SWAP2 			function expmod(uint256 base, ...
      SUB 			function expmod(uint256 base, ...
      SWAP1 			function expmod(uint256 base, ...
      RETURN 			function expmod(uint256 base, ...
    tag 7			function echo(uint256 ini) pub...
      JUMPDEST 			function echo(uint256 ini) pub...
      PUSH 0			uint256
      DUP2 			ini
      SWAP1 			return ini
      POP 			return ini
      SWAP2 			function echo(uint256 ini) pub...
      SWAP1 			function echo(uint256 ini) pub...
      POP 			function echo(uint256 ini) pub...
      JUMP [out]			function echo(uint256 ini) pub...
    tag 10			function expmod(uint256 base, ...
      JUMPDEST 			function expmod(uint256 base, ...
      PUSH 0			uint256 o
      DUP1 			bool success
      PUSH 40			0x40
      MLOAD 			mload(0x40)
      PUSH 20			0x20
      DUP2 			p
      MSTORE 			mstore(p, 0x20)
      PUSH 20			0x20
      DUP1 			0x20
      DUP3 			p
      ADD 			add(p, 0x20)
      MSTORE 			mstore(add(p, 0x20), 0x20)
      PUSH 20			0x20
      PUSH 40			0x40
      DUP3 			p
      ADD 			add(p, 0x40)
      MSTORE 			mstore(add(p, 0x40), 0x20)
      DUP6 			base
      PUSH 60			0x60
      DUP3 			p
      ADD 			add(p, 0x60)
      MSTORE 			mstore(add(p, 0x60), base)
      DUP5 			e
      PUSH 80			0x80
      DUP3 			p
      ADD 			add(p, 0x80)
      MSTORE 			mstore(add(p, 0x80), e)
      DUP4 			m
      PUSH A0			0xa0
      DUP3 			p
      ADD 			add(p, 0xa0)
      MSTORE 			mstore(add(p, 0xa0), m)
      PUSH 20			0x20
      DUP2 			p
      PUSH C0			0xc0
      DUP4 			p
      PUSH 0			0
      PUSH 5			0x05
      PUSH 7D0			2000
      GAS 			gas
      SUB 			sub(gas, 2000)
      CALL 			call(sub(gas, 2000), 0x05, 0, ...
      SWAP2 			success := call(sub(gas, 2000)...
      POP 			success := call(sub(gas, 2000)...
      DUP1 			p
      MLOAD 			mload(p)
      SWAP3 			o := mload(p)
      POP 			o := mload(p)
      POP 			{\n        \n           let p ...
      DUP1 			success
      PUSH [tag] 13			require(success)
      JUMPI 			require(success)
      PUSH 0			require(success)
      DUP1 			require(success)
      REVERT 			require(success)
    tag 13			require(success)
      JUMPDEST 			require(success)
      DUP2 			o
      SWAP2 			return o
      POP 			return o
      POP 			return o
      SWAP4 			function expmod(uint256 base, ...
      SWAP3 			function expmod(uint256 base, ...
      POP 			function expmod(uint256 base, ...
      POP 			function expmod(uint256 base, ...
      POP 			function expmod(uint256 base, ...
      JUMP [out]			function expmod(uint256 base, ...
    .data
